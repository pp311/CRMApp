// <auto-generated />
using System;
using Lab2.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Lab2.Infrastructure.Migrations
{
    [DbContext(typeof(CRMDbContext))]
    [Migration("20230808041414_InitDb")]
    partial class InitDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Lab2.Domain.Entities.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Phone")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<double>("TotalSales")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("Phone", "Email")
                        .IsUnique()
                        .HasFilter("[Phone] IS NOT NULL AND [Email] IS NOT NULL");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "6422 Alverta Rapid, Antonioville, Netherlands",
                            Email = "King96@hotmail.com",
                            Name = "Mayert, Kohler and Lind",
                            Phone = "1-834-443-4275",
                            TotalSales = 47224.0
                        },
                        new
                        {
                            Id = 2,
                            Address = "4723 Eli Track, Tremblayton, Estonia",
                            Email = "Dayton_Sipes@gmail.com",
                            Name = "Kulas - Bartoletti",
                            Phone = "1-259-452-3900 x112",
                            TotalSales = 9334.0
                        },
                        new
                        {
                            Id = 3,
                            Address = "559 Blanche Ramp, Wilhelmville, Afghanistan",
                            Email = "Ernesto_Labadie@hotmail.com",
                            Name = "Bartell, Walsh and Dooley",
                            Phone = "1-838-384-3597",
                            TotalSales = 1127.0
                        },
                        new
                        {
                            Id = 4,
                            Address = "267 Cremin Falls, Lake Giuseppe, Slovenia",
                            Email = "Antonette.Funk@gmail.com",
                            Name = "Keeling - Osinski",
                            Phone = "381-292-1288 x752",
                            TotalSales = 10361.0
                        },
                        new
                        {
                            Id = 5,
                            Address = "220 Hollis Forge, Port Reginald, Nepal",
                            Email = "Audie55@yahoo.com",
                            Name = "Rowe and Sons",
                            Phone = "204-393-0231 x53231",
                            TotalSales = 39870.0
                        },
                        new
                        {
                            Id = 6,
                            Address = "668 Stanton Trafficway, Port Ashleetown, American Samoa",
                            Email = "Marie.Littel@yahoo.com",
                            Name = "Runolfsson, Weber and Ondricka",
                            Phone = "377.424.4480",
                            TotalSales = 46663.0
                        },
                        new
                        {
                            Id = 7,
                            Address = "26284 Queenie Stream, Kielchester, Fiji",
                            Email = "Theresia32@gmail.com",
                            Name = "Carroll, Robel and Bayer",
                            Phone = "529.394.3623 x2101",
                            TotalSales = 4650.0
                        },
                        new
                        {
                            Id = 8,
                            Address = "875 Joyce Extensions, Emiliotown, Antarctica (the territory South of 60 deg S)",
                            Email = "Sheila4@gmail.com",
                            Name = "Watsica LLC",
                            Phone = "1-402-946-5488 x339",
                            TotalSales = 24685.0
                        },
                        new
                        {
                            Id = 9,
                            Address = "2582 Tristin Club, South Dewayne, Jordan",
                            Email = "Vicente_Wilkinson47@hotmail.com",
                            Name = "Sauer - Kerluke",
                            Phone = "(439) 906-6329 x284",
                            TotalSales = 16381.0
                        },
                        new
                        {
                            Id = 10,
                            Address = "47677 Prosacco Plains, Janickhaven, Central African Republic",
                            Email = "Kenyatta.Gorczany36@yahoo.com",
                            Name = "Schultz, Kub and Koch",
                            Phone = "(329) 271-8009 x46123",
                            TotalSales = 19632.0
                        },
                        new
                        {
                            Id = 11,
                            Address = "3123 Gottlieb Extensions, North Elenora, Fiji",
                            Email = "Rocio_Weissnat@hotmail.com",
                            Name = "Bogan - Effertz",
                            Phone = "692-288-9930 x096",
                            TotalSales = 21417.0
                        },
                        new
                        {
                            Id = 12,
                            Address = "673 Conn Stravenue, East Ellsworthbury, Trinidad and Tobago",
                            Email = "Aliyah92@hotmail.com",
                            Name = "Hammes Group",
                            Phone = "409.258.5375 x83256",
                            TotalSales = 34840.0
                        },
                        new
                        {
                            Id = 13,
                            Address = "334 Pascale Port, West Allene, Ethiopia",
                            Email = "Vicky34@gmail.com",
                            Name = "Dietrich - Kessler",
                            Phone = "444-296-7080",
                            TotalSales = 40201.0
                        },
                        new
                        {
                            Id = 14,
                            Address = "45940 Lind Shores, New Meagan, Montenegro",
                            Email = "Mylene.Monahan61@hotmail.com",
                            Name = "Wuckert LLC",
                            Phone = "224.221.0067 x693",
                            TotalSales = 34888.0
                        },
                        new
                        {
                            Id = 15,
                            Address = "18686 Maribel Stream, Port Holden, Brunei Darussalam",
                            Email = "Cullen20@gmail.com",
                            Name = "Mayert, Gorczany and Huel",
                            Phone = "753-872-7201 x50024",
                            TotalSales = 44230.0
                        },
                        new
                        {
                            Id = 16,
                            Address = "5064 Ruecker Ford, East Jarod, Kyrgyz Republic",
                            Email = "Destiny_Smith@yahoo.com",
                            Name = "Douglas - Muller",
                            Phone = "1-461-904-4862 x3238",
                            TotalSales = 1472.0
                        },
                        new
                        {
                            Id = 17,
                            Address = "79495 Denis Canyon, Port Christop, British Indian Ocean Territory (Chagos Archipelago)",
                            Email = "Johnny_Torp80@gmail.com",
                            Name = "Gulgowski - Spencer",
                            Phone = "1-557-992-0042 x59441",
                            TotalSales = 43992.0
                        },
                        new
                        {
                            Id = 18,
                            Address = "406 Lemuel Garden, Brannonview, Republic of Korea",
                            Email = "Alisa.Beer35@hotmail.com",
                            Name = "McClure and Sons",
                            Phone = "(519) 573-6216 x747",
                            TotalSales = 16430.0
                        },
                        new
                        {
                            Id = 19,
                            Address = "866 Pfannerstill Heights, Port Alexis, Armenia",
                            Email = "Eliza.Kessler59@gmail.com",
                            Name = "Huel, Waelchi and Friesen",
                            Phone = "1-900-844-0596 x22286",
                            TotalSales = 38141.0
                        },
                        new
                        {
                            Id = 20,
                            Address = "76687 Colton Falls, Spinkaberg, Anguilla",
                            Email = "Linda.Waters@gmail.com",
                            Name = "Heidenreich, Quigley and Casper",
                            Phone = "826.411.0788 x67560",
                            TotalSales = 17867.0
                        },
                        new
                        {
                            Id = 21,
                            Address = "89981 Katelyn Mews, East Christview, Lebanon",
                            Email = "Frances.Boyer@hotmail.com",
                            Name = "McLaughlin, Lowe and Watsica",
                            Phone = "1-843-422-6847",
                            TotalSales = 8218.0
                        },
                        new
                        {
                            Id = 22,
                            Address = "07865 Creola Shoal, Joeport, Marshall Islands",
                            Email = "Brandyn.Boyer54@yahoo.com",
                            Name = "Lynch, Wyman and Stehr",
                            Phone = "(773) 414-4993",
                            TotalSales = 46775.0
                        },
                        new
                        {
                            Id = 23,
                            Address = "231 Monroe Ford, North Nels, Kyrgyz Republic",
                            Email = "Magali68@yahoo.com",
                            Name = "Hagenes - Feeney",
                            Phone = "(728) 200-7085 x7762",
                            TotalSales = 12669.0
                        },
                        new
                        {
                            Id = 24,
                            Address = "7857 Sibyl Flat, New Dashawn, Equatorial Guinea",
                            Email = "Nasir_Morar@yahoo.com",
                            Name = "Johnson - Hahn",
                            Phone = "1-596-282-6503",
                            TotalSales = 12128.0
                        },
                        new
                        {
                            Id = 25,
                            Address = "002 Isadore Orchard, Dylanfort, Libyan Arab Jamahiriya",
                            Email = "Stephanie.Zulauf56@gmail.com",
                            Name = "Marvin - Corkery",
                            Phone = "254.732.4935 x55933",
                            TotalSales = 41468.0
                        });
                });

            modelBuilder.Entity("Lab2.Domain.Entities.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Phone")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("Phone", "Email")
                        .IsUnique()
                        .HasFilter("[Phone] IS NOT NULL");

                    b.ToTable("Contacts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccountId = 5,
                            Email = "Elena.Rogahn@hotmail.com",
                            Name = "Marge Pfannerstill",
                            Phone = "1-204-493-2723 x5202"
                        },
                        new
                        {
                            Id = 2,
                            AccountId = 17,
                            Email = "Judson27@yahoo.com",
                            Name = "Foster Schinner",
                            Phone = "1-965-201-5881"
                        },
                        new
                        {
                            Id = 3,
                            AccountId = 10,
                            Email = "Kaia_Feeney57@gmail.com",
                            Name = "Sadie Watsica",
                            Phone = "1-462-532-1366 x37943"
                        },
                        new
                        {
                            Id = 4,
                            AccountId = 10,
                            Email = "Juana_Harvey30@gmail.com",
                            Name = "Rudy Abshire",
                            Phone = "(504) 662-5153 x184"
                        },
                        new
                        {
                            Id = 5,
                            AccountId = 5,
                            Email = "Santa_Spinka95@yahoo.com",
                            Name = "Garland Wilkinson",
                            Phone = "1-230-753-9758 x87701"
                        },
                        new
                        {
                            Id = 6,
                            AccountId = 24,
                            Email = "Osvaldo.Reichert62@gmail.com",
                            Name = "Sammy Kihn",
                            Phone = "1-917-513-0278"
                        },
                        new
                        {
                            Id = 7,
                            AccountId = 18,
                            Email = "Otis.Frami71@gmail.com",
                            Name = "Lane Runte",
                            Phone = "1-871-870-6065 x793"
                        },
                        new
                        {
                            Id = 8,
                            AccountId = 23,
                            Email = "Brock.McCullough@hotmail.com",
                            Name = "Adah Witting",
                            Phone = "(552) 255-1504 x79853"
                        },
                        new
                        {
                            Id = 9,
                            AccountId = 2,
                            Email = "Helen91@yahoo.com",
                            Name = "Evans Gibson",
                            Phone = "846-662-8376"
                        },
                        new
                        {
                            Id = 10,
                            AccountId = 25,
                            Email = "Gilbert33@yahoo.com",
                            Name = "Delphia Smitham",
                            Phone = "1-900-857-0467"
                        },
                        new
                        {
                            Id = 11,
                            AccountId = 6,
                            Email = "Karlee_OConnell@yahoo.com",
                            Name = "Brice Kessler",
                            Phone = "872.682.9771 x322"
                        },
                        new
                        {
                            Id = 12,
                            AccountId = 13,
                            Email = "Frederic_Mohr67@hotmail.com",
                            Name = "Porter Boyle",
                            Phone = "1-372-341-1642"
                        },
                        new
                        {
                            Id = 13,
                            AccountId = 1,
                            Email = "Alyce.Gulgowski@gmail.com",
                            Name = "Jazlyn McKenzie",
                            Phone = "1-471-637-6155 x330"
                        },
                        new
                        {
                            Id = 14,
                            AccountId = 6,
                            Email = "Elwin84@yahoo.com",
                            Name = "Manuel Johnson",
                            Phone = "372-703-6678 x80812"
                        },
                        new
                        {
                            Id = 15,
                            AccountId = 8,
                            Email = "Chet_Turner@hotmail.com",
                            Name = "Ryley Hayes",
                            Phone = "790-901-2583 x5388"
                        },
                        new
                        {
                            Id = 16,
                            AccountId = 3,
                            Email = "Guy66@hotmail.com",
                            Name = "Berniece McGlynn",
                            Phone = "284.287.5777 x82962"
                        },
                        new
                        {
                            Id = 17,
                            AccountId = 5,
                            Email = "Emory.Rodriguez18@gmail.com",
                            Name = "Isabella Schneider",
                            Phone = "1-417-237-6400"
                        },
                        new
                        {
                            Id = 18,
                            AccountId = 5,
                            Email = "Bertrand.Feest25@gmail.com",
                            Name = "Wilfred Jaskolski",
                            Phone = "(461) 883-7246"
                        },
                        new
                        {
                            Id = 19,
                            AccountId = 10,
                            Email = "Chandler_MacGyver@hotmail.com",
                            Name = "Joany Davis",
                            Phone = "(844) 602-4411 x145"
                        },
                        new
                        {
                            Id = 20,
                            AccountId = 25,
                            Email = "Elnora17@yahoo.com",
                            Name = "Lilian Schowalter",
                            Phone = "1-317-334-1074 x9186"
                        },
                        new
                        {
                            Id = 21,
                            AccountId = 17,
                            Email = "Hortense_Bode57@gmail.com",
                            Name = "Sydney Bartell",
                            Phone = "1-454-665-4583"
                        },
                        new
                        {
                            Id = 22,
                            AccountId = 14,
                            Email = "Samanta_Larson@hotmail.com",
                            Name = "Elsa Kunde",
                            Phone = "(315) 699-0397 x334"
                        },
                        new
                        {
                            Id = 23,
                            AccountId = 1,
                            Email = "Trace6@gmail.com",
                            Name = "Maurice Hauck",
                            Phone = "(434) 729-3995 x396"
                        },
                        new
                        {
                            Id = 24,
                            AccountId = 5,
                            Email = "Diamond_Nicolas84@yahoo.com",
                            Name = "Hunter Mosciski",
                            Phone = "405.985.1272"
                        },
                        new
                        {
                            Id = 25,
                            AccountId = 24,
                            Email = "Alexandrea.Yundt@yahoo.com",
                            Name = "Rylan Lowe",
                            Phone = "(623) 543-3549 x866"
                        },
                        new
                        {
                            Id = 26,
                            AccountId = 7,
                            Email = "Annie_Carter@gmail.com",
                            Name = "Brant Pacocha",
                            Phone = "938.825.6819 x04490"
                        },
                        new
                        {
                            Id = 27,
                            AccountId = 19,
                            Email = "Savanah.Murazik@gmail.com",
                            Name = "Hazel Bayer",
                            Phone = "1-261-244-6618 x873"
                        },
                        new
                        {
                            Id = 28,
                            AccountId = 8,
                            Email = "Lenny8@yahoo.com",
                            Name = "Gayle Sipes",
                            Phone = "(889) 977-7370 x92074"
                        },
                        new
                        {
                            Id = 29,
                            AccountId = 8,
                            Email = "Kip33@gmail.com",
                            Name = "Kirsten Sipes",
                            Phone = "1-418-549-5914"
                        },
                        new
                        {
                            Id = 30,
                            AccountId = 11,
                            Email = "Albina_Harvey26@hotmail.com",
                            Name = "Johnpaul Heller",
                            Phone = "396-569-8232"
                        },
                        new
                        {
                            Id = 31,
                            AccountId = 13,
                            Email = "Mollie5@yahoo.com",
                            Name = "Alverta Yundt",
                            Phone = "1-357-241-7384 x0588"
                        },
                        new
                        {
                            Id = 32,
                            AccountId = 8,
                            Email = "Coy13@gmail.com",
                            Name = "Adella Lueilwitz",
                            Phone = "351.978.7566 x7179"
                        },
                        new
                        {
                            Id = 33,
                            AccountId = 9,
                            Email = "Domenico90@hotmail.com",
                            Name = "Ara Sipes",
                            Phone = "(679) 303-5417 x984"
                        },
                        new
                        {
                            Id = 34,
                            AccountId = 10,
                            Email = "Zora_Kunze@yahoo.com",
                            Name = "Vern Barrows",
                            Phone = "341-913-9563 x051"
                        },
                        new
                        {
                            Id = 35,
                            AccountId = 21,
                            Email = "Michelle.Lowe71@yahoo.com",
                            Name = "Neha Beahan",
                            Phone = "1-301-670-3313"
                        },
                        new
                        {
                            Id = 36,
                            AccountId = 16,
                            Email = "Elmore74@hotmail.com",
                            Name = "Marquise Hessel",
                            Phone = "738-923-2884 x985"
                        },
                        new
                        {
                            Id = 37,
                            AccountId = 3,
                            Email = "Herta.Rodriguez@gmail.com",
                            Name = "Oren Blick",
                            Phone = "1-993-557-6935"
                        },
                        new
                        {
                            Id = 38,
                            AccountId = 2,
                            Email = "Kristopher.Bosco67@hotmail.com",
                            Name = "Dannie Beatty",
                            Phone = "1-533-362-3223 x0861"
                        },
                        new
                        {
                            Id = 39,
                            AccountId = 11,
                            Email = "Rod.Lynch6@yahoo.com",
                            Name = "Constantin Kautzer",
                            Phone = "321-417-1047 x15337"
                        },
                        new
                        {
                            Id = 40,
                            AccountId = 22,
                            Email = "Chet.Schimmel32@hotmail.com",
                            Name = "Charity Haley",
                            Phone = "576.596.4442 x721"
                        },
                        new
                        {
                            Id = 41,
                            AccountId = 7,
                            Email = "Hettie.Ortiz@gmail.com",
                            Name = "Bud Aufderhar",
                            Phone = "(476) 786-4990 x3758"
                        },
                        new
                        {
                            Id = 42,
                            AccountId = 9,
                            Email = "Russ_Hyatt9@yahoo.com",
                            Name = "Tanner Wehner",
                            Phone = "(717) 726-9281 x82196"
                        },
                        new
                        {
                            Id = 43,
                            AccountId = 24,
                            Email = "Dagmar_Schuster@yahoo.com",
                            Name = "Larry Marquardt",
                            Phone = "614-944-2193"
                        },
                        new
                        {
                            Id = 44,
                            AccountId = 21,
                            Email = "Kaleigh.Rosenbaum11@gmail.com",
                            Name = "Antoinette Keeling",
                            Phone = "396.323.3807 x71458"
                        },
                        new
                        {
                            Id = 45,
                            AccountId = 13,
                            Email = "Camden45@yahoo.com",
                            Name = "Omer Smith",
                            Phone = "848.622.1977 x0673"
                        },
                        new
                        {
                            Id = 46,
                            AccountId = 11,
                            Email = "Camille65@yahoo.com",
                            Name = "Ronny Klein",
                            Phone = "618-578-9001"
                        },
                        new
                        {
                            Id = 47,
                            AccountId = 5,
                            Email = "Jonathan.Klein@hotmail.com",
                            Name = "Deshaun Larkin",
                            Phone = "454.846.9740"
                        },
                        new
                        {
                            Id = 48,
                            AccountId = 9,
                            Email = "Hershel.Raynor72@yahoo.com",
                            Name = "Wilmer Schumm",
                            Phone = "1-730-302-7399"
                        },
                        new
                        {
                            Id = 49,
                            AccountId = 8,
                            Email = "Zita_Rowe96@gmail.com",
                            Name = "Rudolph Stroman",
                            Phone = "778-598-1592"
                        },
                        new
                        {
                            Id = 50,
                            AccountId = 23,
                            Email = "Aditya13@hotmail.com",
                            Name = "Jamir Gibson",
                            Phone = "(927) 803-5952 x514"
                        },
                        new
                        {
                            Id = 51,
                            AccountId = 14,
                            Email = "Jamir.McDermott@gmail.com",
                            Name = "Reinhold Mitchell",
                            Phone = "1-241-833-9040 x16938"
                        },
                        new
                        {
                            Id = 52,
                            AccountId = 1,
                            Email = "Marlee_Maggio@gmail.com",
                            Name = "Felipa Mitchell",
                            Phone = "1-594-831-6788 x146"
                        },
                        new
                        {
                            Id = 53,
                            AccountId = 10,
                            Email = "Adrienne4@yahoo.com",
                            Name = "Abbie Hoeger",
                            Phone = "(253) 890-9747 x776"
                        },
                        new
                        {
                            Id = 54,
                            AccountId = 20,
                            Email = "Mariam.Reilly79@hotmail.com",
                            Name = "Gust Runolfsson",
                            Phone = "900.234.1390 x4984"
                        },
                        new
                        {
                            Id = 55,
                            AccountId = 6,
                            Email = "Manley_Champlin79@hotmail.com",
                            Name = "Darron Ratke",
                            Phone = "400.722.9647 x0843"
                        },
                        new
                        {
                            Id = 56,
                            AccountId = 16,
                            Email = "Lauriane4@gmail.com",
                            Name = "Kenna Hane",
                            Phone = "(304) 708-2761 x7169"
                        },
                        new
                        {
                            Id = 57,
                            AccountId = 16,
                            Email = "Taryn_Price75@yahoo.com",
                            Name = "Stefanie Kovacek",
                            Phone = "1-252-221-4113 x397"
                        },
                        new
                        {
                            Id = 58,
                            AccountId = 25,
                            Email = "Paxton52@gmail.com",
                            Name = "Arno McLaughlin",
                            Phone = "515-799-5502"
                        },
                        new
                        {
                            Id = 59,
                            AccountId = 16,
                            Email = "Milan_Beier26@gmail.com",
                            Name = "Joan Bergnaum",
                            Phone = "1-368-526-4227 x5892"
                        },
                        new
                        {
                            Id = 60,
                            AccountId = 19,
                            Email = "Kolby_Block65@yahoo.com",
                            Name = "Rocky Graham",
                            Phone = "505.504.0617 x82023"
                        },
                        new
                        {
                            Id = 61,
                            AccountId = 20,
                            Email = "Jake65@gmail.com",
                            Name = "Grady Mertz",
                            Phone = "550.593.0250"
                        },
                        new
                        {
                            Id = 62,
                            AccountId = 5,
                            Email = "Megane_Hodkiewicz@hotmail.com",
                            Name = "Ida Reilly",
                            Phone = "627-363-5281"
                        },
                        new
                        {
                            Id = 63,
                            AccountId = 8,
                            Email = "Imani3@yahoo.com",
                            Name = "Suzanne Denesik",
                            Phone = "1-537-236-0696"
                        },
                        new
                        {
                            Id = 64,
                            AccountId = 19,
                            Email = "Lilly.Cassin@yahoo.com",
                            Name = "Bell Fisher",
                            Phone = "817-911-6239"
                        },
                        new
                        {
                            Id = 65,
                            AccountId = 3,
                            Email = "Cristopher6@yahoo.com",
                            Name = "Angel Pagac",
                            Phone = "982.650.3445"
                        },
                        new
                        {
                            Id = 66,
                            AccountId = 16,
                            Email = "Nettie44@yahoo.com",
                            Name = "Christy Collins",
                            Phone = "647-612-1287"
                        },
                        new
                        {
                            Id = 67,
                            AccountId = 16,
                            Email = "Maximus16@gmail.com",
                            Name = "Eudora Wehner",
                            Phone = "211.501.1589 x4143"
                        },
                        new
                        {
                            Id = 68,
                            AccountId = 25,
                            Email = "Irving49@yahoo.com",
                            Name = "Birdie Pfannerstill",
                            Phone = "1-699-629-1201 x7142"
                        },
                        new
                        {
                            Id = 69,
                            AccountId = 2,
                            Email = "Kevon.Green28@gmail.com",
                            Name = "Diego Pfeffer",
                            Phone = "581-843-8970"
                        },
                        new
                        {
                            Id = 70,
                            AccountId = 14,
                            Email = "Judge61@hotmail.com",
                            Name = "Soledad Skiles",
                            Phone = "1-643-454-2696 x891"
                        },
                        new
                        {
                            Id = 71,
                            AccountId = 6,
                            Email = "Enola_Collier@hotmail.com",
                            Name = "Savanna Wehner",
                            Phone = "641.588.3816 x88442"
                        },
                        new
                        {
                            Id = 72,
                            AccountId = 25,
                            Email = "Kelly.Will7@hotmail.com",
                            Name = "Kaylin Baumbach",
                            Phone = "466-420-3125"
                        },
                        new
                        {
                            Id = 73,
                            AccountId = 8,
                            Email = "Madilyn.Lemke62@gmail.com",
                            Name = "Leopoldo Crooks",
                            Phone = "1-663-557-3275 x9244"
                        },
                        new
                        {
                            Id = 74,
                            AccountId = 4,
                            Email = "Leatha_Kris21@hotmail.com",
                            Name = "Osvaldo Leuschke",
                            Phone = "(843) 413-2478 x1370"
                        },
                        new
                        {
                            Id = 75,
                            AccountId = 12,
                            Email = "Walker_Kuhlman@hotmail.com",
                            Name = "Carolanne Renner",
                            Phone = "(883) 914-8801 x8473"
                        },
                        new
                        {
                            Id = 76,
                            AccountId = 17,
                            Email = "Geraldine90@gmail.com",
                            Name = "Teresa Hoeger",
                            Phone = "541.230.6326 x22639"
                        },
                        new
                        {
                            Id = 77,
                            AccountId = 21,
                            Email = "Durward_OKon6@gmail.com",
                            Name = "Price Herzog",
                            Phone = "876.758.2278"
                        },
                        new
                        {
                            Id = 78,
                            AccountId = 7,
                            Email = "Gust.Goyette73@gmail.com",
                            Name = "Germaine Rau",
                            Phone = "1-410-717-7690 x92142"
                        },
                        new
                        {
                            Id = 79,
                            AccountId = 23,
                            Email = "Hellen_Connelly2@yahoo.com",
                            Name = "Max Swift",
                            Phone = "941.587.6478"
                        },
                        new
                        {
                            Id = 80,
                            AccountId = 2,
                            Email = "Matilda_Willms68@gmail.com",
                            Name = "Marjorie DuBuque",
                            Phone = "635.798.2537 x853"
                        },
                        new
                        {
                            Id = 81,
                            AccountId = 24,
                            Email = "Emiliano_Padberg@hotmail.com",
                            Name = "Ozella Turner",
                            Phone = "642.316.3133 x323"
                        },
                        new
                        {
                            Id = 82,
                            AccountId = 8,
                            Email = "Kristoffer86@yahoo.com",
                            Name = "Edwina Hoppe",
                            Phone = "1-331-311-6572 x53897"
                        },
                        new
                        {
                            Id = 83,
                            AccountId = 19,
                            Email = "Pierre.Adams90@hotmail.com",
                            Name = "Jillian Ortiz",
                            Phone = "(541) 296-2319"
                        },
                        new
                        {
                            Id = 84,
                            AccountId = 3,
                            Email = "Shawn28@gmail.com",
                            Name = "Norene Sporer",
                            Phone = "1-240-883-7490 x26253"
                        },
                        new
                        {
                            Id = 85,
                            AccountId = 15,
                            Email = "Uriah_Boyer@hotmail.com",
                            Name = "Bailee Hansen",
                            Phone = "(481) 635-6963 x588"
                        },
                        new
                        {
                            Id = 86,
                            AccountId = 15,
                            Email = "Geovanni62@hotmail.com",
                            Name = "Maximillian Hilll",
                            Phone = "(947) 569-8481"
                        },
                        new
                        {
                            Id = 87,
                            AccountId = 10,
                            Email = "Alicia19@yahoo.com",
                            Name = "Ewell Heller",
                            Phone = "1-738-601-6722 x673"
                        },
                        new
                        {
                            Id = 88,
                            AccountId = 2,
                            Email = "Dorcas.Kessler25@gmail.com",
                            Name = "Helmer Larkin",
                            Phone = "(540) 617-9009 x65982"
                        },
                        new
                        {
                            Id = 89,
                            AccountId = 12,
                            Email = "Brock1@hotmail.com",
                            Name = "Braulio Farrell",
                            Phone = "895.362.0926"
                        },
                        new
                        {
                            Id = 90,
                            AccountId = 12,
                            Email = "Elisha81@hotmail.com",
                            Name = "Fiona O'Keefe",
                            Phone = "1-725-874-1433 x57444"
                        },
                        new
                        {
                            Id = 91,
                            AccountId = 3,
                            Email = "Tiana.Stark@hotmail.com",
                            Name = "Cydney Cole",
                            Phone = "790-915-7148 x5912"
                        },
                        new
                        {
                            Id = 92,
                            AccountId = 14,
                            Email = "Ellsworth.McDermott21@hotmail.com",
                            Name = "Florence Nader",
                            Phone = "1-564-828-8170 x8271"
                        },
                        new
                        {
                            Id = 93,
                            AccountId = 25,
                            Email = "Iva_Halvorson84@gmail.com",
                            Name = "Kyleigh Bosco",
                            Phone = "(771) 641-9906 x2665"
                        },
                        new
                        {
                            Id = 94,
                            AccountId = 10,
                            Email = "Gabriella95@yahoo.com",
                            Name = "Rachael Rosenbaum",
                            Phone = "1-594-482-5765"
                        },
                        new
                        {
                            Id = 95,
                            AccountId = 2,
                            Email = "Gertrude_Metz8@yahoo.com",
                            Name = "Maggie Zemlak",
                            Phone = "681.242.7631"
                        },
                        new
                        {
                            Id = 96,
                            AccountId = 13,
                            Email = "Donavon_Wisoky@yahoo.com",
                            Name = "Kaleb Kihn",
                            Phone = "(428) 741-3091"
                        },
                        new
                        {
                            Id = 97,
                            AccountId = 15,
                            Email = "Adriel40@gmail.com",
                            Name = "Philip Abbott",
                            Phone = "562.311.3786 x4354"
                        },
                        new
                        {
                            Id = 98,
                            AccountId = 14,
                            Email = "Dylan_Brakus@yahoo.com",
                            Name = "Paul Larson",
                            Phone = "900.239.6677 x3376"
                        },
                        new
                        {
                            Id = 99,
                            AccountId = 1,
                            Email = "Sammie_Bergstrom@gmail.com",
                            Name = "Albina Carter",
                            Phone = "(307) 656-5502 x4192"
                        },
                        new
                        {
                            Id = 100,
                            AccountId = 20,
                            Email = "Jamison_Dare41@yahoo.com",
                            Name = "Misael Keeling",
                            Phone = "723-751-2786 x232"
                        });
                });

            modelBuilder.Entity("Lab2.Domain.Entities.Deal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("ActualRevenue")
                        .HasColumnType("float");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<int>("LeadId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("LeadId")
                        .IsUnique();

                    b.ToTable("Deals");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ActualRevenue = 68936.0,
                            Description = "Quas et alias sunt nihil beatae perferendis ducimus repellendus minima voluptates libero porro.",
                            LeadId = 1,
                            Status = 2,
                            Title = "Doloremque eligendi dolores."
                        },
                        new
                        {
                            Id = 2,
                            ActualRevenue = 195596.0,
                            Description = "Temporibus rerum in suscipit quae dolore sed dolor voluptas animi modi laudantium aut voluptas et quis ipsum ut nihil aspernatur tempore consequuntur molestias iusto nam.",
                            LeadId = 2,
                            Status = 1,
                            Title = "Animi commodi id."
                        },
                        new
                        {
                            Id = 3,
                            ActualRevenue = 295393.0,
                            Description = "Et repellat deleniti et dicta quas earum rerum est repellat aperiam rerum possimus reprehenderit expedita dolorem eius beatae.",
                            LeadId = 3,
                            Status = 0,
                            Title = "Quia aut quis consectetur."
                        },
                        new
                        {
                            Id = 4,
                            ActualRevenue = 348296.0,
                            Description = "Voluptatibus quae tempore autem odio ut itaque est ullam est saepe sed qui qui aliquam repudiandae enim vel non quae doloribus eaque voluptatibus.",
                            LeadId = 4,
                            Status = 0,
                            Title = "Maxime earum minus ea."
                        },
                        new
                        {
                            Id = 5,
                            ActualRevenue = 324261.0,
                            Description = "Sunt itaque dolorum nostrum iure dignissimos voluptatem delectus tenetur harum dolorem mollitia id aspernatur.",
                            LeadId = 5,
                            Status = 2,
                            Title = "Occaecati corrupti ex eos nesciunt."
                        },
                        new
                        {
                            Id = 6,
                            ActualRevenue = 356248.0,
                            Description = "Tempore et qui nesciunt maxime architecto enim sed ut et atque in sapiente ea ut sed eaque rerum rerum aliquid.",
                            LeadId = 6,
                            Status = 0,
                            Title = "Qui saepe suscipit."
                        },
                        new
                        {
                            Id = 7,
                            ActualRevenue = 51275.0,
                            Description = "Architecto quaerat reprehenderit magni possimus expedita deserunt saepe sint aspernatur quia maiores est et assumenda saepe quaerat tenetur veritatis.",
                            LeadId = 7,
                            Status = 1,
                            Title = "Et ullam et."
                        },
                        new
                        {
                            Id = 8,
                            ActualRevenue = 384342.0,
                            Description = "Ullam quam doloribus pariatur fuga et autem ut molestiae inventore et minima.",
                            LeadId = 8,
                            Status = 1,
                            Title = "Accusamus molestiae tempore earum minima earum."
                        },
                        new
                        {
                            Id = 9,
                            ActualRevenue = 348529.0,
                            Description = "Quisquam blanditiis consequatur nesciunt magni quia consequatur vero deleniti odit perferendis adipisci qui expedita voluptas labore quaerat eum consequatur ad dignissimos fugit repudiandae et libero odio non quae.",
                            LeadId = 9,
                            Status = 0,
                            Title = "Aut nostrum quia quam ut et."
                        },
                        new
                        {
                            Id = 10,
                            ActualRevenue = 480275.0,
                            Description = "Qui quas ut ratione temporibus voluptas perspiciatis deleniti architecto quibusdam sunt excepturi ipsam libero hic.",
                            LeadId = 10,
                            Status = 0,
                            Title = "Eligendi autem similique sit."
                        },
                        new
                        {
                            Id = 11,
                            ActualRevenue = 178092.0,
                            Description = "Aliquid non cumque aliquam aperiam minus aut sint nostrum expedita ea voluptas placeat aspernatur necessitatibus cupiditate hic perferendis dolorum natus.",
                            LeadId = 11,
                            Status = 0,
                            Title = "Sapiente esse est."
                        },
                        new
                        {
                            Id = 12,
                            ActualRevenue = 459333.0,
                            Description = "Eum est iure qui ut rerum libero reiciendis aspernatur aut perspiciatis distinctio.",
                            LeadId = 12,
                            Status = 0,
                            Title = "Deleniti modi corporis cupiditate sed."
                        },
                        new
                        {
                            Id = 13,
                            ActualRevenue = 436238.0,
                            Description = "Nulla doloribus officia eos voluptatem perspiciatis provident exercitationem tempore omnis ex ex delectus voluptatem dolorum quos ad ut eum tenetur velit.",
                            LeadId = 13,
                            Status = 1,
                            Title = "Animi deleniti et."
                        },
                        new
                        {
                            Id = 14,
                            ActualRevenue = 325811.0,
                            Description = "Ut non sunt aperiam odit dignissimos accusamus sunt expedita possimus rem quo.",
                            LeadId = 14,
                            Status = 0,
                            Title = "Animi rerum optio fugit velit."
                        },
                        new
                        {
                            Id = 15,
                            ActualRevenue = 483196.0,
                            Description = "Veritatis ea exercitationem et debitis dignissimos aut et et qui omnis.",
                            LeadId = 15,
                            Status = 2,
                            Title = "Quae distinctio illum ut accusantium."
                        },
                        new
                        {
                            Id = 16,
                            ActualRevenue = 246373.0,
                            Description = "Et esse rerum dicta facilis non et inventore deleniti est ut aperiam officiis magni error eos voluptatem totam.",
                            LeadId = 16,
                            Status = 0,
                            Title = "Corrupti velit hic ipsum explicabo deserunt."
                        },
                        new
                        {
                            Id = 17,
                            ActualRevenue = 108536.0,
                            Description = "Dolores et veritatis et fugiat error soluta eveniet dolores nihil non ut fuga mollitia sit impedit nesciunt quia non aspernatur voluptas voluptatem maiores.",
                            LeadId = 17,
                            Status = 2,
                            Title = "Cumque similique perspiciatis quia perspiciatis dolorem."
                        },
                        new
                        {
                            Id = 18,
                            ActualRevenue = 422029.0,
                            Description = "Natus molestiae sit qui voluptas aut ut repellat suscipit perspiciatis tenetur ducimus ducimus et quisquam adipisci ea reiciendis aut occaecati distinctio quia consequuntur dolorem.",
                            LeadId = 18,
                            Status = 2,
                            Title = "Corrupti ab et perspiciatis."
                        },
                        new
                        {
                            Id = 19,
                            ActualRevenue = 179421.0,
                            Description = "Et natus autem atque eum placeat odio et voluptatem assumenda est.",
                            LeadId = 19,
                            Status = 1,
                            Title = "Quaerat non et."
                        },
                        new
                        {
                            Id = 20,
                            ActualRevenue = 84043.0,
                            Description = "Enim veniam consequatur quam voluptas voluptatibus consequuntur voluptatem sit ipsum dolore est dolore magnam eligendi voluptatem est omnis nesciunt repudiandae eveniet nam mollitia quia ratione aperiam voluptates quos doloremque.",
                            LeadId = 20,
                            Status = 2,
                            Title = "Accusantium minima consequatur."
                        },
                        new
                        {
                            Id = 21,
                            ActualRevenue = 261414.0,
                            Description = "Et reiciendis consectetur omnis possimus et sed quas minima enim voluptates enim quaerat.",
                            LeadId = 21,
                            Status = 2,
                            Title = "Voluptates mollitia voluptas similique possimus."
                        },
                        new
                        {
                            Id = 22,
                            ActualRevenue = 323079.0,
                            Description = "Qui in tenetur et et vel esse repudiandae quia tempora quos occaecati aliquid aliquam nihil ipsa.",
                            LeadId = 22,
                            Status = 0,
                            Title = "Et et deleniti reiciendis ut cum."
                        },
                        new
                        {
                            Id = 23,
                            ActualRevenue = 302063.0,
                            Description = "Unde aut sit voluptas consequuntur sit iusto et molestias rerum necessitatibus eum natus est.",
                            LeadId = 23,
                            Status = 0,
                            Title = "Deserunt ipsam qui aperiam."
                        },
                        new
                        {
                            Id = 24,
                            ActualRevenue = 311893.0,
                            Description = "Officia pariatur libero eos laudantium deleniti qui cum nihil et non nobis suscipit et ut.",
                            LeadId = 24,
                            Status = 0,
                            Title = "Qui nihil dolorum voluptatem veniam ut."
                        },
                        new
                        {
                            Id = 25,
                            ActualRevenue = 171096.0,
                            Description = "Id sunt eos qui voluptatem et cumque sunt nihil omnis quisquam voluptatum qui est dignissimos deleniti incidunt maxime saepe.",
                            LeadId = 25,
                            Status = 2,
                            Title = "Id sit quod numquam sit unde."
                        },
                        new
                        {
                            Id = 26,
                            ActualRevenue = 190052.0,
                            Description = "Repellat sit a alias dicta ad iste quisquam quos nihil deleniti nostrum nesciunt accusamus dolorem ad sit aut architecto laborum asperiores est in rerum illum deleniti ducimus.",
                            LeadId = 26,
                            Status = 0,
                            Title = "Eligendi minima et magni sit sequi."
                        },
                        new
                        {
                            Id = 27,
                            ActualRevenue = 17295.0,
                            Description = "Consequatur distinctio ex consequatur non quo deserunt quasi qui suscipit ducimus saepe eaque nisi assumenda voluptatibus nam natus nostrum.",
                            LeadId = 27,
                            Status = 1,
                            Title = "In expedita veniam deserunt."
                        },
                        new
                        {
                            Id = 28,
                            ActualRevenue = 278908.0,
                            Description = "Qui facilis beatae delectus et animi molestiae omnis atque magnam praesentium itaque aut ex maxime voluptas in.",
                            LeadId = 28,
                            Status = 0,
                            Title = "Incidunt ea dolor ex quos cum."
                        },
                        new
                        {
                            Id = 29,
                            ActualRevenue = 298990.0,
                            Description = "Delectus facilis at ut voluptas eaque facilis sapiente provident tenetur aut consectetur voluptatem corrupti fuga odio vitae magnam laborum expedita error quo molestiae recusandae illum vitae repellat ipsa et.",
                            LeadId = 29,
                            Status = 1,
                            Title = "Quas aut nulla voluptatibus molestias."
                        },
                        new
                        {
                            Id = 30,
                            ActualRevenue = 179215.0,
                            Description = "Aut ut nihil labore architecto in voluptas dolore laboriosam repudiandae at recusandae enim ea voluptate autem sed voluptas animi sed quia fuga quaerat sit dolor rerum et.",
                            LeadId = 30,
                            Status = 1,
                            Title = "Nam sed aut rerum non."
                        });
                });

            modelBuilder.Entity("Lab2.Domain.Entities.DealProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DealId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PricePerUnit")
                        .HasColumnType("float");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DealId");

                    b.HasIndex("ProductId");

                    b.ToTable("DealProducts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DealId = 16,
                            PricePerUnit = 39.0,
                            ProductId = 6,
                            Quantity = 11
                        },
                        new
                        {
                            Id = 2,
                            DealId = 10,
                            PricePerUnit = 45.0,
                            ProductId = 6,
                            Quantity = 5
                        },
                        new
                        {
                            Id = 3,
                            DealId = 14,
                            PricePerUnit = 75.0,
                            ProductId = 7,
                            Quantity = 45
                        },
                        new
                        {
                            Id = 4,
                            DealId = 3,
                            PricePerUnit = 82.0,
                            ProductId = 8,
                            Quantity = 27
                        },
                        new
                        {
                            Id = 5,
                            DealId = 29,
                            PricePerUnit = 38.0,
                            ProductId = 4,
                            Quantity = 93
                        });
                });

            modelBuilder.Entity("Lab2.Domain.Entities.Lead", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<string>("DisqualifiedDescription")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<int?>("DisqualifiedReason")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndedDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("EstimatedRevenue")
                        .HasColumnType("float");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Source")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("Leads");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccountId = 21,
                            Description = "Et sunt harum quasi et corrupti quia error aut deleniti dicta hic voluptas.",
                            EndedDate = new DateTime(2022, 11, 4, 13, 37, 24, 367, DateTimeKind.Local).AddTicks(3802),
                            EstimatedRevenue = 130724.0,
                            Source = 4,
                            Status = 2,
                            Title = "Similique fugit ut et cum nobis."
                        },
                        new
                        {
                            Id = 2,
                            AccountId = 8,
                            Description = "Excepturi nihil ut voluptatibus sint officiis ea reiciendis fugit dolor quo omnis debitis qui fuga eius rerum quasi magni esse ipsa eos porro reprehenderit distinctio nulla.",
                            EstimatedRevenue = 220520.0,
                            Source = 1,
                            Status = 1,
                            Title = "Quia numquam accusantium."
                        },
                        new
                        {
                            Id = 3,
                            AccountId = 2,
                            Description = "Ut quas autem quo voluptatem et et explicabo autem sed facere nihil dolor hic sit cum aut sed aliquid vero rerum eos quis libero vel.",
                            EndedDate = new DateTime(2022, 12, 27, 16, 24, 16, 904, DateTimeKind.Local).AddTicks(2842),
                            EstimatedRevenue = 341806.0,
                            Source = 4,
                            Status = 2,
                            Title = "Autem eos ratione dolores magni."
                        },
                        new
                        {
                            Id = 4,
                            AccountId = 1,
                            Description = "Mollitia porro quae qui excepturi vel non eius sint pariatur qui eos cum nesciunt adipisci est sequi dolorum et consequatur quisquam animi.",
                            EstimatedRevenue = 197821.0,
                            Source = 3,
                            Status = 1,
                            Title = "Quo natus pariatur."
                        },
                        new
                        {
                            Id = 5,
                            AccountId = 22,
                            Description = "Et id minima sed est modi dolores consectetur veritatis esse quia.",
                            EndedDate = new DateTime(2023, 2, 21, 19, 56, 55, 922, DateTimeKind.Local).AddTicks(7479),
                            EstimatedRevenue = 96795.0,
                            Source = 4,
                            Status = 2,
                            Title = "Est dignissimos dicta reprehenderit."
                        },
                        new
                        {
                            Id = 6,
                            AccountId = 8,
                            Description = "Qui modi autem id ut et dignissimos quia iusto incidunt ea nemo dolore enim incidunt pariatur quia molestiae nulla facilis temporibus illo ea eligendi et.",
                            EstimatedRevenue = 399619.0,
                            Source = 1,
                            Status = 0,
                            Title = "Fuga cum nemo aliquam repellat placeat."
                        },
                        new
                        {
                            Id = 7,
                            AccountId = 19,
                            Description = "Eos illum corporis non non natus est in qui quam voluptas laudantium quasi maiores ut voluptate ut.",
                            EstimatedRevenue = 475097.0,
                            Source = 3,
                            Status = 0,
                            Title = "Reprehenderit et illo doloremque odio."
                        },
                        new
                        {
                            Id = 8,
                            AccountId = 17,
                            Description = "Voluptatum ut autem et voluptates neque dicta quam delectus id velit laboriosam id aut et qui officia pariatur voluptatem natus est sunt non.",
                            EstimatedRevenue = 78708.0,
                            Source = 3,
                            Status = 0,
                            Title = "Perspiciatis dolorum exercitationem reprehenderit deleniti ut."
                        },
                        new
                        {
                            Id = 9,
                            AccountId = 13,
                            Description = "Consequatur expedita magnam odio ea debitis dolorem voluptate eligendi est quae quo eligendi et eos molestias odio dicta incidunt et nesciunt.",
                            EndedDate = new DateTime(2022, 11, 12, 8, 1, 51, 928, DateTimeKind.Local).AddTicks(2148),
                            EstimatedRevenue = 473598.0,
                            Source = 1,
                            Status = 2,
                            Title = "Rerum omnis in."
                        },
                        new
                        {
                            Id = 10,
                            AccountId = 22,
                            Description = "Doloremque voluptatibus totam itaque minima vel illum voluptatem fugiat nihil vero ipsa cum deleniti ut dolorem aut et molestiae autem natus quia nobis quia dignissimos porro temporibus suscipit consequatur.",
                            DisqualifiedDescription = "Dolorem omnis qui suscipit amet voluptatem natus soluta et est qui amet nam beatae iste tempore.",
                            DisqualifiedReason = 2,
                            EndedDate = new DateTime(2022, 10, 20, 7, 16, 40, 861, DateTimeKind.Local).AddTicks(4390),
                            EstimatedRevenue = 110685.0,
                            Source = 4,
                            Status = 3,
                            Title = "Error excepturi similique iure."
                        },
                        new
                        {
                            Id = 11,
                            AccountId = 22,
                            Description = "Sunt autem nihil ipsum soluta a exercitationem recusandae quibusdam provident accusamus aliquid voluptatem quia quos assumenda sit et recusandae non beatae qui distinctio et et cupiditate voluptatum in iusto eos.",
                            EstimatedRevenue = 328876.0,
                            Source = 3,
                            Status = 1,
                            Title = "Recusandae voluptatem ea et."
                        },
                        new
                        {
                            Id = 12,
                            AccountId = 6,
                            Description = "Incidunt aperiam rerum est velit natus eum a sequi reiciendis dolorum non.",
                            EndedDate = new DateTime(2022, 12, 27, 10, 18, 24, 985, DateTimeKind.Local).AddTicks(7240),
                            EstimatedRevenue = 447775.0,
                            Source = 0,
                            Status = 2,
                            Title = "A in et."
                        },
                        new
                        {
                            Id = 13,
                            AccountId = 16,
                            Description = "Qui non quis dolores sapiente cupiditate vel et natus doloremque nulla voluptates mollitia tempore libero voluptatem culpa molestiae aliquid.",
                            EndedDate = new DateTime(2023, 4, 10, 17, 1, 45, 395, DateTimeKind.Local).AddTicks(2023),
                            EstimatedRevenue = 85958.0,
                            Source = 4,
                            Status = 2,
                            Title = "Animi velit architecto iure."
                        },
                        new
                        {
                            Id = 14,
                            AccountId = 14,
                            Description = "Magni debitis ut suscipit qui dicta suscipit est quisquam dolor neque iste sed vitae quisquam culpa nihil illum fugiat et in accusamus nisi.",
                            EstimatedRevenue = 193233.0,
                            Source = 4,
                            Status = 1,
                            Title = "Alias perferendis repellendus."
                        },
                        new
                        {
                            Id = 15,
                            AccountId = 13,
                            Description = "Eaque eos vel minima quam asperiores quasi iste earum voluptates.",
                            EndedDate = new DateTime(2023, 5, 24, 7, 38, 23, 47, DateTimeKind.Local).AddTicks(9280),
                            EstimatedRevenue = 78617.0,
                            Source = 1,
                            Status = 2,
                            Title = "Qui voluptas odio."
                        },
                        new
                        {
                            Id = 16,
                            AccountId = 9,
                            Description = "Eos et velit et rerum quasi harum aut omnis quod rem quos ex nesciunt nam eaque voluptatem sunt reprehenderit placeat soluta eveniet voluptatum rerum quo odit vel vel quo.",
                            EstimatedRevenue = 24407.0,
                            Source = 1,
                            Status = 1,
                            Title = "Non qui repellendus itaque."
                        },
                        new
                        {
                            Id = 17,
                            AccountId = 11,
                            Description = "Eum aliquam non quam asperiores quam reprehenderit ducimus facere vel ad reprehenderit.",
                            DisqualifiedDescription = "Molestiae non id consequatur nobis ea laudantium aut animi libero repellat.",
                            DisqualifiedReason = 2,
                            EndedDate = new DateTime(2023, 4, 19, 13, 19, 45, 271, DateTimeKind.Local).AddTicks(310),
                            EstimatedRevenue = 110616.0,
                            Source = 1,
                            Status = 3,
                            Title = "Reiciendis dolorem tempora."
                        },
                        new
                        {
                            Id = 18,
                            AccountId = 13,
                            Description = "Sunt unde incidunt est neque sit omnis excepturi nobis quo consectetur earum aut fugiat non porro.",
                            EstimatedRevenue = 143460.0,
                            Source = 3,
                            Status = 1,
                            Title = "Aut unde est nesciunt non."
                        },
                        new
                        {
                            Id = 19,
                            AccountId = 13,
                            Description = "Suscipit provident at exercitationem asperiores nisi reiciendis possimus inventore quia voluptatem autem esse velit et et quasi ut eaque ut.",
                            EstimatedRevenue = 449958.0,
                            Source = 1,
                            Status = 1,
                            Title = "Eum ipsa aliquid."
                        },
                        new
                        {
                            Id = 20,
                            AccountId = 19,
                            Description = "Nisi dolorem perferendis earum consequatur modi maiores eligendi similique dicta dolore iusto consectetur accusamus voluptatum quo id dignissimos aliquam illo odio dolor nemo sit eaque dolorem deserunt dignissimos.",
                            EstimatedRevenue = 289500.0,
                            Source = 0,
                            Status = 1,
                            Title = "Natus deleniti rerum rem dolor in."
                        },
                        new
                        {
                            Id = 21,
                            AccountId = 19,
                            Description = "Ut et temporibus nesciunt aut quae cum dolore voluptatibus omnis velit ducimus et ut nemo enim quia tempora officia accusantium temporibus sed impedit.",
                            DisqualifiedDescription = "Explicabo exercitationem dicta aut quam fugit soluta modi rerum asperiores.",
                            DisqualifiedReason = 3,
                            EndedDate = new DateTime(2022, 10, 26, 23, 15, 56, 919, DateTimeKind.Local).AddTicks(7934),
                            EstimatedRevenue = 138823.0,
                            Source = 3,
                            Status = 3,
                            Title = "Qui recusandae quibusdam."
                        },
                        new
                        {
                            Id = 22,
                            AccountId = 18,
                            Description = "Magni officia non enim qui totam debitis eos reiciendis quia id et earum doloribus iusto fugiat quisquam non quibusdam dolorem odio soluta enim consequatur et qui et placeat dolorum.",
                            EndedDate = new DateTime(2022, 9, 14, 12, 15, 46, 663, DateTimeKind.Local).AddTicks(4704),
                            EstimatedRevenue = 141182.0,
                            Source = 3,
                            Status = 2,
                            Title = "Aperiam non nulla architecto aut eum."
                        },
                        new
                        {
                            Id = 23,
                            AccountId = 13,
                            Description = "Perspiciatis aliquid architecto rerum ipsa quidem quisquam corrupti qui qui et ducimus sit minima magnam voluptates quidem voluptatem cum illum est.",
                            EndedDate = new DateTime(2022, 8, 30, 4, 53, 26, 880, DateTimeKind.Local).AddTicks(7547),
                            EstimatedRevenue = 114225.0,
                            Source = 1,
                            Status = 2,
                            Title = "Sed officiis velit occaecati beatae labore."
                        },
                        new
                        {
                            Id = 24,
                            AccountId = 12,
                            Description = "Illum quidem voluptatibus quia et mollitia dolore laboriosam rerum aut quisquam ad consequatur voluptatibus.",
                            EstimatedRevenue = 79516.0,
                            Source = 1,
                            Status = 0,
                            Title = "Voluptatem sed consequuntur quo."
                        },
                        new
                        {
                            Id = 25,
                            AccountId = 2,
                            Description = "Minus rem libero voluptatem nemo praesentium et nostrum consequatur asperiores id.",
                            EstimatedRevenue = 364443.0,
                            Source = 4,
                            Status = 1,
                            Title = "Placeat quae enim nobis."
                        },
                        new
                        {
                            Id = 26,
                            AccountId = 2,
                            Description = "Non nesciunt sed corporis quam libero rerum voluptas ducimus aliquid sunt rem.",
                            EstimatedRevenue = 445719.0,
                            Source = 1,
                            Status = 1,
                            Title = "Veniam tempora expedita ea esse debitis."
                        },
                        new
                        {
                            Id = 27,
                            AccountId = 7,
                            Description = "Vitae ex in neque totam fugit est quasi omnis doloremque quasi ipsa autem at fugiat velit pariatur distinctio maxime rerum impedit.",
                            DisqualifiedDescription = "Quam et et atque exercitationem nihil quos deserunt laborum voluptatibus earum veniam ea non neque itaque nisi corporis quod dolore deserunt ad.",
                            DisqualifiedReason = 2,
                            EndedDate = new DateTime(2023, 2, 12, 5, 17, 30, 629, DateTimeKind.Local).AddTicks(4770),
                            EstimatedRevenue = 343571.0,
                            Source = 0,
                            Status = 3,
                            Title = "Harum minus in rerum sit."
                        },
                        new
                        {
                            Id = 28,
                            AccountId = 15,
                            Description = "Dolorum totam quae quae rerum in aperiam doloremque dolores aliquam repellat quis fugit.",
                            EstimatedRevenue = 143055.0,
                            Source = 4,
                            Status = 1,
                            Title = "Officia perferendis tenetur qui."
                        },
                        new
                        {
                            Id = 29,
                            AccountId = 5,
                            Description = "Sint quis sed culpa cumque voluptatem molestiae adipisci sapiente eius est sunt doloremque ad ut.",
                            EstimatedRevenue = 368261.0,
                            Source = 1,
                            Status = 1,
                            Title = "At repellat facere error consectetur."
                        },
                        new
                        {
                            Id = 30,
                            AccountId = 4,
                            Description = "Animi vel quis qui dignissimos quos quam sit quod qui veritatis et porro eaque sit expedita labore incidunt accusantium distinctio optio eveniet eligendi est et quo et praesentium ut.",
                            EndedDate = new DateTime(2023, 7, 1, 11, 10, 55, 73, DateTimeKind.Local).AddTicks(4815),
                            EstimatedRevenue = 10574.0,
                            Source = 3,
                            Status = 2,
                            Title = "Aspernatur aut non."
                        });
                });

            modelBuilder.Entity("Lab2.Domain.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("ProductCode")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductCode")
                        .IsUnique();

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsAvailable = true,
                            Name = "Tasty Soft Bike",
                            Price = 233.0,
                            ProductCode = "PRO-64506890",
                            Type = 0
                        },
                        new
                        {
                            Id = 2,
                            IsAvailable = true,
                            Name = "Incredible Fresh Car",
                            Price = 681.0,
                            ProductCode = "PRO-93220361",
                            Type = 1
                        },
                        new
                        {
                            Id = 3,
                            IsAvailable = true,
                            Name = "Incredible Plastic Keyboard",
                            Price = 796.0,
                            ProductCode = "PRO-68069629",
                            Type = 0
                        },
                        new
                        {
                            Id = 4,
                            IsAvailable = true,
                            Name = "Unbranded Granite Pizza",
                            Price = 693.0,
                            ProductCode = "PRO-92525672",
                            Type = 1
                        },
                        new
                        {
                            Id = 5,
                            IsAvailable = true,
                            Name = "Sleek Steel Computer",
                            Price = 392.0,
                            ProductCode = "PRO-20818142",
                            Type = 1
                        },
                        new
                        {
                            Id = 6,
                            IsAvailable = true,
                            Name = "Handcrafted Plastic Soap",
                            Price = 54.0,
                            ProductCode = "PRO-21881220",
                            Type = 0
                        },
                        new
                        {
                            Id = 7,
                            IsAvailable = true,
                            Name = "Generic Concrete Towels",
                            Price = 544.0,
                            ProductCode = "PRO-31901055",
                            Type = 1
                        },
                        new
                        {
                            Id = 8,
                            IsAvailable = true,
                            Name = "Refined Fresh Gloves",
                            Price = 212.0,
                            ProductCode = "PRO-65830697",
                            Type = 0
                        },
                        new
                        {
                            Id = 9,
                            IsAvailable = true,
                            Name = "Handmade Fresh Chair",
                            Price = 959.0,
                            ProductCode = "PRO-77811059",
                            Type = 1
                        },
                        new
                        {
                            Id = 10,
                            IsAvailable = true,
                            Name = "Handmade Concrete Tuna",
                            Price = 398.0,
                            ProductCode = "PRO-35785101",
                            Type = 0
                        });
                });

            modelBuilder.Entity("Lab2.Infrastructure.Identity.ApplicationRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "SuperAdmin",
                            NormalizedName = "SUPERADMIN"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = 3,
                            Name = "User",
                            NormalizedName = "USER"
                        });
                });

            modelBuilder.Entity("Lab2.Infrastructure.Identity.ApplicationUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RefreshTokenLifetime")
                        .HasColumnType("datetime2");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "9ad77664-1700-480f-bc93-8325f59a5613",
                            Email = "superadmin@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "superadmin",
                            NormalizedEmail = "SUPERADMIN@GMAIL.COM",
                            NormalizedUserName = "SUPERADMIN@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJb8vQaZuc4NBCG+eKrHVtTM3sxXbyCDZrLK71z4UBNlq7TQ+cbV8NvHs9HFeZhHSg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "7423d90f-5f22-4a57-96bf-78fe5bb3a751",
                            TwoFactorEnabled = false,
                            UserName = "superadmin@gmail.com"
                        },
                        new
                        {
                            Id = 2,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "efbf8f52-dfc3-4ab4-aa0d-f71fc701035d",
                            Email = "admin@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "admin",
                            NormalizedEmail = "ADMIN@GMAIL.COM",
                            NormalizedUserName = "ADMIN@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEEPCf4C9hUhiIHhDBC7nZD5u5WMkA1uVV8676pyx+nSkJt7M57ab84Fhfxv/GK7HlA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "d7ee6f0e-0c3a-4a34-8062-5bda26de238c",
                            TwoFactorEnabled = false,
                            UserName = "admin@gmail.com"
                        },
                        new
                        {
                            Id = 3,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "bdd4accf-0213-4af6-a930-34835d10a236",
                            Email = "Tevin.Marvin@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Arnold Bogan",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UserName = "Tevin.Marvin@gmail.com"
                        },
                        new
                        {
                            Id = 4,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "95f108fc-4823-4af3-8059-8bb1d008c1c2",
                            Email = "Ophelia_Kunde@hotmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Norberto Murazik",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UserName = "Ophelia_Kunde@hotmail.com"
                        },
                        new
                        {
                            Id = 5,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "c0883cae-7673-4727-9064-d3745d8a66d2",
                            Email = "Kendra70@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Cornell Koch",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UserName = "Kendra70@gmail.com"
                        },
                        new
                        {
                            Id = 6,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "769000b3-26c9-4a95-8e6c-071d8f395f13",
                            Email = "Kareem_Zulauf@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Molly Reilly",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UserName = "Kareem_Zulauf@gmail.com"
                        },
                        new
                        {
                            Id = 7,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "9c28dec7-5a5e-4839-9bb1-90df5382fed3",
                            Email = "Rowan.Stehr@yahoo.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Elaina Beatty",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UserName = "Rowan.Stehr@yahoo.com"
                        },
                        new
                        {
                            Id = 8,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "c1cd6dc2-312a-4709-ae7d-2731177324f0",
                            Email = "Rocio_Mills12@yahoo.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Lina Lind",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UserName = "Rocio_Mills12@yahoo.com"
                        },
                        new
                        {
                            Id = 9,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "cf588190-c838-41ab-bb49-9c22cfb22b8a",
                            Email = "Fanny.Koelpin@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Raleigh Barton",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UserName = "Fanny.Koelpin@gmail.com"
                        },
                        new
                        {
                            Id = 10,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "97422762-ef05-42f8-b1e3-fd3647ce2a43",
                            Email = "Maximillian_Kreiger@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Hattie Runolfsson",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UserName = "Maximillian_Kreiger@gmail.com"
                        },
                        new
                        {
                            Id = 11,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "69602abb-86df-4eaa-80a3-efcbd5f4744a",
                            Email = "Jennifer.Howell@yahoo.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Brandon Kessler",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UserName = "Jennifer.Howell@yahoo.com"
                        },
                        new
                        {
                            Id = 12,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "b4a6749b-9e90-4606-9286-c061bd3c2a14",
                            Email = "Ethan3@hotmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Pasquale Bartoletti",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UserName = "Ethan3@hotmail.com"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClaimType = "permission",
                            ClaimValue = "Permission.Role.View",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 2,
                            ClaimType = "permission",
                            ClaimValue = "Permission.Role.Edit",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 3,
                            ClaimType = "permission",
                            ClaimValue = "Permission.User.View",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 4,
                            ClaimType = "permission",
                            ClaimValue = "Permission.User.View",
                            RoleId = 3
                        },
                        new
                        {
                            Id = 5,
                            ClaimType = "permission",
                            ClaimValue = "Permission.User.View",
                            RoleId = 2
                        },
                        new
                        {
                            Id = 6,
                            ClaimType = "permission",
                            ClaimValue = "Permission.User.Create",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 7,
                            ClaimType = "permission",
                            ClaimValue = "Permission.User.Create",
                            RoleId = 2
                        },
                        new
                        {
                            Id = 8,
                            ClaimType = "permission",
                            ClaimValue = "Permission.User.Edit",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 9,
                            ClaimType = "permission",
                            ClaimValue = "Permission.User.Edit",
                            RoleId = 2
                        },
                        new
                        {
                            Id = 10,
                            ClaimType = "permission",
                            ClaimValue = "Permission.User.Delete",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 11,
                            ClaimType = "permission",
                            ClaimValue = "Permission.User.Delete",
                            RoleId = 2
                        },
                        new
                        {
                            Id = 12,
                            ClaimType = "permission",
                            ClaimValue = "Permission.Product.View",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 13,
                            ClaimType = "permission",
                            ClaimValue = "Permission.Product.View",
                            RoleId = 3
                        },
                        new
                        {
                            Id = 14,
                            ClaimType = "permission",
                            ClaimValue = "Permission.Product.View",
                            RoleId = 2
                        },
                        new
                        {
                            Id = 15,
                            ClaimType = "permission",
                            ClaimValue = "Permission.Product.Create",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 16,
                            ClaimType = "permission",
                            ClaimValue = "Permission.Product.Create",
                            RoleId = 2
                        },
                        new
                        {
                            Id = 17,
                            ClaimType = "permission",
                            ClaimValue = "Permission.Product.Edit",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 18,
                            ClaimType = "permission",
                            ClaimValue = "Permission.Product.Edit",
                            RoleId = 2
                        },
                        new
                        {
                            Id = 19,
                            ClaimType = "permission",
                            ClaimValue = "Permission.Product.Delete",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 20,
                            ClaimType = "permission",
                            ClaimValue = "Permission.Product.Delete",
                            RoleId = 2
                        },
                        new
                        {
                            Id = 21,
                            ClaimType = "permission",
                            ClaimValue = "Permission.Account.View",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 22,
                            ClaimType = "permission",
                            ClaimValue = "Permission.Account.View",
                            RoleId = 3
                        },
                        new
                        {
                            Id = 23,
                            ClaimType = "permission",
                            ClaimValue = "Permission.Account.View",
                            RoleId = 2
                        },
                        new
                        {
                            Id = 24,
                            ClaimType = "permission",
                            ClaimValue = "Permission.Account.Create",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 25,
                            ClaimType = "permission",
                            ClaimValue = "Permission.Account.Create",
                            RoleId = 2
                        },
                        new
                        {
                            Id = 26,
                            ClaimType = "permission",
                            ClaimValue = "Permission.Account.Edit",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 27,
                            ClaimType = "permission",
                            ClaimValue = "Permission.Account.Edit",
                            RoleId = 2
                        },
                        new
                        {
                            Id = 28,
                            ClaimType = "permission",
                            ClaimValue = "Permission.Account.Delete",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 29,
                            ClaimType = "permission",
                            ClaimValue = "Permission.Account.Delete",
                            RoleId = 2
                        },
                        new
                        {
                            Id = 30,
                            ClaimType = "permission",
                            ClaimValue = "Permission.Lead.View",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 31,
                            ClaimType = "permission",
                            ClaimValue = "Permission.Lead.View",
                            RoleId = 3
                        },
                        new
                        {
                            Id = 32,
                            ClaimType = "permission",
                            ClaimValue = "Permission.Lead.View",
                            RoleId = 2
                        },
                        new
                        {
                            Id = 33,
                            ClaimType = "permission",
                            ClaimValue = "Permission.Lead.Create",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 34,
                            ClaimType = "permission",
                            ClaimValue = "Permission.Lead.Create",
                            RoleId = 2
                        },
                        new
                        {
                            Id = 35,
                            ClaimType = "permission",
                            ClaimValue = "Permission.Lead.Edit",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 36,
                            ClaimType = "permission",
                            ClaimValue = "Permission.Lead.Edit",
                            RoleId = 2
                        },
                        new
                        {
                            Id = 37,
                            ClaimType = "permission",
                            ClaimValue = "Permission.Lead.Qualify",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 38,
                            ClaimType = "permission",
                            ClaimValue = "Permission.Lead.Qualify",
                            RoleId = 2
                        },
                        new
                        {
                            Id = 39,
                            ClaimType = "permission",
                            ClaimValue = "Permission.Lead.Disqualify",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 40,
                            ClaimType = "permission",
                            ClaimValue = "Permission.Lead.Disqualify",
                            RoleId = 2
                        },
                        new
                        {
                            Id = 41,
                            ClaimType = "permission",
                            ClaimValue = "Permission.Lead.Delete",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 42,
                            ClaimType = "permission",
                            ClaimValue = "Permission.Lead.Delete",
                            RoleId = 2
                        },
                        new
                        {
                            Id = 43,
                            ClaimType = "permission",
                            ClaimValue = "Permission.Deal.View",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 44,
                            ClaimType = "permission",
                            ClaimValue = "Permission.Deal.View",
                            RoleId = 3
                        },
                        new
                        {
                            Id = 45,
                            ClaimType = "permission",
                            ClaimValue = "Permission.Deal.View",
                            RoleId = 2
                        },
                        new
                        {
                            Id = 46,
                            ClaimType = "permission",
                            ClaimValue = "Permission.Deal.Edit",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 47,
                            ClaimType = "permission",
                            ClaimValue = "Permission.Deal.Edit",
                            RoleId = 2
                        },
                        new
                        {
                            Id = 48,
                            ClaimType = "permission",
                            ClaimValue = "Permission.Deal.EndDeal",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 49,
                            ClaimType = "permission",
                            ClaimValue = "Permission.Deal.EndDeal",
                            RoleId = 2
                        },
                        new
                        {
                            Id = 50,
                            ClaimType = "permission",
                            ClaimValue = "Permission.Deal.Delete",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 51,
                            ClaimType = "permission",
                            ClaimValue = "Permission.Deal.Delete",
                            RoleId = 2
                        },
                        new
                        {
                            Id = 52,
                            ClaimType = "permission",
                            ClaimValue = "Permission.Deal.Product.View",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 53,
                            ClaimType = "permission",
                            ClaimValue = "Permission.Deal.Product.View",
                            RoleId = 3
                        },
                        new
                        {
                            Id = 54,
                            ClaimType = "permission",
                            ClaimValue = "Permission.Deal.Product.View",
                            RoleId = 2
                        },
                        new
                        {
                            Id = 55,
                            ClaimType = "permission",
                            ClaimValue = "Permission.Deal.Product.Add",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 56,
                            ClaimType = "permission",
                            ClaimValue = "Permission.Deal.Product.Add",
                            RoleId = 2
                        },
                        new
                        {
                            Id = 57,
                            ClaimType = "permission",
                            ClaimValue = "Permission.Deal.Product.Edit",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 58,
                            ClaimType = "permission",
                            ClaimValue = "Permission.Deal.Product.Edit",
                            RoleId = 2
                        },
                        new
                        {
                            Id = 59,
                            ClaimType = "permission",
                            ClaimValue = "Permission.Deal.Product.Delete",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 60,
                            ClaimType = "permission",
                            ClaimValue = "Permission.Deal.Product.Delete",
                            RoleId = 2
                        },
                        new
                        {
                            Id = 61,
                            ClaimType = "permission",
                            ClaimValue = "Permission.Contact.View",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 62,
                            ClaimType = "permission",
                            ClaimValue = "Permission.Contact.View",
                            RoleId = 3
                        },
                        new
                        {
                            Id = 63,
                            ClaimType = "permission",
                            ClaimValue = "Permission.Contact.View",
                            RoleId = 2
                        },
                        new
                        {
                            Id = 64,
                            ClaimType = "permission",
                            ClaimValue = "Permission.Contact.Create",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 65,
                            ClaimType = "permission",
                            ClaimValue = "Permission.Contact.Create",
                            RoleId = 2
                        },
                        new
                        {
                            Id = 66,
                            ClaimType = "permission",
                            ClaimValue = "Permission.Contact.Edit",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 67,
                            ClaimType = "permission",
                            ClaimValue = "Permission.Contact.Edit",
                            RoleId = 2
                        },
                        new
                        {
                            Id = 68,
                            ClaimType = "permission",
                            ClaimValue = "Permission.Contact.Delete",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 69,
                            ClaimType = "permission",
                            ClaimValue = "Permission.Contact.Delete",
                            RoleId = 2
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 4,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 5,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 6,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 7,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 8,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 9,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 10,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 11,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 12,
                            RoleId = 3
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Lab2.Domain.Entities.Contact", b =>
                {
                    b.HasOne("Lab2.Domain.Entities.Account", "Account")
                        .WithMany("Contacts")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("Lab2.Domain.Entities.Deal", b =>
                {
                    b.HasOne("Lab2.Domain.Entities.Lead", "Lead")
                        .WithOne("Deal")
                        .HasForeignKey("Lab2.Domain.Entities.Deal", "LeadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lead");
                });

            modelBuilder.Entity("Lab2.Domain.Entities.DealProduct", b =>
                {
                    b.HasOne("Lab2.Domain.Entities.Deal", "Deal")
                        .WithMany("DealProducts")
                        .HasForeignKey("DealId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lab2.Domain.Entities.Product", "Product")
                        .WithMany("DealProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Deal");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Lab2.Domain.Entities.Lead", b =>
                {
                    b.HasOne("Lab2.Domain.Entities.Account", "Account")
                        .WithMany("Leads")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("Lab2.Infrastructure.Identity.ApplicationRole", null)
                        .WithMany("Claims")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("Lab2.Infrastructure.Identity.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("Lab2.Infrastructure.Identity.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("Lab2.Infrastructure.Identity.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lab2.Infrastructure.Identity.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("Lab2.Infrastructure.Identity.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Lab2.Domain.Entities.Account", b =>
                {
                    b.Navigation("Contacts");

                    b.Navigation("Leads");
                });

            modelBuilder.Entity("Lab2.Domain.Entities.Deal", b =>
                {
                    b.Navigation("DealProducts");
                });

            modelBuilder.Entity("Lab2.Domain.Entities.Lead", b =>
                {
                    b.Navigation("Deal");
                });

            modelBuilder.Entity("Lab2.Domain.Entities.Product", b =>
                {
                    b.Navigation("DealProducts");
                });

            modelBuilder.Entity("Lab2.Infrastructure.Identity.ApplicationRole", b =>
                {
                    b.Navigation("Claims");
                });
#pragma warning restore 612, 618
        }
    }
}
