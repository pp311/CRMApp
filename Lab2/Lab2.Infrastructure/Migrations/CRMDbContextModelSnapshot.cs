// <auto-generated />
using System;
using Lab2.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Lab2.Migrations
{
    [DbContext(typeof(CRMDbContext))]
    partial class CRMDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Lab2.API.Entities.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Phone")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<double>("TotalSales")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("Phone", "Email")
                        .IsUnique()
                        .HasFilter("[Phone] IS NOT NULL AND [Email] IS NOT NULL");

                    b.ToTable("Accounts", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "53077 Gibson Dam, South Isidrofort, Marshall Islands",
                            Email = "Giovanna_McLaughlin83@gmail.com",
                            Name = "Wisozk - Conroy",
                            Phone = "1-873-487-0130 x6753",
                            TotalSales = 9320.0
                        },
                        new
                        {
                            Id = 2,
                            Address = "799 Thelma Overpass, Bogantown, United States of America",
                            Email = "Sanford.Mills@yahoo.com",
                            Name = "Schowalter, Ziemann and Abshire",
                            Phone = "1-623-376-4391 x12917",
                            TotalSales = 25368.0
                        },
                        new
                        {
                            Id = 3,
                            Address = "0724 Tobin Prairie, Gutkowskihaven, Venezuela",
                            Email = "Emery41@hotmail.com",
                            Name = "DuBuque, Witting and Pfeffer",
                            Phone = "1-242-750-3710",
                            TotalSales = 25088.0
                        },
                        new
                        {
                            Id = 4,
                            Address = "45512 Blake Plains, Tiachester, Ghana",
                            Email = "Josh_Wolf@gmail.com",
                            Name = "Orn, Brakus and Heaney",
                            Phone = "1-710-529-7001",
                            TotalSales = 29448.0
                        },
                        new
                        {
                            Id = 5,
                            Address = "100 Lubowitz Ports, Larkinberg, Niue",
                            Email = "Brandyn_Wiza@hotmail.com",
                            Name = "Konopelski Group",
                            Phone = "(433) 973-7236",
                            TotalSales = 46180.0
                        },
                        new
                        {
                            Id = 6,
                            Address = "227 Hammes Ports, West River, Ukraine",
                            Email = "Hosea62@gmail.com",
                            Name = "Tillman - Nolan",
                            Phone = "(345) 474-7652",
                            TotalSales = 3554.0
                        },
                        new
                        {
                            Id = 7,
                            Address = "0906 Amya Field, New Carolina, Timor-Leste",
                            Email = "Kenneth_OConnell@gmail.com",
                            Name = "Hand, Pacocha and Gerhold",
                            Phone = "1-645-426-6594 x17775",
                            TotalSales = 22142.0
                        },
                        new
                        {
                            Id = 8,
                            Address = "781 Wava Loop, Keeblerburgh, India",
                            Email = "Jude.Koepp95@yahoo.com",
                            Name = "Haag - Quigley",
                            Phone = "(597) 239-5557 x0165",
                            TotalSales = 48470.0
                        },
                        new
                        {
                            Id = 9,
                            Address = "04394 Lynch Curve, South Clint, France",
                            Email = "Zetta.Wilkinson27@gmail.com",
                            Name = "Schowalter, Gulgowski and Kub",
                            Phone = "302.378.1093",
                            TotalSales = 9974.0
                        },
                        new
                        {
                            Id = 10,
                            Address = "101 Ruthie Lake, Robertston, Qatar",
                            Email = "Max80@hotmail.com",
                            Name = "Konopelski, Mayert and Runolfsson",
                            Phone = "890.811.0584",
                            TotalSales = 35997.0
                        },
                        new
                        {
                            Id = 11,
                            Address = "09718 Stroman Motorway, New Sunny, Eritrea",
                            Email = "Vernice79@yahoo.com",
                            Name = "Schoen Inc",
                            Phone = "(546) 702-7719 x0251",
                            TotalSales = 27021.0
                        },
                        new
                        {
                            Id = 12,
                            Address = "4031 Austin Shoal, Priceland, Ghana",
                            Email = "Malachi.Stokes44@hotmail.com",
                            Name = "Murray, McGlynn and Batz",
                            Phone = "338.641.2852",
                            TotalSales = 12994.0
                        },
                        new
                        {
                            Id = 13,
                            Address = "172 Balistreri Port, East Anyabury, Sweden",
                            Email = "Annette_Torphy@gmail.com",
                            Name = "Schimmel, Ziemann and Heaney",
                            Phone = "881.661.4184 x2825",
                            TotalSales = 19580.0
                        },
                        new
                        {
                            Id = 14,
                            Address = "69374 Guido Mills, Lauryberg, Kuwait",
                            Email = "Gia43@hotmail.com",
                            Name = "Heathcote, Crooks and Powlowski",
                            Phone = "219-657-3671 x557",
                            TotalSales = 49110.0
                        },
                        new
                        {
                            Id = 15,
                            Address = "009 Trantow Centers, Casperville, Djibouti",
                            Email = "Darien_Rau@yahoo.com",
                            Name = "Fisher, Schultz and Heller",
                            Phone = "590-716-1311",
                            TotalSales = 25853.0
                        },
                        new
                        {
                            Id = 16,
                            Address = "9057 Kaitlyn Field, South Tyrell, France",
                            Email = "Jayne.Lynch@hotmail.com",
                            Name = "Gaylord - Hahn",
                            Phone = "(455) 711-8293 x9712",
                            TotalSales = 38752.0
                        },
                        new
                        {
                            Id = 17,
                            Address = "39343 Denesik Centers, North Amber, Reunion",
                            Email = "Reginald.Quigley@gmail.com",
                            Name = "Volkman - Hammes",
                            Phone = "496.685.6816 x5592",
                            TotalSales = 32851.0
                        },
                        new
                        {
                            Id = 18,
                            Address = "8309 Ruecker Rue, East Lonie, Belgium",
                            Email = "Merlin_Turner@gmail.com",
                            Name = "Corkery, Graham and Ebert",
                            Phone = "(444) 783-3680",
                            TotalSales = 29336.0
                        },
                        new
                        {
                            Id = 19,
                            Address = "8161 Augusta Burg, Nicklauston, Canada",
                            Email = "Kurtis_Waters7@gmail.com",
                            Name = "Rippin - Heaney",
                            Phone = "1-879-334-2038",
                            TotalSales = 1633.0
                        },
                        new
                        {
                            Id = 20,
                            Address = "2810 Leffler Oval, Port Laura, Tanzania",
                            Email = "Lamont62@yahoo.com",
                            Name = "Frami Group",
                            Phone = "1-734-875-5477 x465",
                            TotalSales = 13267.0
                        },
                        new
                        {
                            Id = 21,
                            Address = "2956 Jerrell Mountains, Marilouside, Czech Republic",
                            Email = "Alessandra59@hotmail.com",
                            Name = "Kihn Inc",
                            Phone = "254-453-2273",
                            TotalSales = 8933.0
                        },
                        new
                        {
                            Id = 22,
                            Address = "5637 Stehr Curve, New Ottilieville, Egypt",
                            Email = "Lavinia_Murray61@hotmail.com",
                            Name = "Leffler and Sons",
                            Phone = "1-673-766-4615 x899",
                            TotalSales = 1080.0
                        },
                        new
                        {
                            Id = 23,
                            Address = "9067 Zelma Brooks, Rippinton, Swaziland",
                            Email = "Bill.Reynolds@gmail.com",
                            Name = "Windler, Olson and Zulauf",
                            Phone = "1-750-372-0747",
                            TotalSales = 44233.0
                        },
                        new
                        {
                            Id = 24,
                            Address = "34786 Cameron Cove, Armandostad, Marshall Islands",
                            Email = "Johanna64@yahoo.com",
                            Name = "Prohaska Group",
                            Phone = "802-774-6029",
                            TotalSales = 10032.0
                        },
                        new
                        {
                            Id = 25,
                            Address = "06565 Schroeder Rest, Legrosborough, Indonesia",
                            Email = "Fritz67@yahoo.com",
                            Name = "Rodriguez - Streich",
                            Phone = "(627) 866-5793 x829",
                            TotalSales = 25821.0
                        });
                });

            modelBuilder.Entity("Lab2.API.Entities.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Phone")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("Phone", "Email")
                        .IsUnique()
                        .HasFilter("[Phone] IS NOT NULL");

                    b.ToTable("Contacts", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccountId = 15,
                            Email = "Patricia99@hotmail.com",
                            Name = "Colten Donnelly",
                            Phone = "763.299.3180"
                        },
                        new
                        {
                            Id = 2,
                            AccountId = 20,
                            Email = "Marianne.Wilkinson49@yahoo.com",
                            Name = "Waino Feeney",
                            Phone = "426.640.7129 x9191"
                        },
                        new
                        {
                            Id = 3,
                            AccountId = 17,
                            Email = "Giovani42@gmail.com",
                            Name = "Jeramie Herman",
                            Phone = "(515) 300-8262 x34541"
                        },
                        new
                        {
                            Id = 4,
                            AccountId = 22,
                            Email = "Maxie44@gmail.com",
                            Name = "Olin Zulauf",
                            Phone = "550-576-6602 x5590"
                        },
                        new
                        {
                            Id = 5,
                            AccountId = 17,
                            Email = "Lilliana.Hoppe18@gmail.com",
                            Name = "Jaylan Veum",
                            Phone = "291-631-4966 x166"
                        },
                        new
                        {
                            Id = 6,
                            AccountId = 23,
                            Email = "Gina80@hotmail.com",
                            Name = "Savanna Pollich",
                            Phone = "(673) 499-4429"
                        },
                        new
                        {
                            Id = 7,
                            AccountId = 21,
                            Email = "Dina_Rice71@yahoo.com",
                            Name = "Braxton Hessel",
                            Phone = "1-644-669-6591"
                        },
                        new
                        {
                            Id = 8,
                            AccountId = 24,
                            Email = "Cordelia.Rosenbaum72@yahoo.com",
                            Name = "Harley Lebsack",
                            Phone = "1-261-337-5910 x476"
                        },
                        new
                        {
                            Id = 9,
                            AccountId = 13,
                            Email = "Reagan_Nikolaus14@gmail.com",
                            Name = "Mollie Lemke",
                            Phone = "1-519-884-7033 x82669"
                        },
                        new
                        {
                            Id = 10,
                            AccountId = 24,
                            Email = "Salvador.Huel76@hotmail.com",
                            Name = "Ella Collier",
                            Phone = "698.836.7874 x9413"
                        },
                        new
                        {
                            Id = 11,
                            AccountId = 3,
                            Email = "Hugh.Grady@hotmail.com",
                            Name = "Shayna Barton",
                            Phone = "644.945.8634"
                        },
                        new
                        {
                            Id = 12,
                            AccountId = 12,
                            Email = "Reggie54@gmail.com",
                            Name = "Shany Mitchell",
                            Phone = "887.200.0063"
                        },
                        new
                        {
                            Id = 13,
                            AccountId = 13,
                            Email = "Zack.Ebert@gmail.com",
                            Name = "Darien Tromp",
                            Phone = "280.437.8678 x291"
                        },
                        new
                        {
                            Id = 14,
                            AccountId = 12,
                            Email = "Odie_Hyatt73@hotmail.com",
                            Name = "Fred Wilkinson",
                            Phone = "(201) 460-2425 x2129"
                        },
                        new
                        {
                            Id = 15,
                            AccountId = 8,
                            Email = "Dorcas.Parisian78@yahoo.com",
                            Name = "Marty Gutkowski",
                            Phone = "(609) 795-7536 x712"
                        },
                        new
                        {
                            Id = 16,
                            AccountId = 14,
                            Email = "Isaias24@hotmail.com",
                            Name = "Junior Williamson",
                            Phone = "(462) 406-6990"
                        },
                        new
                        {
                            Id = 17,
                            AccountId = 11,
                            Email = "Aisha89@gmail.com",
                            Name = "Ayla Ritchie",
                            Phone = "(422) 228-5506 x5673"
                        },
                        new
                        {
                            Id = 18,
                            AccountId = 13,
                            Email = "Alana_Bernhard@yahoo.com",
                            Name = "Kyleigh Lebsack",
                            Phone = "(788) 463-5332 x9303"
                        },
                        new
                        {
                            Id = 19,
                            AccountId = 13,
                            Email = "Ruthe_Howell@gmail.com",
                            Name = "Citlalli Dickens",
                            Phone = "(392) 685-9265 x59106"
                        },
                        new
                        {
                            Id = 20,
                            AccountId = 23,
                            Email = "Daphne_Wuckert@gmail.com",
                            Name = "London Schulist",
                            Phone = "(660) 603-1883"
                        },
                        new
                        {
                            Id = 21,
                            AccountId = 18,
                            Email = "Jacynthe_Brown52@yahoo.com",
                            Name = "Daija Bayer",
                            Phone = "(595) 482-4973"
                        },
                        new
                        {
                            Id = 22,
                            AccountId = 8,
                            Email = "Brook.Hartmann@hotmail.com",
                            Name = "Darby Hegmann",
                            Phone = "1-605-863-2659 x09447"
                        },
                        new
                        {
                            Id = 23,
                            AccountId = 4,
                            Email = "Buford_Swaniawski73@hotmail.com",
                            Name = "Franz Bosco",
                            Phone = "1-377-865-8678 x91521"
                        },
                        new
                        {
                            Id = 24,
                            AccountId = 19,
                            Email = "Ismael77@gmail.com",
                            Name = "Clovis Graham",
                            Phone = "751.488.6767 x68774"
                        },
                        new
                        {
                            Id = 25,
                            AccountId = 15,
                            Email = "Rico32@hotmail.com",
                            Name = "Josiah Kirlin",
                            Phone = "306.429.7876 x93641"
                        },
                        new
                        {
                            Id = 26,
                            AccountId = 22,
                            Email = "Larissa_Padberg@gmail.com",
                            Name = "Idella Bins",
                            Phone = "840.556.8243 x8600"
                        },
                        new
                        {
                            Id = 27,
                            AccountId = 24,
                            Email = "Porter.Labadie@yahoo.com",
                            Name = "Cathy Kuphal",
                            Phone = "419.277.4986"
                        },
                        new
                        {
                            Id = 28,
                            AccountId = 18,
                            Email = "Rosamond.Schuster@hotmail.com",
                            Name = "Unique Denesik",
                            Phone = "1-975-424-9044"
                        },
                        new
                        {
                            Id = 29,
                            AccountId = 16,
                            Email = "Lucas10@yahoo.com",
                            Name = "Rachel Rippin",
                            Phone = "1-654-430-0987 x2078"
                        },
                        new
                        {
                            Id = 30,
                            AccountId = 1,
                            Email = "Micah_McDermott99@yahoo.com",
                            Name = "Mara Boyer",
                            Phone = "(330) 953-5144"
                        },
                        new
                        {
                            Id = 31,
                            AccountId = 2,
                            Email = "Elisabeth_Boyle@gmail.com",
                            Name = "Jaquelin Steuber",
                            Phone = "1-708-847-7933 x94064"
                        },
                        new
                        {
                            Id = 32,
                            AccountId = 3,
                            Email = "Ken.Smitham@yahoo.com",
                            Name = "Eulalia Lemke",
                            Phone = "(572) 230-5150"
                        },
                        new
                        {
                            Id = 33,
                            AccountId = 14,
                            Email = "Reina.Champlin61@yahoo.com",
                            Name = "Louisa Reynolds",
                            Phone = "1-337-491-5885"
                        },
                        new
                        {
                            Id = 34,
                            AccountId = 18,
                            Email = "Ariane_Reichert59@hotmail.com",
                            Name = "Wilma Howe",
                            Phone = "1-620-386-8588 x14839"
                        },
                        new
                        {
                            Id = 35,
                            AccountId = 6,
                            Email = "Valentin_Kuphal@hotmail.com",
                            Name = "Blanche Borer",
                            Phone = "693.755.2469 x5496"
                        },
                        new
                        {
                            Id = 36,
                            AccountId = 3,
                            Email = "Frederick_Windler82@yahoo.com",
                            Name = "Carolanne Kunze",
                            Phone = "437.882.8519 x6943"
                        },
                        new
                        {
                            Id = 37,
                            AccountId = 14,
                            Email = "Major57@yahoo.com",
                            Name = "Clement Beatty",
                            Phone = "1-568-381-6971 x7291"
                        },
                        new
                        {
                            Id = 38,
                            AccountId = 5,
                            Email = "Hal_Rodriguez91@gmail.com",
                            Name = "David Cremin",
                            Phone = "(743) 537-4663 x425"
                        },
                        new
                        {
                            Id = 39,
                            AccountId = 23,
                            Email = "Hector74@gmail.com",
                            Name = "Jovanny Reinger",
                            Phone = "789-485-9162 x167"
                        },
                        new
                        {
                            Id = 40,
                            AccountId = 25,
                            Email = "Joshua_Miller@gmail.com",
                            Name = "Tavares Zieme",
                            Phone = "213-515-6163 x942"
                        },
                        new
                        {
                            Id = 41,
                            AccountId = 23,
                            Email = "Wallace70@hotmail.com",
                            Name = "Kamron Carroll",
                            Phone = "608.706.4943 x3717"
                        },
                        new
                        {
                            Id = 42,
                            AccountId = 25,
                            Email = "Freida79@yahoo.com",
                            Name = "Karina Abernathy",
                            Phone = "405.672.2260"
                        },
                        new
                        {
                            Id = 43,
                            AccountId = 22,
                            Email = "Audrey.Quitzon96@hotmail.com",
                            Name = "Isai Borer",
                            Phone = "295.662.6996 x46282"
                        },
                        new
                        {
                            Id = 44,
                            AccountId = 19,
                            Email = "Aliza62@gmail.com",
                            Name = "Beverly Stamm",
                            Phone = "924.538.0039 x120"
                        },
                        new
                        {
                            Id = 45,
                            AccountId = 23,
                            Email = "Darrion40@hotmail.com",
                            Name = "Delphine Kreiger",
                            Phone = "419.865.3909"
                        },
                        new
                        {
                            Id = 46,
                            AccountId = 17,
                            Email = "Julian_Haley59@yahoo.com",
                            Name = "Ora Towne",
                            Phone = "357.705.6242 x4844"
                        },
                        new
                        {
                            Id = 47,
                            AccountId = 19,
                            Email = "Vella.Hand@gmail.com",
                            Name = "Mariah Pouros",
                            Phone = "1-994-534-2291"
                        },
                        new
                        {
                            Id = 48,
                            AccountId = 21,
                            Email = "Patsy.Kris@yahoo.com",
                            Name = "Erik Barrows",
                            Phone = "1-686-211-2348 x302"
                        },
                        new
                        {
                            Id = 49,
                            AccountId = 25,
                            Email = "Estevan48@yahoo.com",
                            Name = "Dejon Friesen",
                            Phone = "958-977-5312 x44075"
                        },
                        new
                        {
                            Id = 50,
                            AccountId = 4,
                            Email = "Lysanne46@gmail.com",
                            Name = "Danielle Herman",
                            Phone = "1-601-710-9893"
                        },
                        new
                        {
                            Id = 51,
                            AccountId = 18,
                            Email = "Maritza97@hotmail.com",
                            Name = "Hassie O'Hara",
                            Phone = "1-462-889-1247"
                        },
                        new
                        {
                            Id = 52,
                            AccountId = 2,
                            Email = "Yolanda.Kunde48@gmail.com",
                            Name = "Samantha Satterfield",
                            Phone = "1-348-514-2013 x072"
                        },
                        new
                        {
                            Id = 53,
                            AccountId = 16,
                            Email = "Ramon9@yahoo.com",
                            Name = "Nichole Cummerata",
                            Phone = "(491) 662-0608"
                        },
                        new
                        {
                            Id = 54,
                            AccountId = 10,
                            Email = "Arnulfo.Aufderhar@gmail.com",
                            Name = "Judson Frami",
                            Phone = "561.996.2838 x628"
                        },
                        new
                        {
                            Id = 55,
                            AccountId = 4,
                            Email = "Loren.Hegmann4@hotmail.com",
                            Name = "Myra Kub",
                            Phone = "650-511-5975"
                        },
                        new
                        {
                            Id = 56,
                            AccountId = 3,
                            Email = "Amber17@gmail.com",
                            Name = "Maude Hintz",
                            Phone = "1-294-970-8748 x3806"
                        },
                        new
                        {
                            Id = 57,
                            AccountId = 3,
                            Email = "Newell.Feil91@gmail.com",
                            Name = "Maida Crooks",
                            Phone = "776-561-0843 x26575"
                        },
                        new
                        {
                            Id = 58,
                            AccountId = 18,
                            Email = "Carlo68@hotmail.com",
                            Name = "Irving Kerluke",
                            Phone = "266.384.0226 x52095"
                        },
                        new
                        {
                            Id = 59,
                            AccountId = 2,
                            Email = "Maynard_Robel98@hotmail.com",
                            Name = "Sammie Wintheiser",
                            Phone = "890.291.5231"
                        },
                        new
                        {
                            Id = 60,
                            AccountId = 4,
                            Email = "Llewellyn.Hand35@hotmail.com",
                            Name = "Lauren Zboncak",
                            Phone = "(261) 554-7575"
                        },
                        new
                        {
                            Id = 61,
                            AccountId = 18,
                            Email = "Jaylin_Schaden@hotmail.com",
                            Name = "August Breitenberg",
                            Phone = "912.456.6621 x504"
                        },
                        new
                        {
                            Id = 62,
                            AccountId = 25,
                            Email = "Lukas_Feil32@gmail.com",
                            Name = "Matteo Ryan",
                            Phone = "610.664.1088 x6893"
                        },
                        new
                        {
                            Id = 63,
                            AccountId = 4,
                            Email = "Amir_Kreiger72@hotmail.com",
                            Name = "Catharine Funk",
                            Phone = "(775) 539-4030"
                        },
                        new
                        {
                            Id = 64,
                            AccountId = 15,
                            Email = "Loy.OConnell@hotmail.com",
                            Name = "Isaiah Rosenbaum",
                            Phone = "711.964.6877 x4819"
                        },
                        new
                        {
                            Id = 65,
                            AccountId = 5,
                            Email = "Eugene.Jenkins@hotmail.com",
                            Name = "Annabel Keeling",
                            Phone = "(722) 646-0015 x75798"
                        },
                        new
                        {
                            Id = 66,
                            AccountId = 15,
                            Email = "Melvina48@gmail.com",
                            Name = "Lavada Walker",
                            Phone = "(458) 878-1132"
                        },
                        new
                        {
                            Id = 67,
                            AccountId = 11,
                            Email = "Grady49@gmail.com",
                            Name = "Keely Kassulke",
                            Phone = "495.432.9454"
                        },
                        new
                        {
                            Id = 68,
                            AccountId = 5,
                            Email = "Dennis93@hotmail.com",
                            Name = "Hailee Mosciski",
                            Phone = "840-627-4931 x1738"
                        },
                        new
                        {
                            Id = 69,
                            AccountId = 3,
                            Email = "Frances87@gmail.com",
                            Name = "Felicia Wunsch",
                            Phone = "1-496-443-5982 x2748"
                        },
                        new
                        {
                            Id = 70,
                            AccountId = 1,
                            Email = "Dewitt26@hotmail.com",
                            Name = "Edmund Homenick",
                            Phone = "(713) 785-0684 x05677"
                        },
                        new
                        {
                            Id = 71,
                            AccountId = 16,
                            Email = "Devyn.Bernhard@gmail.com",
                            Name = "Mya Volkman",
                            Phone = "1-892-353-9277"
                        },
                        new
                        {
                            Id = 72,
                            AccountId = 17,
                            Email = "Willis_Leannon@gmail.com",
                            Name = "Lou Reilly",
                            Phone = "383.481.0814 x01286"
                        },
                        new
                        {
                            Id = 73,
                            AccountId = 12,
                            Email = "Justen39@hotmail.com",
                            Name = "Mallie Waters",
                            Phone = "322.462.1567 x7668"
                        },
                        new
                        {
                            Id = 74,
                            AccountId = 7,
                            Email = "Corine.Schimmel68@hotmail.com",
                            Name = "Keely Marquardt",
                            Phone = "405.365.6622 x4969"
                        },
                        new
                        {
                            Id = 75,
                            AccountId = 21,
                            Email = "Abe51@gmail.com",
                            Name = "Bridget Rogahn",
                            Phone = "960-701-6490"
                        },
                        new
                        {
                            Id = 76,
                            AccountId = 24,
                            Email = "Mazie.Fay@hotmail.com",
                            Name = "Jairo Daugherty",
                            Phone = "970-882-3369"
                        },
                        new
                        {
                            Id = 77,
                            AccountId = 6,
                            Email = "Marjorie_MacGyver82@yahoo.com",
                            Name = "Carole Sipes",
                            Phone = "491.821.2395 x20091"
                        },
                        new
                        {
                            Id = 78,
                            AccountId = 21,
                            Email = "Selina.Collins@gmail.com",
                            Name = "Litzy Bahringer",
                            Phone = "401-256-4462 x9085"
                        },
                        new
                        {
                            Id = 79,
                            AccountId = 20,
                            Email = "Lilly_Nikolaus@gmail.com",
                            Name = "Ross Thompson",
                            Phone = "616-754-6613 x6850"
                        },
                        new
                        {
                            Id = 80,
                            AccountId = 7,
                            Email = "Orville.Abshire45@hotmail.com",
                            Name = "Joany Boyle",
                            Phone = "1-412-452-9378 x89677"
                        },
                        new
                        {
                            Id = 81,
                            AccountId = 5,
                            Email = "Aurore_Wiegand@gmail.com",
                            Name = "Danial Volkman",
                            Phone = "815.730.4664"
                        },
                        new
                        {
                            Id = 82,
                            AccountId = 5,
                            Email = "Aileen_Veum@hotmail.com",
                            Name = "Myah Walter",
                            Phone = "909-274-4769"
                        },
                        new
                        {
                            Id = 83,
                            AccountId = 12,
                            Email = "Zechariah96@yahoo.com",
                            Name = "Newell Feeney",
                            Phone = "1-773-641-6773"
                        },
                        new
                        {
                            Id = 84,
                            AccountId = 4,
                            Email = "Joaquin.Conn@yahoo.com",
                            Name = "Casandra Morar",
                            Phone = "357.951.0451"
                        },
                        new
                        {
                            Id = 85,
                            AccountId = 25,
                            Email = "Elva.Windler41@gmail.com",
                            Name = "Robin Stamm",
                            Phone = "(481) 714-5165 x526"
                        },
                        new
                        {
                            Id = 86,
                            AccountId = 13,
                            Email = "Nathanael3@gmail.com",
                            Name = "Ally Grimes",
                            Phone = "335.639.1196 x606"
                        },
                        new
                        {
                            Id = 87,
                            AccountId = 23,
                            Email = "Mavis.Reynolds@hotmail.com",
                            Name = "Providenci Bartell",
                            Phone = "355.448.6794 x8821"
                        },
                        new
                        {
                            Id = 88,
                            AccountId = 22,
                            Email = "Gideon_Hermann@yahoo.com",
                            Name = "Wallace Hessel",
                            Phone = "1-221-930-9746 x837"
                        },
                        new
                        {
                            Id = 89,
                            AccountId = 21,
                            Email = "Willy.Olson11@hotmail.com",
                            Name = "Loyal Swift",
                            Phone = "355-684-6931 x34971"
                        },
                        new
                        {
                            Id = 90,
                            AccountId = 22,
                            Email = "Ross.Turcotte63@hotmail.com",
                            Name = "Annamae Davis",
                            Phone = "490.705.5723 x733"
                        },
                        new
                        {
                            Id = 91,
                            AccountId = 11,
                            Email = "Blaise54@gmail.com",
                            Name = "Alison Spencer",
                            Phone = "767.833.1639"
                        },
                        new
                        {
                            Id = 92,
                            AccountId = 2,
                            Email = "Scot.Yost@yahoo.com",
                            Name = "Loy Wiza",
                            Phone = "(480) 818-1011"
                        },
                        new
                        {
                            Id = 93,
                            AccountId = 20,
                            Email = "Joelle.OHara47@gmail.com",
                            Name = "Kenyon Brakus",
                            Phone = "1-829-392-7902"
                        },
                        new
                        {
                            Id = 94,
                            AccountId = 5,
                            Email = "Abby.Bosco@gmail.com",
                            Name = "Cleo Berge",
                            Phone = "1-683-259-8389"
                        },
                        new
                        {
                            Id = 95,
                            AccountId = 13,
                            Email = "Margot_Rippin91@hotmail.com",
                            Name = "Kenyon Kerluke",
                            Phone = "1-787-462-3018 x1962"
                        },
                        new
                        {
                            Id = 96,
                            AccountId = 3,
                            Email = "Keenan.Yundt@gmail.com",
                            Name = "Dimitri Abbott",
                            Phone = "1-751-593-1950"
                        },
                        new
                        {
                            Id = 97,
                            AccountId = 1,
                            Email = "Tania.Rempel@hotmail.com",
                            Name = "Maia Gottlieb",
                            Phone = "542-689-2257 x5161"
                        },
                        new
                        {
                            Id = 98,
                            AccountId = 17,
                            Email = "Naomie.Daugherty@hotmail.com",
                            Name = "Holden Mraz",
                            Phone = "1-713-858-2769"
                        },
                        new
                        {
                            Id = 99,
                            AccountId = 10,
                            Email = "Pascale_Doyle22@hotmail.com",
                            Name = "Abigail Hoeger",
                            Phone = "(973) 939-7256"
                        },
                        new
                        {
                            Id = 100,
                            AccountId = 24,
                            Email = "Albin_Oberbrunner@hotmail.com",
                            Name = "Erica Walker",
                            Phone = "(639) 488-8609 x4208"
                        });
                });

            modelBuilder.Entity("Lab2.API.Entities.Deal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("ActualRevenue")
                        .HasColumnType("float");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<int>("LeadId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("LeadId")
                        .IsUnique();

                    b.ToTable("Deals", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ActualRevenue = 147362.0,
                            Description = "Nihil est sint qui sit dolor quo excepturi velit ipsa qui temporibus.",
                            LeadId = 1,
                            Status = 2,
                            Title = "Voluptas iure odio consequuntur."
                        },
                        new
                        {
                            Id = 2,
                            ActualRevenue = 132576.0,
                            Description = "Reiciendis et ipsa sed odio doloremque explicabo asperiores officia nihil.",
                            LeadId = 2,
                            Status = 1,
                            Title = "Quasi labore dolores culpa et."
                        },
                        new
                        {
                            Id = 3,
                            ActualRevenue = 457023.0,
                            Description = "Totam reprehenderit nulla tenetur aut commodi maiores laboriosam numquam nihil quasi nemo et voluptatibus exercitationem sit qui facilis iusto suscipit omnis deserunt et assumenda occaecati est et eaque qui eaque.",
                            LeadId = 3,
                            Status = 2,
                            Title = "Sed quia occaecati ea."
                        },
                        new
                        {
                            Id = 4,
                            ActualRevenue = 392101.0,
                            Description = "Modi ea consequatur et consequatur tempora voluptatibus sed accusantium quo aut ratione ex modi aperiam sint sed reprehenderit perspiciatis et.",
                            LeadId = 4,
                            Status = 1,
                            Title = "Qui perferendis est aut."
                        },
                        new
                        {
                            Id = 5,
                            ActualRevenue = 258733.0,
                            Description = "A et nulla id expedita et aut in vel nihil repellendus minus ab inventore veritatis ipsam molestiae corrupti nam quis id voluptatem sint.",
                            LeadId = 5,
                            Status = 2,
                            Title = "Recusandae qui et nesciunt tempore."
                        },
                        new
                        {
                            Id = 6,
                            ActualRevenue = 243898.0,
                            Description = "Illum non sunt eius quidem cumque sint corporis atque sint sed perspiciatis et fugit veritatis ut mollitia accusamus atque aperiam omnis sed quae cupiditate possimus corporis.",
                            LeadId = 6,
                            Status = 0,
                            Title = "Excepturi facere esse voluptas libero pariatur."
                        },
                        new
                        {
                            Id = 7,
                            ActualRevenue = 359806.0,
                            Description = "Veritatis perferendis doloremque ut et dolorem accusantium odio quos at et omnis esse voluptatem iure sed consequatur blanditiis voluptatem laboriosam sed et explicabo et.",
                            LeadId = 7,
                            Status = 1,
                            Title = "Quis mollitia deleniti voluptas delectus odit."
                        },
                        new
                        {
                            Id = 8,
                            ActualRevenue = 36861.0,
                            Description = "Omnis quidem enim illum autem quis illum beatae quidem nihil dolores aut exercitationem porro quisquam animi ab ipsa expedita ratione ut.",
                            LeadId = 8,
                            Status = 2,
                            Title = "Mollitia deleniti veritatis voluptatibus."
                        },
                        new
                        {
                            Id = 9,
                            ActualRevenue = 177330.0,
                            Description = "Vel dolor dolor laborum est saepe esse dolores itaque dolorum quis repudiandae error libero voluptatem ut dignissimos consequatur distinctio vel sed et reiciendis qui sapiente iusto.",
                            LeadId = 9,
                            Status = 1,
                            Title = "Voluptatem vero explicabo voluptate ut eos."
                        },
                        new
                        {
                            Id = 10,
                            ActualRevenue = 162354.0,
                            Description = "Perferendis sed totam iste eum vitae amet labore eaque qui vel voluptatem quos architecto facilis officia.",
                            LeadId = 10,
                            Status = 0,
                            Title = "Officiis ea consequatur exercitationem."
                        },
                        new
                        {
                            Id = 11,
                            ActualRevenue = 452267.0,
                            Description = "Sint est ut maiores omnis odit eius voluptas facere sit et eos et dolore optio omnis vel officiis aspernatur voluptate necessitatibus omnis sed ad.",
                            LeadId = 11,
                            Status = 1,
                            Title = "Illum quod ad."
                        },
                        new
                        {
                            Id = 12,
                            ActualRevenue = 357273.0,
                            Description = "Perferendis ducimus ea debitis culpa harum dignissimos ipsa praesentium quibusdam et eligendi fuga unde veritatis et similique beatae voluptas.",
                            LeadId = 12,
                            Status = 1,
                            Title = "Qui delectus odit."
                        },
                        new
                        {
                            Id = 13,
                            ActualRevenue = 24453.0,
                            Description = "Nisi provident est deserunt et aliquam rerum dolores velit nobis perferendis iste tempore dignissimos nemo.",
                            LeadId = 13,
                            Status = 0,
                            Title = "Harum dolor a."
                        },
                        new
                        {
                            Id = 14,
                            ActualRevenue = 345506.0,
                            Description = "Unde labore magnam praesentium et officiis id quia itaque error sunt est enim et vel mollitia vel eos quia eaque velit aut fugit aut quo qui vero rerum ut.",
                            LeadId = 14,
                            Status = 1,
                            Title = "Accusantium commodi quia natus vitae."
                        },
                        new
                        {
                            Id = 15,
                            ActualRevenue = 426805.0,
                            Description = "Ut quaerat odio recusandae provident odit sit voluptas deleniti eos doloribus impedit voluptas assumenda aut nam sint ea cupiditate voluptates quas et vitae.",
                            LeadId = 15,
                            Status = 0,
                            Title = "Ab officia architecto."
                        },
                        new
                        {
                            Id = 16,
                            ActualRevenue = 330485.0,
                            Description = "Ipsa ut asperiores aperiam veniam aliquid amet non soluta debitis et fugit rerum soluta et placeat deserunt totam perspiciatis ad qui quae deserunt aut et asperiores.",
                            LeadId = 16,
                            Status = 0,
                            Title = "Culpa alias aliquid."
                        },
                        new
                        {
                            Id = 17,
                            ActualRevenue = 255267.0,
                            Description = "Voluptates et cupiditate ut culpa iste aspernatur quis distinctio sunt voluptate laudantium nulla error doloremque rerum ab.",
                            LeadId = 17,
                            Status = 1,
                            Title = "A et eos et."
                        },
                        new
                        {
                            Id = 18,
                            ActualRevenue = 433155.0,
                            Description = "Qui accusamus voluptatem dolores voluptas autem dolores praesentium aut aperiam quis qui et nisi vero sed ad officiis provident sed voluptas deserunt nihil deleniti et.",
                            LeadId = 18,
                            Status = 1,
                            Title = "Ipsa esse magni maxime recusandae."
                        },
                        new
                        {
                            Id = 19,
                            ActualRevenue = 386148.0,
                            Description = "Culpa odit dolore suscipit voluptatem similique accusamus ducimus aliquam accusantium impedit voluptates et aut id et quod minus commodi beatae necessitatibus eius maxime ea voluptatem eius reiciendis repellat enim.",
                            LeadId = 19,
                            Status = 1,
                            Title = "Illo nam voluptatem dolorem dolorem."
                        },
                        new
                        {
                            Id = 20,
                            ActualRevenue = 178706.0,
                            Description = "Ipsam voluptatem doloribus et repellendus commodi nam ea est molestiae recusandae quam recusandae dolorum maxime natus beatae aliquid porro sint eos odio quasi.",
                            LeadId = 20,
                            Status = 2,
                            Title = "Aut dolor vero earum et."
                        },
                        new
                        {
                            Id = 21,
                            ActualRevenue = 330766.0,
                            Description = "Sit unde sit exercitationem provident dolorem omnis veritatis aut nemo ducimus fuga ea.",
                            LeadId = 21,
                            Status = 0,
                            Title = "Quaerat dignissimos qui."
                        },
                        new
                        {
                            Id = 22,
                            ActualRevenue = 446122.0,
                            Description = "Sit quisquam cumque et dolores eos saepe hic pariatur minus ullam aliquid nisi dolorum quis ratione et consequatur voluptatem dolorem dolore dolore totam in.",
                            LeadId = 22,
                            Status = 1,
                            Title = "Tenetur quia quas ea sunt."
                        },
                        new
                        {
                            Id = 23,
                            ActualRevenue = 442567.0,
                            Description = "Eius earum eaque nulla cupiditate tempora officia aliquam mollitia sed aut veniam nihil quia ipsum enim.",
                            LeadId = 23,
                            Status = 0,
                            Title = "Adipisci eum nostrum."
                        },
                        new
                        {
                            Id = 24,
                            ActualRevenue = 65717.0,
                            Description = "Soluta sunt modi est laudantium rerum et et aut et tempora eos magnam temporibus exercitationem pariatur aut ea ratione explicabo hic qui necessitatibus deleniti.",
                            LeadId = 24,
                            Status = 2,
                            Title = "Voluptatem sequi et."
                        },
                        new
                        {
                            Id = 25,
                            ActualRevenue = 157022.0,
                            Description = "Est neque dolores unde alias illo et quisquam hic quibusdam et voluptatem cumque unde corrupti aliquam neque autem et ab et dolores laboriosam perspiciatis.",
                            LeadId = 25,
                            Status = 0,
                            Title = "Excepturi temporibus quisquam sunt nemo rerum."
                        },
                        new
                        {
                            Id = 26,
                            ActualRevenue = 353902.0,
                            Description = "Ipsam consequatur omnis commodi est incidunt modi debitis animi quidem fuga doloremque eaque ad ut voluptas.",
                            LeadId = 26,
                            Status = 1,
                            Title = "Voluptatum qui dolor quidem perspiciatis."
                        },
                        new
                        {
                            Id = 27,
                            ActualRevenue = 382713.0,
                            Description = "Optio voluptatem sit omnis consequatur velit cupiditate aut est soluta est eos rerum molestiae fugit omnis natus blanditiis.",
                            LeadId = 27,
                            Status = 0,
                            Title = "Dignissimos magni ut voluptas molestiae odit."
                        },
                        new
                        {
                            Id = 28,
                            ActualRevenue = 185442.0,
                            Description = "Voluptas beatae quod dolores at totam facilis libero vero reprehenderit qui delectus qui expedita quod esse sit voluptas est at magni iste repudiandae eaque ut sit et asperiores.",
                            LeadId = 28,
                            Status = 1,
                            Title = "Modi blanditiis voluptates asperiores."
                        },
                        new
                        {
                            Id = 29,
                            ActualRevenue = 471952.0,
                            Description = "Dolore cum autem rerum et laborum aut quis vitae reiciendis soluta.",
                            LeadId = 29,
                            Status = 1,
                            Title = "Atque ea ab ipsa sint."
                        },
                        new
                        {
                            Id = 30,
                            ActualRevenue = 122418.0,
                            Description = "Possimus odit et dolorem magnam atque ut dicta accusamus sequi rerum hic quo soluta voluptates reiciendis quos architecto et corporis sed aut sint molestiae nulla rerum.",
                            LeadId = 30,
                            Status = 2,
                            Title = "Mollitia vel maiores."
                        });
                });

            modelBuilder.Entity("Lab2.API.Entities.DealProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DealId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PricePerUnit")
                        .HasColumnType("float");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DealId");

                    b.HasIndex("ProductId");

                    b.ToTable("DealProducts", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DealId = 18,
                            PricePerUnit = 16.0,
                            ProductId = 6,
                            Quantity = 37
                        },
                        new
                        {
                            Id = 2,
                            DealId = 11,
                            PricePerUnit = 52.0,
                            ProductId = 2,
                            Quantity = 62
                        },
                        new
                        {
                            Id = 3,
                            DealId = 28,
                            PricePerUnit = 41.0,
                            ProductId = 5,
                            Quantity = 58
                        },
                        new
                        {
                            Id = 4,
                            DealId = 9,
                            PricePerUnit = 35.0,
                            ProductId = 8,
                            Quantity = 31
                        },
                        new
                        {
                            Id = 5,
                            DealId = 29,
                            PricePerUnit = 59.0,
                            ProductId = 6,
                            Quantity = 5
                        });
                });

            modelBuilder.Entity("Lab2.API.Entities.Lead", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<string>("DisqualifiedDescription")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<int?>("DisqualifiedReason")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndedDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("EstimatedRevenue")
                        .HasColumnType("float");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Source")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("Leads", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccountId = 16,
                            Description = "Voluptas fugiat aut expedita hic ex in voluptatem sunt illo aut.",
                            EndedDate = new DateTime(2022, 12, 31, 4, 39, 7, 848, DateTimeKind.Local).AddTicks(7090),
                            EstimatedRevenue = 208710.0,
                            Source = 1,
                            Status = 2,
                            Title = "Ut eius voluptatem."
                        },
                        new
                        {
                            Id = 2,
                            AccountId = 8,
                            Description = "Itaque et expedita eos ducimus alias non excepturi quia ea cupiditate omnis ratione temporibus quis doloribus repellendus repudiandae et nobis in ab temporibus et.",
                            EndedDate = new DateTime(2023, 1, 26, 16, 27, 10, 505, DateTimeKind.Local).AddTicks(9196),
                            EstimatedRevenue = 336601.0,
                            Source = 3,
                            Status = 2,
                            Title = "Et velit minima possimus."
                        },
                        new
                        {
                            Id = 3,
                            AccountId = 13,
                            Description = "Odit molestiae quaerat est excepturi qui beatae quos aperiam ut et qui dolor exercitationem quidem magni voluptas illo nihil voluptas.",
                            EndedDate = new DateTime(2022, 8, 18, 19, 10, 12, 836, DateTimeKind.Local).AddTicks(7064),
                            EstimatedRevenue = 394448.0,
                            Source = 2,
                            Status = 2,
                            Title = "Est illo ut doloremque."
                        },
                        new
                        {
                            Id = 4,
                            AccountId = 9,
                            Description = "Ad earum pariatur magni aut commodi non minima est similique itaque sint.",
                            EstimatedRevenue = 66188.0,
                            Source = 4,
                            Status = 1,
                            Title = "Odit est voluptatem aperiam illum ad."
                        },
                        new
                        {
                            Id = 5,
                            AccountId = 3,
                            Description = "Et sequi numquam vitae velit fugiat dolores quasi aut quibusdam facilis soluta.",
                            DisqualifiedDescription = "Id voluptas praesentium et non quasi iusto est et quo qui dolore non pariatur necessitatibus doloremque et inventore quia voluptatem quo atque voluptatem sed placeat.",
                            DisqualifiedReason = 0,
                            EndedDate = new DateTime(2023, 3, 16, 5, 44, 17, 814, DateTimeKind.Local).AddTicks(873),
                            EstimatedRevenue = 389063.0,
                            Source = 4,
                            Status = 3,
                            Title = "Blanditiis non rerum aut veritatis laboriosam."
                        },
                        new
                        {
                            Id = 6,
                            AccountId = 17,
                            Description = "Rerum harum provident sed debitis non nihil quo doloremque iusto rerum.",
                            DisqualifiedDescription = "Adipisci vitae pariatur odio voluptate modi alias vitae omnis voluptatibus voluptatibus enim blanditiis quis quos qui sunt quidem aut nihil voluptatem voluptatum quidem soluta non.",
                            DisqualifiedReason = 4,
                            EndedDate = new DateTime(2023, 1, 27, 13, 9, 47, 64, DateTimeKind.Local).AddTicks(9916),
                            EstimatedRevenue = 217468.0,
                            Source = 1,
                            Status = 3,
                            Title = "Unde autem officia aut."
                        },
                        new
                        {
                            Id = 7,
                            AccountId = 2,
                            Description = "Placeat reiciendis sed quia nemo quae rem voluptas tempora dolor quo iste et et neque amet.",
                            EndedDate = new DateTime(2023, 4, 2, 19, 51, 14, 4, DateTimeKind.Local).AddTicks(5638),
                            EstimatedRevenue = 165462.0,
                            Source = 1,
                            Status = 2,
                            Title = "Commodi pariatur excepturi deserunt possimus voluptatem."
                        },
                        new
                        {
                            Id = 8,
                            AccountId = 18,
                            Description = "Quam voluptatum aut quidem quam quos id quae a sit voluptate aliquid expedita aut expedita at reiciendis iste ab voluptas.",
                            EstimatedRevenue = 298045.0,
                            Source = 0,
                            Status = 1,
                            Title = "Sit omnis quod voluptates nostrum."
                        },
                        new
                        {
                            Id = 9,
                            AccountId = 1,
                            Description = "Eum dignissimos aspernatur quo voluptatum molestias amet rerum laborum quas in adipisci commodi architecto veritatis hic reiciendis repellendus aliquam.",
                            EstimatedRevenue = 386515.0,
                            Source = 3,
                            Status = 0,
                            Title = "Ut assumenda consectetur nisi velit."
                        },
                        new
                        {
                            Id = 10,
                            AccountId = 8,
                            Description = "Corporis voluptatum adipisci commodi nulla aspernatur iure saepe qui et error ut laudantium aut in esse exercitationem voluptas ea nobis et est aut incidunt similique qui.",
                            EstimatedRevenue = 482342.0,
                            Source = 1,
                            Status = 1,
                            Title = "Molestias nam id dolorem."
                        },
                        new
                        {
                            Id = 11,
                            AccountId = 3,
                            Description = "Vitae aut aspernatur magni et recusandae omnis nihil aperiam quod cumque nisi est dignissimos enim quasi omnis et ipsum pariatur atque temporibus expedita eum eum rerum.",
                            EstimatedRevenue = 236838.0,
                            Source = 2,
                            Status = 0,
                            Title = "Tempora atque facere consequatur."
                        },
                        new
                        {
                            Id = 12,
                            AccountId = 7,
                            Description = "Eaque sit voluptas repellat voluptatibus et culpa eos cum et.",
                            DisqualifiedDescription = "Voluptas iste hic quae doloribus architecto sed sit esse qui quibusdam.",
                            DisqualifiedReason = 2,
                            EndedDate = new DateTime(2023, 3, 7, 21, 49, 43, 935, DateTimeKind.Local).AddTicks(658),
                            EstimatedRevenue = 274634.0,
                            Source = 2,
                            Status = 3,
                            Title = "Molestias hic ab molestias."
                        },
                        new
                        {
                            Id = 13,
                            AccountId = 9,
                            Description = "Magnam numquam et illo quia quidem omnis recusandae voluptatum aut aut quas omnis odit sit sit voluptatem voluptatum sit totam quo reiciendis eligendi molestiae impedit aliquam aperiam id quis vero.",
                            DisqualifiedDescription = "Ullam pariatur reprehenderit sit corporis aliquam consequatur eum est possimus minima iure veniam voluptatem aliquam.",
                            DisqualifiedReason = 0,
                            EndedDate = new DateTime(2022, 10, 11, 1, 33, 25, 709, DateTimeKind.Local).AddTicks(8028),
                            EstimatedRevenue = 158134.0,
                            Source = 0,
                            Status = 3,
                            Title = "Nihil est aut omnis ea."
                        },
                        new
                        {
                            Id = 14,
                            AccountId = 14,
                            Description = "Culpa minus sunt cupiditate voluptates distinctio fugit repellat quo quis et soluta ratione reiciendis.",
                            EndedDate = new DateTime(2023, 5, 9, 16, 51, 36, 468, DateTimeKind.Local).AddTicks(2451),
                            EstimatedRevenue = 230972.0,
                            Source = 4,
                            Status = 2,
                            Title = "Non cumque labore sed quam et."
                        },
                        new
                        {
                            Id = 15,
                            AccountId = 1,
                            Description = "Quibusdam ipsum id dolorem ut molestias rem dolorum magni sed iure praesentium quas et hic accusamus soluta officia dolores consequatur autem harum mollitia odit nulla.",
                            EstimatedRevenue = 190078.0,
                            Source = 4,
                            Status = 1,
                            Title = "Quia quibusdam ut est voluptatum quae."
                        },
                        new
                        {
                            Id = 16,
                            AccountId = 14,
                            Description = "Vero assumenda adipisci unde eius pariatur deleniti labore est eum nemo accusamus.",
                            EndedDate = new DateTime(2023, 6, 21, 20, 42, 8, 569, DateTimeKind.Local).AddTicks(8329),
                            EstimatedRevenue = 177223.0,
                            Source = 4,
                            Status = 2,
                            Title = "Ea similique molestiae."
                        },
                        new
                        {
                            Id = 17,
                            AccountId = 8,
                            Description = "Numquam ut omnis velit vero omnis reiciendis est ut non sed voluptas omnis labore qui iure at sint quas pariatur ut alias corporis.",
                            EndedDate = new DateTime(2023, 1, 9, 12, 52, 21, 610, DateTimeKind.Local).AddTicks(283),
                            EstimatedRevenue = 313005.0,
                            Source = 4,
                            Status = 2,
                            Title = "Beatae beatae rerum qui sequi."
                        },
                        new
                        {
                            Id = 18,
                            AccountId = 18,
                            Description = "Omnis rerum illum nihil repellendus asperiores iste deserunt natus optio et dolore ex sunt qui ut occaecati sint expedita eum in voluptas nostrum occaecati accusamus veritatis nesciunt ipsa atque.",
                            DisqualifiedDescription = "Ab nostrum nihil iure fugit cum odit necessitatibus velit rerum.",
                            DisqualifiedReason = 3,
                            EndedDate = new DateTime(2023, 4, 30, 3, 9, 35, 520, DateTimeKind.Local).AddTicks(8450),
                            EstimatedRevenue = 373396.0,
                            Source = 3,
                            Status = 3,
                            Title = "Eius nobis aut nulla."
                        },
                        new
                        {
                            Id = 19,
                            AccountId = 18,
                            Description = "Asperiores unde alias recusandae fugiat aliquam ducimus non earum ullam nobis aliquid maxime non sit et dolor ab autem.",
                            EstimatedRevenue = 161330.0,
                            Source = 2,
                            Status = 0,
                            Title = "Cupiditate ipsa quis ipsa."
                        },
                        new
                        {
                            Id = 20,
                            AccountId = 12,
                            Description = "Voluptatem nemo nihil libero dicta ullam velit fugit fugit ut vitae sapiente qui reprehenderit et laborum placeat quibusdam repellat similique neque inventore sunt sit iste corporis assumenda aperiam aut et.",
                            EstimatedRevenue = 192415.0,
                            Source = 3,
                            Status = 1,
                            Title = "Nam adipisci aspernatur laudantium vel."
                        },
                        new
                        {
                            Id = 21,
                            AccountId = 5,
                            Description = "Sed doloribus sed et est consequatur magni temporibus dolorem fugiat perferendis fugit et.",
                            EndedDate = new DateTime(2022, 11, 25, 7, 9, 56, 21, DateTimeKind.Local).AddTicks(4893),
                            EstimatedRevenue = 382922.0,
                            Source = 1,
                            Status = 2,
                            Title = "Exercitationem accusantium sunt sed voluptatem sint."
                        },
                        new
                        {
                            Id = 22,
                            AccountId = 12,
                            Description = "Quis qui ut vel dolores repudiandae et doloribus molestiae vel.",
                            EndedDate = new DateTime(2023, 3, 20, 18, 11, 21, 322, DateTimeKind.Local).AddTicks(8290),
                            EstimatedRevenue = 257840.0,
                            Source = 1,
                            Status = 2,
                            Title = "Quibusdam velit ut rerum."
                        },
                        new
                        {
                            Id = 23,
                            AccountId = 4,
                            Description = "Distinctio temporibus vitae voluptate quia accusantium eos deleniti voluptas amet ut laboriosam consequatur optio nostrum voluptatem sapiente esse esse veritatis ab optio eum iusto dolores voluptatum.",
                            EndedDate = new DateTime(2022, 9, 30, 12, 30, 3, 970, DateTimeKind.Local).AddTicks(894),
                            EstimatedRevenue = 215202.0,
                            Source = 4,
                            Status = 2,
                            Title = "Fugit magnam consequuntur."
                        },
                        new
                        {
                            Id = 24,
                            AccountId = 16,
                            Description = "Accusantium fugiat voluptatem officiis quia quos qui expedita est repudiandae et sit perferendis modi eveniet sint fugit repellendus ut.",
                            EstimatedRevenue = 442923.0,
                            Source = 3,
                            Status = 1,
                            Title = "Commodi impedit et."
                        },
                        new
                        {
                            Id = 25,
                            AccountId = 12,
                            Description = "Sed vero libero omnis in iusto quia quis modi quia unde consequatur fuga consequatur distinctio.",
                            DisqualifiedDescription = "Quae ipsam dolore ipsa accusantium aspernatur iusto nobis ratione qui dolor perferendis dolorum deserunt occaecati cum ad et natus officiis qui fuga.",
                            DisqualifiedReason = 3,
                            EndedDate = new DateTime(2023, 7, 4, 17, 34, 25, 122, DateTimeKind.Local).AddTicks(3755),
                            EstimatedRevenue = 414314.0,
                            Source = 4,
                            Status = 3,
                            Title = "Asperiores modi est."
                        },
                        new
                        {
                            Id = 26,
                            AccountId = 2,
                            Description = "Voluptatibus cupiditate soluta id at repellendus sed et non dolorem est illum minus.",
                            EstimatedRevenue = 384082.0,
                            Source = 3,
                            Status = 1,
                            Title = "Voluptatem at ratione officia."
                        },
                        new
                        {
                            Id = 27,
                            AccountId = 25,
                            Description = "Non nisi nemo id consequatur voluptas et reiciendis aut qui rem velit eum et voluptatem nihil saepe qui libero officia autem beatae doloribus labore laborum.",
                            EndedDate = new DateTime(2022, 10, 12, 10, 7, 47, 193, DateTimeKind.Local).AddTicks(974),
                            EstimatedRevenue = 331496.0,
                            Source = 1,
                            Status = 2,
                            Title = "Perspiciatis earum iste vero quos."
                        },
                        new
                        {
                            Id = 28,
                            AccountId = 25,
                            Description = "Dolorum delectus nostrum molestiae molestias consequatur minus voluptatem suscipit similique quisquam.",
                            EstimatedRevenue = 155074.0,
                            Source = 1,
                            Status = 0,
                            Title = "Sit non quam sunt."
                        },
                        new
                        {
                            Id = 29,
                            AccountId = 22,
                            Description = "Sed qui doloribus laboriosam quod vel debitis porro officiis debitis non asperiores.",
                            EstimatedRevenue = 193508.0,
                            Source = 2,
                            Status = 1,
                            Title = "Hic soluta in sequi cupiditate."
                        },
                        new
                        {
                            Id = 30,
                            AccountId = 22,
                            Description = "Eveniet aut soluta qui quia neque quia sed et ratione sint quia molestiae molestias vel rerum facilis et soluta recusandae corporis est sit ut eum deleniti eum.",
                            EstimatedRevenue = 380947.0,
                            Source = 1,
                            Status = 0,
                            Title = "Odio natus sit assumenda."
                        });
                });

            modelBuilder.Entity("Lab2.API.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("ProductCode")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductCode")
                        .IsUnique();

                    b.ToTable("Products", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsAvailable = true,
                            Name = "Unbranded Cotton Fish",
                            Price = 111.0,
                            ProductCode = "PRO-01768008",
                            Type = 0
                        },
                        new
                        {
                            Id = 2,
                            IsAvailable = true,
                            Name = "Licensed Soft Table",
                            Price = 112.0,
                            ProductCode = "PRO-03314005",
                            Type = 1
                        },
                        new
                        {
                            Id = 3,
                            IsAvailable = true,
                            Name = "Intelligent Cotton Soap",
                            Price = 684.0,
                            ProductCode = "PRO-56387612",
                            Type = 0
                        },
                        new
                        {
                            Id = 4,
                            IsAvailable = true,
                            Name = "Tasty Rubber Towels",
                            Price = 587.0,
                            ProductCode = "PRO-71796031",
                            Type = 1
                        },
                        new
                        {
                            Id = 5,
                            IsAvailable = true,
                            Name = "Small Metal Chicken",
                            Price = 228.0,
                            ProductCode = "PRO-79830805",
                            Type = 1
                        },
                        new
                        {
                            Id = 6,
                            IsAvailable = true,
                            Name = "Refined Steel Salad",
                            Price = 456.0,
                            ProductCode = "PRO-05724048",
                            Type = 1
                        },
                        new
                        {
                            Id = 7,
                            IsAvailable = true,
                            Name = "Licensed Fresh Bacon",
                            Price = 58.0,
                            ProductCode = "PRO-34848463",
                            Type = 0
                        },
                        new
                        {
                            Id = 8,
                            IsAvailable = true,
                            Name = "Handcrafted Metal Salad",
                            Price = 602.0,
                            ProductCode = "PRO-46238078",
                            Type = 1
                        },
                        new
                        {
                            Id = 9,
                            IsAvailable = true,
                            Name = "Licensed Fresh Bacon",
                            Price = 372.0,
                            ProductCode = "PRO-17280488",
                            Type = 0
                        },
                        new
                        {
                            Id = 10,
                            IsAvailable = true,
                            Name = "Handcrafted Rubber Fish",
                            Price = 119.0,
                            ProductCode = "PRO-79397964",
                            Type = 1
                        });
                });

            modelBuilder.Entity("Lab2.API.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RefreshTokenLifetime")
                        .HasColumnType("datetime2");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "adeb68b1-d5ba-49b2-aad8-4a0cca46f45c",
                            Email = "admin@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "admin",
                            NormalizedEmail = "ADMIN@GMAIL.COM",
                            NormalizedUserName = "ADMIN@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEClQ/jnCf7zr+8ck8ZNQKBTnODsGEFxZDvB86/wQf6sQdviAT52hI4rNgTyxC7xFUQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "0a49a020-87c7-411b-ba5b-dc2465203ca5",
                            TwoFactorEnabled = false,
                            UserName = "admin@gmail.com"
                        },
                        new
                        {
                            Id = 2,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "82b24761-fcb8-4e20-a809-6efcf47d8096",
                            Email = "Alvera92@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Eladio Spencer",
                            PasswordHash = "AQAAAAIAAYagAAAAEEQzWPYmDucLCQ385Hyw/vUJc+NnVAbs5a5OdNxLsHHh1pxdyxJ9EayX/OB25fPhSA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "f3f7e935-f259-42b0-915a-b873cdfe898f",
                            TwoFactorEnabled = false,
                            UserName = "Alvera92@gmail.com"
                        },
                        new
                        {
                            Id = 3,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "512ca473-7580-4eba-9824-f7709f045852",
                            Email = "Viviane89@hotmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Kory Hermiston",
                            PasswordHash = "AQAAAAIAAYagAAAAEKwUOZSOKVQLmDPHqQ7FgWmfkvMhbogZrDWhORswDrPatV0gB1ZxmzhiofdSLYxeoQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "3da302eb-0f0f-4eeb-8f58-4a14ce1fa4e6",
                            TwoFactorEnabled = false,
                            UserName = "Viviane89@hotmail.com"
                        },
                        new
                        {
                            Id = 4,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "c085af23-a597-4457-b322-5e012026dd74",
                            Email = "Rowena_Klocko71@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Judy Maggio",
                            PasswordHash = "AQAAAAIAAYagAAAAECGfehRwE7R6pxtPVbpT3v2/Ep2qQqyJLa9Suis/aAV3ys8vkjN9Dl6JcqDeiBr8hg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "f97e2262-1dfc-42fb-8a95-afdf5d85bbaf",
                            TwoFactorEnabled = false,
                            UserName = "Rowena_Klocko71@gmail.com"
                        },
                        new
                        {
                            Id = 5,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "3dec411f-5bde-499e-b322-6f7888a7e720",
                            Email = "Lane.Greenfelder@hotmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Felton Schultz",
                            PasswordHash = "AQAAAAIAAYagAAAAEDZ3Z9ZyhTOHXtlBIm1hww9JCZpM+BpJmX7mkWfrS+yoroZErJu91kzc7lOHrm2VrQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "8123d797-f348-4770-818d-9ba1c6a088ec",
                            TwoFactorEnabled = false,
                            UserName = "Lane.Greenfelder@hotmail.com"
                        },
                        new
                        {
                            Id = 6,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "2ca843b3-3cd1-4453-8782-1373729de303",
                            Email = "Andy.Harris32@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Lauren Goodwin",
                            PasswordHash = "AQAAAAIAAYagAAAAECw5etEjoK+tfq9M+h4vA46PpIKobMvjxRn03ivJQuMQqfp+5uW8hbcsXWEVhH+FaA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "b6558b45-c455-4a0e-8aac-501eeab9b0e5",
                            TwoFactorEnabled = false,
                            UserName = "Andy.Harris32@gmail.com"
                        },
                        new
                        {
                            Id = 7,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "5b2ad305-8d37-4936-8817-8da59a7b9cef",
                            Email = "Efrain.Bayer@hotmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Matilde Effertz",
                            PasswordHash = "AQAAAAIAAYagAAAAEE21udrDUq6V0Krng+iDD4skIIYRjxy6p/KDnCbGyZpD0xQSfmc2xpFCGqFf6inFQg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "2eb14e80-327c-449d-94b3-2040648c41d7",
                            TwoFactorEnabled = false,
                            UserName = "Efrain.Bayer@hotmail.com"
                        },
                        new
                        {
                            Id = 8,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "fbdbf15c-b72b-4bc6-8a46-da276a201b25",
                            Email = "Mackenzie_Barton@hotmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Mark Ondricka",
                            PasswordHash = "AQAAAAIAAYagAAAAEAzmdYZMm0xSZtRgvrUBLX+ovz5ou8ENlSyCpWsdAcKEBUKEjSjAqVZ/Pmeha1uZTA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "98cbd070-5bec-4dc9-955a-5d72a642f581",
                            TwoFactorEnabled = false,
                            UserName = "Mackenzie_Barton@hotmail.com"
                        },
                        new
                        {
                            Id = 9,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "e1c91d08-b09c-4c58-be93-7d274caae086",
                            Email = "Guido.Breitenberg@hotmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Pattie Rolfson",
                            PasswordHash = "AQAAAAIAAYagAAAAEAzspd9C8X9ibxKASKSgulXQATMkKsZXGYPJYowNtZ/Hw5ABWp+4QRbuLNpu7mqMoQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "1762c5c0-6fca-4c1a-a821-d3ebf7e83c9f",
                            TwoFactorEnabled = false,
                            UserName = "Guido.Breitenberg@hotmail.com"
                        },
                        new
                        {
                            Id = 10,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "e0947149-0bec-4236-a400-5bb09744a401",
                            Email = "Maci85@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Isadore Zulauf",
                            PasswordHash = "AQAAAAIAAYagAAAAEIj9g7JDOvr0w2hRijPcbsJ+FwtjeO4t2s15xmp/mO8rzNR4+TcMjeGqYuY0Apmwvg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "1c69f048-1024-4d5a-8651-afe9b42c5ccd",
                            TwoFactorEnabled = false,
                            UserName = "Maci85@gmail.com"
                        },
                        new
                        {
                            Id = 11,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "0a162a6c-c06d-4b23-ba66-ecc2be6c0d51",
                            Email = "Dallas.Maggio52@hotmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Kennith Glover",
                            PasswordHash = "AQAAAAIAAYagAAAAEGiwY107ACNKOk9fC4wUN9CDhmmwr8HzOiEz0ApXiF+4TJ04TQNGNIhU3WIV3tCDcA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "30e832bc-77b1-4e16-9590-67cdde6c7ec0",
                            TwoFactorEnabled = false,
                            UserName = "Dallas.Maggio52@hotmail.com"
                        },
                        new
                        {
                            Id = 12,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "598cbcaa-cf32-4709-ba04-791d11e74969",
                            Email = "Fredy_McCullough@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Kathryne Hansen",
                            PasswordHash = "AQAAAAIAAYagAAAAELUSg7i6SWKBxvCE5KL8Q4nOaiyK4M8wC7boxJKYWTzr59v3G9WybDfXFlCzaCBqxA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "4f3a268c-46bb-4625-b870-7f4a241af355",
                            TwoFactorEnabled = false,
                            UserName = "Fredy_McCullough@gmail.com"
                        },
                        new
                        {
                            Id = 13,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "faeb40c0-e355-41e5-ab3a-22798cd4cd97",
                            Email = "Pascale.Murphy5@yahoo.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Shea Bosco",
                            PasswordHash = "AQAAAAIAAYagAAAAEBI9UbLLXzBfbS4vgTo38JMVoZMCg31zljgmfKHllqbleAyxHDXNwKL3w/GqiQYkTQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "44b624c2-8eb6-4534-81c3-cd9a2b354553",
                            TwoFactorEnabled = false,
                            UserName = "Pascale.Murphy5@yahoo.com"
                        },
                        new
                        {
                            Id = 14,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "58439a3e-c2a2-41ad-8f58-5379ef53b987",
                            Email = "Abdullah85@hotmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Joan Kunde",
                            PasswordHash = "AQAAAAIAAYagAAAAEAPfu3IGj1i8xnpSAAAe1+7mqML4Y1Iz5UwsKd1few2380bsGr6OJ6qYkbR0rUXevw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "c1af4938-dda2-4b80-9e88-fe33ff7d3afc",
                            TwoFactorEnabled = false,
                            UserName = "Abdullah85@hotmail.com"
                        },
                        new
                        {
                            Id = 15,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "00a3215c-37b9-436a-9e79-bc2f72e2cca9",
                            Email = "Layla_Schmeler@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Gaetano Marvin",
                            PasswordHash = "AQAAAAIAAYagAAAAEMFtrdr+EMA274d3lp8pkEpHb+VlL0JayJ6o5dHByOYLtoXBVg+zLFX6oES8t2xS4Q==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "68b3a1ff-2de8-4b79-9ea3-7f659cdbf814",
                            TwoFactorEnabled = false,
                            UserName = "Layla_Schmeler@gmail.com"
                        },
                        new
                        {
                            Id = 16,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "72769024-f94c-40f3-89ab-d4ce52799033",
                            Email = "Robbie_Dicki@yahoo.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Erich Fay",
                            PasswordHash = "AQAAAAIAAYagAAAAEDD7gLlZa38nJ6LuzDOGhY5w71h1lSryv3dG1p8hlhFsCGX4HEDXyBAJp7mYcx4SPg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "f845eaf7-2cd6-4728-8fce-1be25a2d1047",
                            TwoFactorEnabled = false,
                            UserName = "Robbie_Dicki@yahoo.com"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = 2,
                            Name = "User",
                            NormalizedName = "USER"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 4,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 5,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 6,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 7,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 8,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 9,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 10,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 11,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 12,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 13,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 14,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 15,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 16,
                            RoleId = 2
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Lab2.API.Entities.Contact", b =>
                {
                    b.HasOne("Lab2.API.Entities.Account", "Account")
                        .WithMany("Contacts")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("Lab2.API.Entities.Deal", b =>
                {
                    b.HasOne("Lab2.API.Entities.Lead", "Lead")
                        .WithOne("Deal")
                        .HasForeignKey("Lab2.API.Entities.Deal", "LeadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lead");
                });

            modelBuilder.Entity("Lab2.API.Entities.DealProduct", b =>
                {
                    b.HasOne("Lab2.API.Entities.Deal", "Deal")
                        .WithMany("DealProducts")
                        .HasForeignKey("DealId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lab2.API.Entities.Product", "Product")
                        .WithMany("DealProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Deal");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Lab2.API.Entities.Lead", b =>
                {
                    b.HasOne("Lab2.API.Entities.Account", "Account")
                        .WithMany("Leads")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("Lab2.API.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("Lab2.API.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lab2.API.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("Lab2.API.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Lab2.API.Entities.Account", b =>
                {
                    b.Navigation("Contacts");

                    b.Navigation("Leads");
                });

            modelBuilder.Entity("Lab2.API.Entities.Deal", b =>
                {
                    b.Navigation("DealProducts");
                });

            modelBuilder.Entity("Lab2.API.Entities.Lead", b =>
                {
                    b.Navigation("Deal");
                });

            modelBuilder.Entity("Lab2.API.Entities.Product", b =>
                {
                    b.Navigation("DealProducts");
                });
#pragma warning restore 612, 618
        }
    }
}
