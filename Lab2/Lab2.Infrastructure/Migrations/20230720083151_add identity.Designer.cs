// <auto-generated />
using System;
using Lab2.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Lab2.Migrations
{
    [DbContext(typeof(CRMDbContext))]
    [Migration("20230720083151_add identity")]
    partial class addidentity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Lab2.API.Entities.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Phone")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<double>("TotalSales")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("Phone", "Email")
                        .IsUnique()
                        .HasFilter("[Phone] IS NOT NULL AND [Email] IS NOT NULL");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "92084 Jana Trafficway, East Rahul, Yemen",
                            Email = "Jaleel81@hotmail.com",
                            Name = "Beier - Weissnat",
                            Phone = "611-379-7443 x5515",
                            TotalSales = 13036.0
                        },
                        new
                        {
                            Id = 2,
                            Address = "7314 Kendall Corner, East Alvertamouth, Turks and Caicos Islands",
                            Email = "Alycia.Ratke@gmail.com",
                            Name = "Erdman - Hessel",
                            Phone = "(210) 370-9364",
                            TotalSales = 43811.0
                        },
                        new
                        {
                            Id = 3,
                            Address = "9035 Jakayla Corners, Ewaldland, Montserrat",
                            Email = "Sterling.Heathcote75@yahoo.com",
                            Name = "Crona - Ryan",
                            Phone = "825.785.9099",
                            TotalSales = 38113.0
                        },
                        new
                        {
                            Id = 4,
                            Address = "7270 Adelle Square, South Julia, Canada",
                            Email = "Darron61@hotmail.com",
                            Name = "Feeney - Corkery",
                            Phone = "707.763.1202",
                            TotalSales = 6353.0
                        },
                        new
                        {
                            Id = 5,
                            Address = "848 Emmanuel Row, West Trinity, Austria",
                            Email = "Alberto_Runolfsdottir@hotmail.com",
                            Name = "Monahan and Sons",
                            Phone = "(338) 393-1477",
                            TotalSales = 2945.0
                        },
                        new
                        {
                            Id = 6,
                            Address = "16587 Nelson Mills, Jarrodchester, Mongolia",
                            Email = "Pasquale_Carroll91@gmail.com",
                            Name = "Klocko, Quigley and Beier",
                            Phone = "291-882-6937 x865",
                            TotalSales = 43185.0
                        },
                        new
                        {
                            Id = 7,
                            Address = "0666 Larson Lane, Kochview, Lithuania",
                            Email = "Chris.Cole26@hotmail.com",
                            Name = "Bogan, Kassulke and Dicki",
                            Phone = "551-650-6063 x06823",
                            TotalSales = 16253.0
                        },
                        new
                        {
                            Id = 8,
                            Address = "1541 Maya Track, East Melisaville, Malawi",
                            Email = "Ramiro50@gmail.com",
                            Name = "Willms, Kihn and Dach",
                            Phone = "259.824.3256",
                            TotalSales = 19520.0
                        },
                        new
                        {
                            Id = 9,
                            Address = "94049 Torphy Overpass, New Mortimerberg, Cuba",
                            Email = "Annamarie82@hotmail.com",
                            Name = "Bergstrom - Hermiston",
                            Phone = "451.971.1141 x5130",
                            TotalSales = 17404.0
                        },
                        new
                        {
                            Id = 10,
                            Address = "6636 Terry Village, East Ernieberg, Mauritius",
                            Email = "Lilly44@gmail.com",
                            Name = "Bode, Schmitt and Grady",
                            Phone = "616-847-0599 x1656",
                            TotalSales = 44228.0
                        },
                        new
                        {
                            Id = 11,
                            Address = "109 Jolie Mews, Strackefort, Albania",
                            Email = "Leonardo_Erdman@yahoo.com",
                            Name = "Willms - Will",
                            Phone = "1-839-331-2573 x6697",
                            TotalSales = 13796.0
                        },
                        new
                        {
                            Id = 12,
                            Address = "03408 Allan Trail, New Augustaborough, Palau",
                            Email = "Cory.Pagac@hotmail.com",
                            Name = "Kub - Konopelski",
                            Phone = "1-221-797-2841 x749",
                            TotalSales = 19565.0
                        },
                        new
                        {
                            Id = 13,
                            Address = "80897 Zella Mill, South Lane, Cote d'Ivoire",
                            Email = "Bryana.Waters20@yahoo.com",
                            Name = "McCullough Group",
                            Phone = "455-204-5504 x7781",
                            TotalSales = 2964.0
                        },
                        new
                        {
                            Id = 14,
                            Address = "4064 Boehm Harbor, South Myah, Pakistan",
                            Email = "Nettie.Raynor@hotmail.com",
                            Name = "Deckow, Cronin and Ferry",
                            Phone = "1-478-987-6517 x294",
                            TotalSales = 47590.0
                        },
                        new
                        {
                            Id = 15,
                            Address = "00207 Johnson Burg, South Leslieview, Pitcairn Islands",
                            Email = "Ron.Quigley21@yahoo.com",
                            Name = "Hartmann - Cummerata",
                            Phone = "(448) 898-9495 x15126",
                            TotalSales = 12059.0
                        },
                        new
                        {
                            Id = 16,
                            Address = "418 Joe Inlet, New Jaylen, Netherlands Antilles",
                            Email = "Hulda_Klein94@yahoo.com",
                            Name = "Thiel - Lehner",
                            Phone = "1-657-772-9312 x71976",
                            TotalSales = 22149.0
                        },
                        new
                        {
                            Id = 17,
                            Address = "163 Daphne Circles, Port Trent, Cote d'Ivoire",
                            Email = "Richie31@yahoo.com",
                            Name = "Grady, Willms and Goodwin",
                            Phone = "284.368.4065 x24177",
                            TotalSales = 28554.0
                        },
                        new
                        {
                            Id = 18,
                            Address = "60074 Nickolas Roads, Port Annalise, Seychelles",
                            Email = "Clark1@gmail.com",
                            Name = "Oberbrunner - Denesik",
                            Phone = "(788) 751-6551 x8113",
                            TotalSales = 16759.0
                        },
                        new
                        {
                            Id = 19,
                            Address = "7685 Stephany Drive, Lake Marcelino, Senegal",
                            Email = "Christ49@yahoo.com",
                            Name = "Johnston - Lueilwitz",
                            Phone = "1-373-655-4691",
                            TotalSales = 547.0
                        },
                        new
                        {
                            Id = 20,
                            Address = "839 Wehner Canyon, New Junior, Angola",
                            Email = "Edyth.Deckow@yahoo.com",
                            Name = "Larkin, Bahringer and Kemmer",
                            Phone = "(871) 284-9568",
                            TotalSales = 15372.0
                        },
                        new
                        {
                            Id = 21,
                            Address = "14947 Schmidt Loaf, Rosebury, Palestinian Territory",
                            Email = "Rosalyn.Stamm@hotmail.com",
                            Name = "Rice, Beatty and Braun",
                            Phone = "(859) 720-5245",
                            TotalSales = 936.0
                        },
                        new
                        {
                            Id = 22,
                            Address = "5131 Winfield Center, New Emmaleeshire, South Africa",
                            Email = "Brandyn_Yost@hotmail.com",
                            Name = "Macejkovic, Stokes and Kreiger",
                            Phone = "617.518.1623 x486",
                            TotalSales = 13085.0
                        },
                        new
                        {
                            Id = 23,
                            Address = "5944 Hartmann Burg, South Taurean, Cook Islands",
                            Email = "Katelyn.Medhurst46@hotmail.com",
                            Name = "Mohr, Runolfsson and Gorczany",
                            Phone = "767-540-6573 x7236",
                            TotalSales = 21068.0
                        },
                        new
                        {
                            Id = 24,
                            Address = "562 Bergnaum Corner, Mustafaport, Czech Republic",
                            Email = "Alia77@gmail.com",
                            Name = "Leuschke, King and Crona",
                            Phone = "(545) 440-8922 x67973",
                            TotalSales = 4072.0
                        },
                        new
                        {
                            Id = 25,
                            Address = "317 Zakary Skyway, South Price, Jordan",
                            Email = "Carmen13@hotmail.com",
                            Name = "Rutherford, Herzog and McGlynn",
                            Phone = "286-818-8884 x802",
                            TotalSales = 16093.0
                        });
                });

            modelBuilder.Entity("Lab2.API.Entities.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Phone")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("Phone", "Email")
                        .IsUnique()
                        .HasFilter("[Phone] IS NOT NULL");

                    b.ToTable("Contacts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccountId = 17,
                            Email = "Celine_Hackett29@gmail.com",
                            Name = "Jana Ruecker",
                            Phone = "(695) 793-2765 x099"
                        },
                        new
                        {
                            Id = 2,
                            AccountId = 6,
                            Email = "Lora_Marks@hotmail.com",
                            Name = "Bennett Haag",
                            Phone = "1-454-235-2285 x147"
                        },
                        new
                        {
                            Id = 3,
                            AccountId = 24,
                            Email = "Cathrine.Harris10@gmail.com",
                            Name = "Jazlyn Koch",
                            Phone = "267.325.2114"
                        },
                        new
                        {
                            Id = 4,
                            AccountId = 6,
                            Email = "Tanner50@gmail.com",
                            Name = "Alessandra Stamm",
                            Phone = "(996) 219-3428 x13235"
                        },
                        new
                        {
                            Id = 5,
                            AccountId = 3,
                            Email = "Adolphus91@gmail.com",
                            Name = "Maryjane Monahan",
                            Phone = "904-594-1533"
                        },
                        new
                        {
                            Id = 6,
                            AccountId = 3,
                            Email = "Nadia_Jacobs27@yahoo.com",
                            Name = "Carter Gutmann",
                            Phone = "(982) 510-4279"
                        },
                        new
                        {
                            Id = 7,
                            AccountId = 22,
                            Email = "Reese20@gmail.com",
                            Name = "Colt Hilll",
                            Phone = "505-939-3247"
                        },
                        new
                        {
                            Id = 8,
                            AccountId = 12,
                            Email = "Dora_Pfeffer63@gmail.com",
                            Name = "Frederique Braun",
                            Phone = "946-633-9804"
                        },
                        new
                        {
                            Id = 9,
                            AccountId = 9,
                            Email = "Moshe_Greenholt@hotmail.com",
                            Name = "Eloy Nikolaus",
                            Phone = "324-500-2775 x65321"
                        },
                        new
                        {
                            Id = 10,
                            AccountId = 20,
                            Email = "Kenyatta_Jerde31@yahoo.com",
                            Name = "Daniela Abernathy",
                            Phone = "819.793.6472 x7360"
                        },
                        new
                        {
                            Id = 11,
                            AccountId = 11,
                            Email = "Russell_Mayert@gmail.com",
                            Name = "Jerrell Kling",
                            Phone = "270.757.8647 x97165"
                        },
                        new
                        {
                            Id = 12,
                            AccountId = 21,
                            Email = "Kathryne_Bauch49@hotmail.com",
                            Name = "Newton Marks",
                            Phone = "(944) 814-3840"
                        },
                        new
                        {
                            Id = 13,
                            AccountId = 4,
                            Email = "Carissa_Barrows7@yahoo.com",
                            Name = "Ulises Ritchie",
                            Phone = "1-738-818-3511 x513"
                        },
                        new
                        {
                            Id = 14,
                            AccountId = 22,
                            Email = "Dino.Stiedemann75@yahoo.com",
                            Name = "Larissa Harris",
                            Phone = "1-702-222-1974 x422"
                        },
                        new
                        {
                            Id = 15,
                            AccountId = 23,
                            Email = "Rebekah_Hayes7@gmail.com",
                            Name = "Coty Welch",
                            Phone = "(859) 883-9184"
                        },
                        new
                        {
                            Id = 16,
                            AccountId = 6,
                            Email = "Madaline_Upton@gmail.com",
                            Name = "Kenton Watsica",
                            Phone = "(216) 924-6220"
                        },
                        new
                        {
                            Id = 17,
                            AccountId = 10,
                            Email = "Braden.Christiansen84@gmail.com",
                            Name = "Vicenta Casper",
                            Phone = "849.764.7859 x11159"
                        },
                        new
                        {
                            Id = 18,
                            AccountId = 19,
                            Email = "Natalia.Morar20@yahoo.com",
                            Name = "Brendon Aufderhar",
                            Phone = "(464) 376-7567"
                        },
                        new
                        {
                            Id = 19,
                            AccountId = 22,
                            Email = "Freddy_Davis73@hotmail.com",
                            Name = "Alycia Bashirian",
                            Phone = "1-347-766-1584"
                        },
                        new
                        {
                            Id = 20,
                            AccountId = 12,
                            Email = "Isaiah.Quigley86@gmail.com",
                            Name = "Helena Bode",
                            Phone = "959.678.2749 x169"
                        },
                        new
                        {
                            Id = 21,
                            AccountId = 19,
                            Email = "Sammie.Torphy@yahoo.com",
                            Name = "Annetta Romaguera",
                            Phone = "1-737-859-5845 x23429"
                        },
                        new
                        {
                            Id = 22,
                            AccountId = 14,
                            Email = "Aurore.Mann@gmail.com",
                            Name = "Madeline Kshlerin",
                            Phone = "673-562-6478"
                        },
                        new
                        {
                            Id = 23,
                            AccountId = 2,
                            Email = "Ashlynn_Satterfield@hotmail.com",
                            Name = "Rhea Conroy",
                            Phone = "1-207-752-1912"
                        },
                        new
                        {
                            Id = 24,
                            AccountId = 11,
                            Email = "Laila74@gmail.com",
                            Name = "Alvina Jaskolski",
                            Phone = "1-618-628-0517"
                        },
                        new
                        {
                            Id = 25,
                            AccountId = 8,
                            Email = "Roy84@gmail.com",
                            Name = "Stephen Trantow",
                            Phone = "1-954-360-0138 x59310"
                        },
                        new
                        {
                            Id = 26,
                            AccountId = 25,
                            Email = "Esmeralda_Hammes@yahoo.com",
                            Name = "Veda Herman",
                            Phone = "1-472-346-9106 x6454"
                        },
                        new
                        {
                            Id = 27,
                            AccountId = 15,
                            Email = "Shanel.Bartell6@hotmail.com",
                            Name = "Cayla Doyle",
                            Phone = "1-976-550-3466 x345"
                        },
                        new
                        {
                            Id = 28,
                            AccountId = 17,
                            Email = "Arne75@yahoo.com",
                            Name = "Jayne Johns",
                            Phone = "747.212.3751"
                        },
                        new
                        {
                            Id = 29,
                            AccountId = 7,
                            Email = "Salvador89@yahoo.com",
                            Name = "Cornelius Boehm",
                            Phone = "(999) 379-1604"
                        },
                        new
                        {
                            Id = 30,
                            AccountId = 17,
                            Email = "Michel38@gmail.com",
                            Name = "Wade Johnson",
                            Phone = "346.744.4204"
                        },
                        new
                        {
                            Id = 31,
                            AccountId = 19,
                            Email = "Terrance.Hane@hotmail.com",
                            Name = "Deondre Brown",
                            Phone = "818-308-0986 x769"
                        },
                        new
                        {
                            Id = 32,
                            AccountId = 18,
                            Email = "Isabella_Kohler95@hotmail.com",
                            Name = "Agustina Gutmann",
                            Phone = "458.796.4609"
                        },
                        new
                        {
                            Id = 33,
                            AccountId = 10,
                            Email = "Allison.Streich@yahoo.com",
                            Name = "Maribel Fahey",
                            Phone = "452-903-7600 x4727"
                        },
                        new
                        {
                            Id = 34,
                            AccountId = 10,
                            Email = "Ian_Cole48@hotmail.com",
                            Name = "Ruby Funk",
                            Phone = "(245) 990-7590"
                        },
                        new
                        {
                            Id = 35,
                            AccountId = 21,
                            Email = "Maximo_Luettgen@gmail.com",
                            Name = "Mervin Lynch",
                            Phone = "1-270-288-5776"
                        },
                        new
                        {
                            Id = 36,
                            AccountId = 13,
                            Email = "Raquel.Prosacco48@yahoo.com",
                            Name = "Ahmad Feeney",
                            Phone = "574-851-4300"
                        },
                        new
                        {
                            Id = 37,
                            AccountId = 16,
                            Email = "Linnea.Rippin11@hotmail.com",
                            Name = "Korbin Christiansen",
                            Phone = "(299) 369-2315 x31054"
                        },
                        new
                        {
                            Id = 38,
                            AccountId = 13,
                            Email = "Corrine.Ryan83@gmail.com",
                            Name = "Thomas Johnson",
                            Phone = "1-305-532-9968"
                        },
                        new
                        {
                            Id = 39,
                            AccountId = 12,
                            Email = "Stefanie_Walker@gmail.com",
                            Name = "Dorian Kling",
                            Phone = "305-608-4659"
                        },
                        new
                        {
                            Id = 40,
                            AccountId = 20,
                            Email = "Madeline.Pfannerstill38@yahoo.com",
                            Name = "Nona Auer",
                            Phone = "347.860.0443"
                        },
                        new
                        {
                            Id = 41,
                            AccountId = 22,
                            Email = "Noble4@hotmail.com",
                            Name = "Jillian Koelpin",
                            Phone = "1-618-337-6686"
                        },
                        new
                        {
                            Id = 42,
                            AccountId = 14,
                            Email = "Bella.Kertzmann26@hotmail.com",
                            Name = "Darrion Bartoletti",
                            Phone = "1-543-462-5418 x04938"
                        },
                        new
                        {
                            Id = 43,
                            AccountId = 24,
                            Email = "Osvaldo69@gmail.com",
                            Name = "Kirsten Torp",
                            Phone = "(315) 650-1887"
                        },
                        new
                        {
                            Id = 44,
                            AccountId = 14,
                            Email = "Kirstin90@yahoo.com",
                            Name = "Hiram Mohr",
                            Phone = "1-493-673-6194 x779"
                        },
                        new
                        {
                            Id = 45,
                            AccountId = 10,
                            Email = "Buster69@gmail.com",
                            Name = "Aditya Bogisich",
                            Phone = "699-969-8387 x44873"
                        },
                        new
                        {
                            Id = 46,
                            AccountId = 3,
                            Email = "Duncan33@hotmail.com",
                            Name = "Nikolas Bogisich",
                            Phone = "927.658.3343 x4639"
                        },
                        new
                        {
                            Id = 47,
                            AccountId = 6,
                            Email = "Bettie95@gmail.com",
                            Name = "Boyd Huel",
                            Phone = "248-463-8790 x23302"
                        },
                        new
                        {
                            Id = 48,
                            AccountId = 3,
                            Email = "Carolina.OHara@hotmail.com",
                            Name = "Natalie Bayer",
                            Phone = "1-898-955-7062"
                        },
                        new
                        {
                            Id = 49,
                            AccountId = 21,
                            Email = "Cory.Runolfsson@yahoo.com",
                            Name = "Malika Walter",
                            Phone = "1-389-433-4476 x1242"
                        },
                        new
                        {
                            Id = 50,
                            AccountId = 16,
                            Email = "Saul.Lueilwitz@hotmail.com",
                            Name = "Kiarra Feest",
                            Phone = "1-308-622-4522 x931"
                        },
                        new
                        {
                            Id = 51,
                            AccountId = 15,
                            Email = "Tyshawn.Dickens43@yahoo.com",
                            Name = "Eulalia Connelly",
                            Phone = "854.422.7326 x87264"
                        },
                        new
                        {
                            Id = 52,
                            AccountId = 17,
                            Email = "Darron.Feest@hotmail.com",
                            Name = "Eileen Osinski",
                            Phone = "801.942.1061"
                        },
                        new
                        {
                            Id = 53,
                            AccountId = 25,
                            Email = "Kari89@gmail.com",
                            Name = "Rosella Toy",
                            Phone = "712.584.1775 x307"
                        },
                        new
                        {
                            Id = 54,
                            AccountId = 23,
                            Email = "Mathilde_Adams@gmail.com",
                            Name = "Sigmund Rau",
                            Phone = "831.496.6441"
                        },
                        new
                        {
                            Id = 55,
                            AccountId = 3,
                            Email = "Forest_Langosh51@yahoo.com",
                            Name = "Heloise Carroll",
                            Phone = "765-371-5076 x025"
                        },
                        new
                        {
                            Id = 56,
                            AccountId = 16,
                            Email = "Thelma_Homenick85@hotmail.com",
                            Name = "Madilyn Kozey",
                            Phone = "496.367.6455"
                        },
                        new
                        {
                            Id = 57,
                            AccountId = 9,
                            Email = "Joseph.Johnson51@hotmail.com",
                            Name = "Bernice Prosacco",
                            Phone = "1-392-559-8339 x086"
                        },
                        new
                        {
                            Id = 58,
                            AccountId = 10,
                            Email = "Brandy21@yahoo.com",
                            Name = "Josefa Schmeler",
                            Phone = "1-743-636-0107 x072"
                        },
                        new
                        {
                            Id = 59,
                            AccountId = 13,
                            Email = "Theron62@gmail.com",
                            Name = "Kyla Wiegand",
                            Phone = "720.369.6692"
                        },
                        new
                        {
                            Id = 60,
                            AccountId = 23,
                            Email = "Adrien.Dietrich29@hotmail.com",
                            Name = "Ethel Feil",
                            Phone = "(931) 477-8887 x0286"
                        },
                        new
                        {
                            Id = 61,
                            AccountId = 4,
                            Email = "Bret5@gmail.com",
                            Name = "Franz Powlowski",
                            Phone = "342.366.7165"
                        },
                        new
                        {
                            Id = 62,
                            AccountId = 15,
                            Email = "Lee.Ritchie69@gmail.com",
                            Name = "Juwan Bartell",
                            Phone = "1-838-535-1614 x663"
                        },
                        new
                        {
                            Id = 63,
                            AccountId = 5,
                            Email = "Ines_Lowe50@gmail.com",
                            Name = "Giles Beier",
                            Phone = "665-506-5519 x65130"
                        },
                        new
                        {
                            Id = 64,
                            AccountId = 9,
                            Email = "Landen.Tremblay@hotmail.com",
                            Name = "Juanita Stamm",
                            Phone = "(258) 772-9145 x08022"
                        },
                        new
                        {
                            Id = 65,
                            AccountId = 10,
                            Email = "Maryse_Baumbach@hotmail.com",
                            Name = "Kaitlin Zieme",
                            Phone = "(311) 595-1402"
                        },
                        new
                        {
                            Id = 66,
                            AccountId = 11,
                            Email = "Immanuel34@gmail.com",
                            Name = "Lesly Nader",
                            Phone = "459.292.5381"
                        },
                        new
                        {
                            Id = 67,
                            AccountId = 4,
                            Email = "Mozell.Romaguera47@yahoo.com",
                            Name = "Myrl Feeney",
                            Phone = "409.871.5311 x433"
                        },
                        new
                        {
                            Id = 68,
                            AccountId = 23,
                            Email = "Philip.Kris36@gmail.com",
                            Name = "Lauretta Haley",
                            Phone = "1-317-430-8545"
                        },
                        new
                        {
                            Id = 69,
                            AccountId = 24,
                            Email = "Watson51@hotmail.com",
                            Name = "Genevieve Wehner",
                            Phone = "969-978-1838"
                        },
                        new
                        {
                            Id = 70,
                            AccountId = 25,
                            Email = "Florian.Schulist63@yahoo.com",
                            Name = "Hazle Fritsch",
                            Phone = "739.616.1660"
                        },
                        new
                        {
                            Id = 71,
                            AccountId = 5,
                            Email = "Aglae.Hettinger84@hotmail.com",
                            Name = "Baylee Farrell",
                            Phone = "1-920-921-5111 x27017"
                        },
                        new
                        {
                            Id = 72,
                            AccountId = 8,
                            Email = "Fredrick.Bahringer@yahoo.com",
                            Name = "Ava DuBuque",
                            Phone = "218.950.0849 x8418"
                        },
                        new
                        {
                            Id = 73,
                            AccountId = 12,
                            Email = "Pierce.Koepp@hotmail.com",
                            Name = "Dannie Lang",
                            Phone = "1-497-903-0454 x35468"
                        },
                        new
                        {
                            Id = 74,
                            AccountId = 2,
                            Email = "Zack.Lehner6@yahoo.com",
                            Name = "Cassidy Jaskolski",
                            Phone = "861.437.6344"
                        },
                        new
                        {
                            Id = 75,
                            AccountId = 1,
                            Email = "Kelley_Bruen36@yahoo.com",
                            Name = "Felipe Brown",
                            Phone = "(415) 334-4109 x357"
                        },
                        new
                        {
                            Id = 76,
                            AccountId = 5,
                            Email = "Tyreek.Reynolds@gmail.com",
                            Name = "Levi Deckow",
                            Phone = "659-763-8710 x638"
                        },
                        new
                        {
                            Id = 77,
                            AccountId = 16,
                            Email = "Santos_West30@gmail.com",
                            Name = "Damian Schoen",
                            Phone = "(610) 679-6961"
                        },
                        new
                        {
                            Id = 78,
                            AccountId = 20,
                            Email = "Seamus.Jakubowski86@gmail.com",
                            Name = "Houston Hagenes",
                            Phone = "(252) 648-8567"
                        },
                        new
                        {
                            Id = 79,
                            AccountId = 12,
                            Email = "Luciano53@yahoo.com",
                            Name = "Phoebe Turner",
                            Phone = "1-225-483-6607 x9366"
                        },
                        new
                        {
                            Id = 80,
                            AccountId = 10,
                            Email = "Donald_Cormier37@hotmail.com",
                            Name = "Kathlyn Hauck",
                            Phone = "1-772-491-7790"
                        },
                        new
                        {
                            Id = 81,
                            AccountId = 6,
                            Email = "Edwin_Hoppe70@yahoo.com",
                            Name = "Britney Flatley",
                            Phone = "(662) 373-2904 x49663"
                        },
                        new
                        {
                            Id = 82,
                            AccountId = 1,
                            Email = "Dana63@hotmail.com",
                            Name = "Deron Sporer",
                            Phone = "202.510.7260 x47978"
                        },
                        new
                        {
                            Id = 83,
                            AccountId = 4,
                            Email = "Nya.Braun28@hotmail.com",
                            Name = "Paul Wilderman",
                            Phone = "1-282-906-7710"
                        },
                        new
                        {
                            Id = 84,
                            AccountId = 10,
                            Email = "Alisa_Grant@gmail.com",
                            Name = "Lorena Considine",
                            Phone = "654.985.9238 x4697"
                        },
                        new
                        {
                            Id = 85,
                            AccountId = 13,
                            Email = "Domenica.Leannon83@gmail.com",
                            Name = "Brent Berge",
                            Phone = "625.770.3724"
                        },
                        new
                        {
                            Id = 86,
                            AccountId = 1,
                            Email = "Eden13@hotmail.com",
                            Name = "Brenna Weber",
                            Phone = "(224) 944-4153 x711"
                        },
                        new
                        {
                            Id = 87,
                            AccountId = 5,
                            Email = "Donnie.Predovic@yahoo.com",
                            Name = "Daphne Rowe",
                            Phone = "427.620.4397"
                        },
                        new
                        {
                            Id = 88,
                            AccountId = 4,
                            Email = "Marquis74@gmail.com",
                            Name = "Carli Sanford",
                            Phone = "1-890-900-7927"
                        },
                        new
                        {
                            Id = 89,
                            AccountId = 4,
                            Email = "Rory_Kertzmann@yahoo.com",
                            Name = "Columbus Mann",
                            Phone = "1-266-363-1888 x93419"
                        },
                        new
                        {
                            Id = 90,
                            AccountId = 21,
                            Email = "Lucie_Anderson5@yahoo.com",
                            Name = "Nellie Wintheiser",
                            Phone = "659-671-2978"
                        },
                        new
                        {
                            Id = 91,
                            AccountId = 17,
                            Email = "Geo.Breitenberg@hotmail.com",
                            Name = "Javier Simonis",
                            Phone = "1-899-261-5875 x684"
                        },
                        new
                        {
                            Id = 92,
                            AccountId = 10,
                            Email = "Makenzie_Kshlerin@yahoo.com",
                            Name = "Alberta Block",
                            Phone = "(297) 200-4720 x0514"
                        },
                        new
                        {
                            Id = 93,
                            AccountId = 21,
                            Email = "Milo_Lindgren32@hotmail.com",
                            Name = "Jonathan Kautzer",
                            Phone = "288.244.3625"
                        },
                        new
                        {
                            Id = 94,
                            AccountId = 5,
                            Email = "Devyn_Beatty@gmail.com",
                            Name = "Bette Kautzer",
                            Phone = "1-640-826-1274 x2216"
                        },
                        new
                        {
                            Id = 95,
                            AccountId = 12,
                            Email = "Lia.Kassulke88@hotmail.com",
                            Name = "Bobbie Jast",
                            Phone = "(993) 238-5157 x3949"
                        },
                        new
                        {
                            Id = 96,
                            AccountId = 12,
                            Email = "Idella_Klein83@yahoo.com",
                            Name = "Estefania Torp",
                            Phone = "395.559.6826"
                        },
                        new
                        {
                            Id = 97,
                            AccountId = 11,
                            Email = "Dayton81@yahoo.com",
                            Name = "Reyna Gerlach",
                            Phone = "1-812-215-1141"
                        },
                        new
                        {
                            Id = 98,
                            AccountId = 23,
                            Email = "Adell_Bashirian77@gmail.com",
                            Name = "Brook Brekke",
                            Phone = "929.519.7106 x0890"
                        },
                        new
                        {
                            Id = 99,
                            AccountId = 3,
                            Email = "Willa.Auer13@yahoo.com",
                            Name = "Samara Schoen",
                            Phone = "562.389.8242 x452"
                        },
                        new
                        {
                            Id = 100,
                            AccountId = 19,
                            Email = "Imani_Ziemann12@hotmail.com",
                            Name = "Demarco Metz",
                            Phone = "555.325.4606"
                        });
                });

            modelBuilder.Entity("Lab2.API.Entities.Deal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("ActualRevenue")
                        .HasColumnType("float");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<int>("LeadId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("LeadId")
                        .IsUnique();

                    b.ToTable("Deals");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ActualRevenue = 48138.0,
                            Description = "Officia dolore inventore impedit eveniet accusamus dolores aperiam ullam debitis sequi corporis earum.",
                            LeadId = 1,
                            Status = 0,
                            Title = "Sed non aperiam qui rerum non."
                        },
                        new
                        {
                            Id = 2,
                            ActualRevenue = 53046.0,
                            Description = "Ipsum est delectus nulla beatae quod temporibus tenetur illum dolorem esse cum repellendus quis.",
                            LeadId = 2,
                            Status = 2,
                            Title = "Placeat veritatis nihil dolor cumque totam."
                        },
                        new
                        {
                            Id = 3,
                            ActualRevenue = 456631.0,
                            Description = "Sequi blanditiis sunt ea voluptas aperiam sit numquam nisi adipisci voluptatem nam delectus ratione iusto provident recusandae omnis quae dolores quisquam voluptas dolor dolores dolor est.",
                            LeadId = 3,
                            Status = 0,
                            Title = "Adipisci architecto non expedita et."
                        },
                        new
                        {
                            Id = 4,
                            ActualRevenue = 285657.0,
                            Description = "Saepe rerum iusto consequuntur ducimus dolores rerum cum reiciendis nam aliquid nisi sequi omnis in iusto omnis repudiandae facere repudiandae accusantium esse accusamus.",
                            LeadId = 4,
                            Status = 0,
                            Title = "Tenetur fugit illo sunt."
                        },
                        new
                        {
                            Id = 5,
                            ActualRevenue = 199347.0,
                            Description = "Rerum odit illum ducimus accusantium sunt quibusdam reiciendis fuga labore earum voluptatem iure omnis consequuntur natus debitis dolorem sunt saepe repudiandae iste est voluptatum tenetur occaecati.",
                            LeadId = 5,
                            Status = 0,
                            Title = "Vel corporis hic explicabo rerum."
                        },
                        new
                        {
                            Id = 6,
                            ActualRevenue = 351921.0,
                            Description = "Ut facere sed optio aperiam quibusdam ullam alias quod assumenda ullam nam quis.",
                            LeadId = 6,
                            Status = 2,
                            Title = "Occaecati quo dolor quia voluptas esse."
                        },
                        new
                        {
                            Id = 7,
                            ActualRevenue = 248383.0,
                            Description = "Nobis suscipit laudantium ut repellendus et et a iusto in consectetur quis voluptatibus.",
                            LeadId = 7,
                            Status = 2,
                            Title = "Nostrum sint illo neque autem."
                        },
                        new
                        {
                            Id = 8,
                            ActualRevenue = 478267.0,
                            Description = "Ea culpa facere mollitia dicta quidem aut ut dicta reiciendis sit iure eum molestiae sunt dolores nostrum voluptas sint voluptas ab porro.",
                            LeadId = 8,
                            Status = 2,
                            Title = "Eos velit numquam similique delectus."
                        },
                        new
                        {
                            Id = 9,
                            ActualRevenue = 46026.0,
                            Description = "Temporibus neque illum saepe repellendus consequatur beatae sed amet nemo veritatis soluta ullam animi officia error atque dignissimos eos quo magnam.",
                            LeadId = 9,
                            Status = 2,
                            Title = "Provident quia assumenda."
                        },
                        new
                        {
                            Id = 10,
                            ActualRevenue = 62152.0,
                            Description = "Assumenda ratione aut ea sit veritatis perferendis et eos ut ex vel dolorum unde ut sed ut nihil molestiae aperiam ut fugiat est error et ipsum vel.",
                            LeadId = 10,
                            Status = 0,
                            Title = "Blanditiis molestias voluptas."
                        },
                        new
                        {
                            Id = 11,
                            ActualRevenue = 441757.0,
                            Description = "Iusto rerum voluptate quibusdam quo aut voluptas repudiandae omnis dolorum aut necessitatibus rerum perferendis excepturi reiciendis iusto perspiciatis culpa omnis modi.",
                            LeadId = 11,
                            Status = 2,
                            Title = "Sit veritatis et."
                        },
                        new
                        {
                            Id = 12,
                            ActualRevenue = 212370.0,
                            Description = "Non adipisci esse quia laboriosam porro molestias sit dolore molestiae reprehenderit sequi debitis reprehenderit libero sit illum impedit sed numquam repudiandae consequuntur molestiae.",
                            LeadId = 12,
                            Status = 0,
                            Title = "Fugit vel facere sunt id officiis."
                        },
                        new
                        {
                            Id = 13,
                            ActualRevenue = 399498.0,
                            Description = "Harum odio sapiente officiis aspernatur accusamus voluptatem fugit reprehenderit in.",
                            LeadId = 13,
                            Status = 0,
                            Title = "Eligendi eveniet qui voluptas eum asperiores."
                        },
                        new
                        {
                            Id = 14,
                            ActualRevenue = 290003.0,
                            Description = "Occaecati necessitatibus consectetur voluptates qui adipisci ut odio aspernatur ut.",
                            LeadId = 14,
                            Status = 1,
                            Title = "Molestias aut minima."
                        },
                        new
                        {
                            Id = 15,
                            ActualRevenue = 438904.0,
                            Description = "Dicta cupiditate alias sit maxime quia ut et temporibus eum sapiente blanditiis autem dolorem culpa tempora voluptas qui temporibus minima consequuntur.",
                            LeadId = 15,
                            Status = 2,
                            Title = "Voluptatibus quisquam aperiam accusamus voluptatibus."
                        },
                        new
                        {
                            Id = 16,
                            ActualRevenue = 465765.0,
                            Description = "Cumque et cupiditate necessitatibus facilis quo dolorum nam accusamus harum.",
                            LeadId = 16,
                            Status = 1,
                            Title = "Aspernatur est a qui ea."
                        },
                        new
                        {
                            Id = 17,
                            ActualRevenue = 268732.0,
                            Description = "Praesentium quia soluta consequatur magni consequatur optio sapiente maxime inventore culpa qui at in ea et error et a ullam praesentium omnis repudiandae.",
                            LeadId = 17,
                            Status = 1,
                            Title = "Sint et natus."
                        },
                        new
                        {
                            Id = 18,
                            ActualRevenue = 274866.0,
                            Description = "Ex cumque quisquam possimus magnam voluptate cupiditate ut aliquid temporibus quod autem enim dolorem maxime voluptatibus qui perspiciatis natus numquam omnis quibusdam nam ipsam.",
                            LeadId = 18,
                            Status = 2,
                            Title = "Nobis id occaecati."
                        },
                        new
                        {
                            Id = 19,
                            ActualRevenue = 284074.0,
                            Description = "Enim nam quas rem itaque et modi ullam beatae architecto voluptate nemo voluptatem aut assumenda aliquam asperiores nisi reiciendis voluptatem cumque et sed mollitia magnam animi et qui voluptas rem.",
                            LeadId = 19,
                            Status = 0,
                            Title = "Est omnis autem quia atque corrupti."
                        },
                        new
                        {
                            Id = 20,
                            ActualRevenue = 253199.0,
                            Description = "Nostrum sed aut minima repellat placeat iure facere necessitatibus quis illo rerum.",
                            LeadId = 20,
                            Status = 1,
                            Title = "Laboriosam quae at tempore quasi tenetur."
                        },
                        new
                        {
                            Id = 21,
                            ActualRevenue = 166007.0,
                            Description = "Optio culpa recusandae similique debitis quia qui vel occaecati voluptates quo harum dolore sit quasi nihil non.",
                            LeadId = 21,
                            Status = 0,
                            Title = "Atque aspernatur praesentium libero vero enim."
                        },
                        new
                        {
                            Id = 22,
                            ActualRevenue = 250217.0,
                            Description = "Provident voluptatem laudantium sapiente quisquam non rem reiciendis qui molestiae id reiciendis ducimus quas eos aperiam ratione amet sit et.",
                            LeadId = 22,
                            Status = 2,
                            Title = "Quia deserunt dolores."
                        },
                        new
                        {
                            Id = 23,
                            ActualRevenue = 128932.0,
                            Description = "Est quo pariatur est asperiores commodi distinctio culpa aspernatur aut consequuntur nihil quasi eius nihil quia velit consequatur ut adipisci sint reiciendis sapiente vero molestiae in sit et ab.",
                            LeadId = 23,
                            Status = 0,
                            Title = "Ratione exercitationem pariatur corrupti repellendus."
                        },
                        new
                        {
                            Id = 24,
                            ActualRevenue = 89072.0,
                            Description = "Ab repellat deserunt ut incidunt iure nisi perspiciatis ut quod eligendi doloremque non debitis enim earum rerum.",
                            LeadId = 24,
                            Status = 1,
                            Title = "Facilis ipsa et et."
                        },
                        new
                        {
                            Id = 25,
                            ActualRevenue = 214468.0,
                            Description = "Rerum eos beatae reprehenderit praesentium accusamus voluptas quo aut voluptatem in dicta eos optio voluptatem et facere quo.",
                            LeadId = 25,
                            Status = 2,
                            Title = "Aut sit rerum nemo."
                        },
                        new
                        {
                            Id = 26,
                            ActualRevenue = 340451.0,
                            Description = "Sed est aut deleniti tenetur sed laboriosam laboriosam rerum qui animi similique architecto qui voluptas perferendis sit officia consequuntur maxime sapiente similique exercitationem ad aliquam.",
                            LeadId = 26,
                            Status = 1,
                            Title = "Ut excepturi earum accusamus."
                        },
                        new
                        {
                            Id = 27,
                            ActualRevenue = 312216.0,
                            Description = "Ducimus enim consectetur nobis est et minus ea veritatis minus fuga quia doloremque error quisquam sunt quia eum voluptate impedit voluptates ad molestias et.",
                            LeadId = 27,
                            Status = 1,
                            Title = "Distinctio nulla et sint animi perspiciatis."
                        },
                        new
                        {
                            Id = 28,
                            ActualRevenue = 78886.0,
                            Description = "Amet facilis quo distinctio et molestiae velit corrupti explicabo id fugit ipsam repudiandae id est quia eligendi harum quo commodi.",
                            LeadId = 28,
                            Status = 0,
                            Title = "Eligendi laborum quasi aliquam voluptatum voluptas."
                        },
                        new
                        {
                            Id = 29,
                            ActualRevenue = 46423.0,
                            Description = "Id iste in quas quibusdam quia et illo et minima sunt architecto est consequatur est consequatur deleniti fugit cupiditate placeat.",
                            LeadId = 29,
                            Status = 1,
                            Title = "Vel officia molestiae debitis consequatur."
                        },
                        new
                        {
                            Id = 30,
                            ActualRevenue = 213004.0,
                            Description = "Voluptas et esse asperiores nulla tempore debitis quibusdam nihil eos quis velit in eum id.",
                            LeadId = 30,
                            Status = 0,
                            Title = "Tempora autem doloremque voluptatum iure corrupti."
                        });
                });

            modelBuilder.Entity("Lab2.API.Entities.DealProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DealId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PricePerUnit")
                        .HasColumnType("float");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DealId");

                    b.HasIndex("ProductId");

                    b.ToTable("DealProducts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DealId = 2,
                            PricePerUnit = 84.0,
                            ProductId = 3,
                            Quantity = 14
                        },
                        new
                        {
                            Id = 2,
                            DealId = 2,
                            PricePerUnit = 13.0,
                            ProductId = 6,
                            Quantity = 34
                        },
                        new
                        {
                            Id = 3,
                            DealId = 16,
                            PricePerUnit = 95.0,
                            ProductId = 1,
                            Quantity = 71
                        },
                        new
                        {
                            Id = 4,
                            DealId = 28,
                            PricePerUnit = 62.0,
                            ProductId = 3,
                            Quantity = 66
                        },
                        new
                        {
                            Id = 5,
                            DealId = 27,
                            PricePerUnit = 39.0,
                            ProductId = 8,
                            Quantity = 71
                        });
                });

            modelBuilder.Entity("Lab2.API.Entities.Lead", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<string>("DisqualifiedDescription")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<int?>("DisqualifiedReason")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndedDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("EstimatedRevenue")
                        .HasColumnType("float");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Source")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("Leads");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccountId = 9,
                            Description = "Voluptatem enim sunt nobis nemo sit qui culpa sunt dicta consequuntur fugiat ut in aliquam alias totam autem facere maxime ab id.",
                            EndedDate = new DateTime(2023, 7, 1, 15, 15, 51, 313, DateTimeKind.Local).AddTicks(5484),
                            EstimatedRevenue = 150602.0,
                            Source = 2,
                            Status = 2,
                            Title = "Inventore a aut nihil autem omnis."
                        },
                        new
                        {
                            Id = 2,
                            AccountId = 23,
                            Description = "Qui voluptas ea iure aliquam est est perspiciatis reiciendis ea perferendis autem consequatur quia ut sed tenetur nulla.",
                            EndedDate = new DateTime(2023, 2, 19, 16, 35, 49, 699, DateTimeKind.Local).AddTicks(9883),
                            EstimatedRevenue = 245256.0,
                            Source = 1,
                            Status = 2,
                            Title = "Sit maiores recusandae libero pariatur dolorum."
                        },
                        new
                        {
                            Id = 3,
                            AccountId = 3,
                            Description = "Possimus et et nemo incidunt qui accusantium vero expedita qui molestiae tempora sed similique atque id iusto eligendi molestias eveniet et qui nostrum qui quibusdam omnis non libero repellendus.",
                            EstimatedRevenue = 231223.0,
                            Source = 2,
                            Status = 1,
                            Title = "Et ratione asperiores qui dolore quia."
                        },
                        new
                        {
                            Id = 4,
                            AccountId = 18,
                            Description = "Et iste qui quas impedit dolor enim tempora dicta nostrum facere dolorem accusantium molestiae est doloremque doloremque pariatur.",
                            EstimatedRevenue = 320462.0,
                            Source = 3,
                            Status = 0,
                            Title = "Sed quos ab quos qui culpa."
                        },
                        new
                        {
                            Id = 5,
                            AccountId = 8,
                            Description = "Ut rerum in voluptates consequuntur ipsa blanditiis qui sit quia quia.",
                            EstimatedRevenue = 73479.0,
                            Source = 1,
                            Status = 1,
                            Title = "Eos iure sint eaque corporis."
                        },
                        new
                        {
                            Id = 6,
                            AccountId = 19,
                            Description = "Numquam in sed dolor distinctio autem non ut aliquid aut tempora ut necessitatibus incidunt assumenda dolores praesentium voluptatum omnis temporibus dolore iusto rerum nostrum.",
                            EstimatedRevenue = 32519.0,
                            Source = 0,
                            Status = 0,
                            Title = "Odit quia et."
                        },
                        new
                        {
                            Id = 7,
                            AccountId = 9,
                            Description = "Nam in veniam praesentium velit excepturi explicabo est voluptatum a vitae nihil natus voluptatem aut.",
                            EstimatedRevenue = 206044.0,
                            Source = 4,
                            Status = 1,
                            Title = "Dolore et nobis culpa."
                        },
                        new
                        {
                            Id = 8,
                            AccountId = 10,
                            Description = "Ut voluptas aliquid ut dignissimos enim at eligendi magni vel ducimus ut numquam est animi in nostrum voluptatum mollitia autem minima aliquid dolor voluptatem molestiae vel.",
                            EstimatedRevenue = 67536.0,
                            Source = 0,
                            Status = 0,
                            Title = "Modi tempore quidem consectetur est eum."
                        },
                        new
                        {
                            Id = 9,
                            AccountId = 2,
                            Description = "Aliquam voluptatibus illum in repellendus velit earum facilis est repellat inventore ex ut rem eos qui ex praesentium et doloribus praesentium qui vitae earum cupiditate voluptates vitae quisquam.",
                            DisqualifiedDescription = "Provident est itaque est deserunt consequatur culpa commodi quos deserunt aut quaerat perspiciatis in ad est ipsam quis sit eos beatae.",
                            DisqualifiedReason = 3,
                            EndedDate = new DateTime(2023, 5, 8, 17, 32, 44, 807, DateTimeKind.Local).AddTicks(8894),
                            EstimatedRevenue = 16843.0,
                            Source = 1,
                            Status = 3,
                            Title = "Maiores et iure quibusdam ad."
                        },
                        new
                        {
                            Id = 10,
                            AccountId = 7,
                            Description = "Id perferendis eligendi rerum commodi vel doloribus sed voluptatibus doloremque voluptatum quibusdam iusto iusto quia quae nihil dolore et ratione molestiae recusandae voluptatem modi qui officia dolores incidunt ratione.",
                            EstimatedRevenue = 15696.0,
                            Source = 4,
                            Status = 1,
                            Title = "Non ea expedita et omnis."
                        },
                        new
                        {
                            Id = 11,
                            AccountId = 16,
                            Description = "Est exercitationem voluptas amet perferendis tenetur ea sed ea corrupti nobis quis debitis et necessitatibus doloremque quasi.",
                            EstimatedRevenue = 125318.0,
                            Source = 2,
                            Status = 0,
                            Title = "Enim ipsam hic hic."
                        },
                        new
                        {
                            Id = 12,
                            AccountId = 6,
                            Description = "Eaque vel corrupti quas ut quisquam voluptas et eos distinctio cum sequi sed dolor laboriosam aut sit quasi ut iste asperiores possimus reiciendis voluptas dolor ut.",
                            EndedDate = new DateTime(2023, 5, 14, 16, 29, 19, 47, DateTimeKind.Local).AddTicks(1473),
                            EstimatedRevenue = 314712.0,
                            Source = 3,
                            Status = 2,
                            Title = "Illum reiciendis et ut repellendus placeat."
                        },
                        new
                        {
                            Id = 13,
                            AccountId = 16,
                            Description = "Ipsum eligendi ratione eum saepe dolores accusantium accusantium blanditiis omnis.",
                            EstimatedRevenue = 25777.0,
                            Source = 4,
                            Status = 1,
                            Title = "Soluta similique dignissimos vero perferendis et."
                        },
                        new
                        {
                            Id = 14,
                            AccountId = 3,
                            Description = "Numquam magnam porro et velit quisquam magni vel quo veniam id eligendi et itaque nihil sed et inventore optio a et ut porro facilis dolorem.",
                            EstimatedRevenue = 471446.0,
                            Source = 2,
                            Status = 0,
                            Title = "Est veniam reprehenderit consequatur."
                        },
                        new
                        {
                            Id = 15,
                            AccountId = 10,
                            Description = "Architecto ut placeat quia excepturi sint corrupti modi magnam explicabo aspernatur accusamus ex eum dolor quia.",
                            DisqualifiedDescription = "Et adipisci enim voluptatem et sint eveniet unde odit autem et mollitia fuga vero soluta excepturi architecto impedit aliquid corrupti amet rem sapiente corrupti qui eos et sit officiis.",
                            DisqualifiedReason = 3,
                            EndedDate = new DateTime(2022, 12, 20, 12, 13, 46, 773, DateTimeKind.Local).AddTicks(3425),
                            EstimatedRevenue = 181494.0,
                            Source = 4,
                            Status = 3,
                            Title = "Aliquam enim aut et dolorem."
                        },
                        new
                        {
                            Id = 16,
                            AccountId = 22,
                            Description = "Similique repudiandae amet dolore saepe corporis aliquam vitae ipsa quas necessitatibus sunt porro est atque eum quo nam qui enim mollitia dolorem neque facere corrupti autem et sunt ad.",
                            EndedDate = new DateTime(2023, 7, 15, 19, 25, 37, 526, DateTimeKind.Local).AddTicks(3013),
                            EstimatedRevenue = 306473.0,
                            Source = 1,
                            Status = 2,
                            Title = "Reprehenderit minima libero ea."
                        },
                        new
                        {
                            Id = 17,
                            AccountId = 1,
                            Description = "Nam nihil dolores vero aut omnis vel distinctio incidunt numquam perspiciatis delectus dolor voluptatem voluptas eos repudiandae commodi optio sit ut neque quod nostrum est eius veniam voluptatibus aspernatur nulla.",
                            EstimatedRevenue = 101254.0,
                            Source = 1,
                            Status = 1,
                            Title = "Vel voluptas deserunt quia et quo."
                        },
                        new
                        {
                            Id = 18,
                            AccountId = 10,
                            Description = "Nemo nihil eveniet consequatur doloremque qui nihil alias et doloremque praesentium nesciunt.",
                            EstimatedRevenue = 124409.0,
                            Source = 0,
                            Status = 0,
                            Title = "Sed consequuntur assumenda magni ducimus."
                        },
                        new
                        {
                            Id = 19,
                            AccountId = 11,
                            Description = "Consequuntur rerum tenetur provident et illo mollitia quis tempore aut ut aut enim vitae animi.",
                            EndedDate = new DateTime(2023, 1, 3, 17, 48, 52, 345, DateTimeKind.Local).AddTicks(7878),
                            EstimatedRevenue = 129961.0,
                            Source = 0,
                            Status = 2,
                            Title = "Aut asperiores corrupti odio quo ut."
                        },
                        new
                        {
                            Id = 20,
                            AccountId = 17,
                            Description = "Quam illum dolorum quis nobis nemo expedita accusamus molestias expedita dolores sed deserunt nisi velit magni nesciunt sint est molestiae voluptates culpa assumenda ut sint repellat.",
                            DisqualifiedDescription = "Iure deserunt consectetur in repellat animi quidem in minima nihil in harum ipsam quis sit excepturi.",
                            DisqualifiedReason = 4,
                            EndedDate = new DateTime(2023, 1, 1, 4, 30, 55, 219, DateTimeKind.Local).AddTicks(714),
                            EstimatedRevenue = 436049.0,
                            Source = 1,
                            Status = 3,
                            Title = "Et sit similique sit asperiores ab."
                        },
                        new
                        {
                            Id = 21,
                            AccountId = 13,
                            Description = "Ratione doloremque voluptatum quos ipsa cupiditate vel quia quia voluptas eum ipsam.",
                            EndedDate = new DateTime(2022, 12, 13, 11, 21, 2, 506, DateTimeKind.Local).AddTicks(4448),
                            EstimatedRevenue = 84639.0,
                            Source = 1,
                            Status = 2,
                            Title = "Dolore dolorem ad."
                        },
                        new
                        {
                            Id = 22,
                            AccountId = 22,
                            Description = "Dolores in accusamus debitis consequatur autem repudiandae quo assumenda ipsum sed iste labore dignissimos unde voluptates officia velit maxime soluta voluptas aliquam tenetur tempora aliquam ipsum est odio.",
                            EndedDate = new DateTime(2022, 12, 10, 22, 19, 35, 106, DateTimeKind.Local).AddTicks(6301),
                            EstimatedRevenue = 437078.0,
                            Source = 4,
                            Status = 2,
                            Title = "Cumque beatae hic explicabo optio perferendis."
                        },
                        new
                        {
                            Id = 23,
                            AccountId = 23,
                            Description = "Tenetur optio libero fugit eos illo laboriosam expedita deleniti et.",
                            EstimatedRevenue = 35074.0,
                            Source = 2,
                            Status = 0,
                            Title = "Laboriosam accusamus sed."
                        },
                        new
                        {
                            Id = 24,
                            AccountId = 15,
                            Description = "Non et consequatur deserunt iste ex omnis aut rem qui.",
                            EstimatedRevenue = 162145.0,
                            Source = 0,
                            Status = 1,
                            Title = "Doloremque quia rem rem voluptas."
                        },
                        new
                        {
                            Id = 25,
                            AccountId = 19,
                            Description = "Voluptatem nostrum quia blanditiis qui voluptate rerum praesentium numquam consequatur ut maxime beatae laboriosam et et facere minus id qui pariatur quis libero facilis voluptatem id rerum explicabo voluptatem.",
                            EndedDate = new DateTime(2022, 10, 14, 9, 21, 3, 420, DateTimeKind.Local).AddTicks(9332),
                            EstimatedRevenue = 269366.0,
                            Source = 4,
                            Status = 2,
                            Title = "Harum fuga qui."
                        },
                        new
                        {
                            Id = 26,
                            AccountId = 5,
                            Description = "Libero aliquam iste nihil iste quos aliquam autem minus est sint rerum autem sed commodi rerum velit a ducimus cum.",
                            EstimatedRevenue = 71592.0,
                            Source = 0,
                            Status = 1,
                            Title = "Sit earum aut et natus."
                        },
                        new
                        {
                            Id = 27,
                            AccountId = 22,
                            Description = "Dolor sed exercitationem hic asperiores qui aperiam nam quam sed dolores possimus sapiente minus necessitatibus beatae.",
                            EstimatedRevenue = 396289.0,
                            Source = 4,
                            Status = 1,
                            Title = "Sequi aperiam eum dolores aut."
                        },
                        new
                        {
                            Id = 28,
                            AccountId = 7,
                            Description = "Officiis quae aut illo beatae qui omnis maxime aut quia sequi at asperiores quos hic et dolores tempora sed sint eaque et porro aut est consequatur doloribus.",
                            EstimatedRevenue = 438545.0,
                            Source = 2,
                            Status = 1,
                            Title = "Voluptatum harum numquam iure vel."
                        },
                        new
                        {
                            Id = 29,
                            AccountId = 17,
                            Description = "Omnis consequatur recusandae sed aut temporibus est maiores perspiciatis totam mollitia rerum facere explicabo id esse qui.",
                            EstimatedRevenue = 296358.0,
                            Source = 2,
                            Status = 0,
                            Title = "Mollitia sed nostrum."
                        },
                        new
                        {
                            Id = 30,
                            AccountId = 11,
                            Description = "Suscipit nesciunt laboriosam veritatis a enim et cupiditate nulla quaerat harum culpa omnis ut cupiditate ut id rerum aliquam illo ipsa repellendus dicta inventore consequatur nihil assumenda beatae voluptate.",
                            DisqualifiedDescription = "Est qui tempore aut ipsam mollitia quos voluptatem amet ea ea laboriosam sit corporis ut animi iusto et quia pariatur eaque veniam cupiditate quasi.",
                            DisqualifiedReason = 4,
                            EndedDate = new DateTime(2023, 7, 7, 23, 41, 49, 623, DateTimeKind.Local).AddTicks(9836),
                            EstimatedRevenue = 237526.0,
                            Source = 1,
                            Status = 3,
                            Title = "Totam culpa distinctio."
                        });
                });

            modelBuilder.Entity("Lab2.API.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("ProductCode")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductCode")
                        .IsUnique();

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsAvailable = true,
                            Name = "Sleek Wooden Cheese",
                            Price = 396.0,
                            ProductCode = "PRO-59148968",
                            Type = 0
                        },
                        new
                        {
                            Id = 2,
                            IsAvailable = true,
                            Name = "Incredible Soft Chicken",
                            Price = 888.0,
                            ProductCode = "PRO-19083308",
                            Type = 0
                        },
                        new
                        {
                            Id = 3,
                            IsAvailable = true,
                            Name = "Ergonomic Frozen Chips",
                            Price = 246.0,
                            ProductCode = "PRO-76850509",
                            Type = 1
                        },
                        new
                        {
                            Id = 4,
                            IsAvailable = true,
                            Name = "Rustic Concrete Chicken",
                            Price = 859.0,
                            ProductCode = "PRO-75825942",
                            Type = 0
                        },
                        new
                        {
                            Id = 5,
                            IsAvailable = true,
                            Name = "Generic Cotton Hat",
                            Price = 774.0,
                            ProductCode = "PRO-82284893",
                            Type = 0
                        },
                        new
                        {
                            Id = 6,
                            IsAvailable = true,
                            Name = "Fantastic Rubber Shoes",
                            Price = 35.0,
                            ProductCode = "PRO-89535059",
                            Type = 1
                        },
                        new
                        {
                            Id = 7,
                            IsAvailable = true,
                            Name = "Licensed Metal Tuna",
                            Price = 978.0,
                            ProductCode = "PRO-84344106",
                            Type = 0
                        },
                        new
                        {
                            Id = 8,
                            IsAvailable = true,
                            Name = "Intelligent Steel Bacon",
                            Price = 565.0,
                            ProductCode = "PRO-19442563",
                            Type = 0
                        },
                        new
                        {
                            Id = 9,
                            IsAvailable = true,
                            Name = "Sleek Steel Gloves",
                            Price = 648.0,
                            ProductCode = "PRO-42889199",
                            Type = 0
                        },
                        new
                        {
                            Id = 10,
                            IsAvailable = true,
                            Name = "Rustic Concrete Pants",
                            Price = 412.0,
                            ProductCode = "PRO-44069537",
                            Type = 0
                        });
                });

            modelBuilder.Entity("Lab2.API.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "a13c6887-4bca-4481-a734-1b25ed3459d9",
                            Email = "admin@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "admin",
                            NormalizedEmail = "ADMIN@GMAIL.COM",
                            NormalizedUserName = "ADMIN@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEHUgib1Jclqc1+BjtKjQjja5vO+pF+8EeZGXLPzaMZrFcj1w1gpX+QURYnCNgubfDA==",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UserName = "admin@gmail.com"
                        },
                        new
                        {
                            Id = 2,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "ff9a3db1-30e2-4bcb-a8bf-540cfe3c11b6",
                            Email = "Abraham_Johnston@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Bartholome Feeney",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = 3,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "914e7576-e550-41f1-9836-f781d16a96ad",
                            Email = "Diamond63@yahoo.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Adella Barton",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = 4,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "174daef1-54fd-44d2-801d-b63f98c21030",
                            Email = "Adalberto_Cummings28@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Frieda Zulauf",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = 5,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "67ae35b7-49c7-4336-aee6-20318dc91fbf",
                            Email = "Louie34@hotmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Lea Wyman",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = 6,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "195c4584-9671-4127-8165-cdfb2082aaca",
                            Email = "Alisha_Gibson91@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Kurt Jerde",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = 7,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "a719ac8c-91f4-4765-ad64-73f5a8ba7ea3",
                            Email = "Jevon.Jacobs@yahoo.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Anastacio Parisian",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = 8,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "db0f2bb2-184e-49c3-949d-fa6bd2fc183b",
                            Email = "Markus_Langworth74@yahoo.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Manuel O'Connell",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = 9,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "087784bf-9262-4293-a27e-75050b1666ea",
                            Email = "Madonna_Wintheiser86@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Esperanza Walter",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = 10,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "ff22e903-f5e4-4458-b927-43a65ad9831c",
                            Email = "Natalia45@yahoo.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Kirstin Bednar",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = 11,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "72378b18-f7c8-4103-9ea1-b1561eb17cad",
                            Email = "Kira.OHara@hotmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Jettie Brakus",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = 12,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "187a38c6-6565-4163-a7aa-1fde9771d478",
                            Email = "Anastasia.Miller@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Caleigh Gerhold",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = 13,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "5d3c46ee-1eef-4798-8466-9d9cad3b813b",
                            Email = "Ashlee.OHara21@hotmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Vida Frami",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = 14,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "3614b72d-115d-4449-9e07-e79c36e40b6b",
                            Email = "Gillian38@hotmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Duncan Harris",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = 15,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "f4a2e2c4-215a-411c-bb1e-3d28993ad5a9",
                            Email = "Marcelino.Graham16@yahoo.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Zula Goyette",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false
                        },
                        new
                        {
                            Id = 16,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "816385e3-9443-4254-b846-17fdca67ea85",
                            Email = "Kenyatta_Champlin@hotmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Ciara Emard",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = 2,
                            Name = "User",
                            NormalizedName = "USER"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 4,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 5,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 6,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 7,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 8,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 9,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 10,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 11,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 12,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 13,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 14,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 15,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 16,
                            RoleId = 2
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Lab2.API.Entities.Contact", b =>
                {
                    b.HasOne("Lab2.API.Entities.Account", "Account")
                        .WithMany("Contacts")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("Lab2.API.Entities.Deal", b =>
                {
                    b.HasOne("Lab2.API.Entities.Lead", "Lead")
                        .WithOne("Deal")
                        .HasForeignKey("Lab2.API.Entities.Deal", "LeadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lead");
                });

            modelBuilder.Entity("Lab2.API.Entities.DealProduct", b =>
                {
                    b.HasOne("Lab2.API.Entities.Deal", "Deal")
                        .WithMany("DealProducts")
                        .HasForeignKey("DealId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lab2.API.Entities.Product", "Product")
                        .WithMany("DealProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Deal");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Lab2.API.Entities.Lead", b =>
                {
                    b.HasOne("Lab2.API.Entities.Account", "Account")
                        .WithMany("Leads")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("Lab2.API.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("Lab2.API.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lab2.API.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("Lab2.API.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Lab2.API.Entities.Account", b =>
                {
                    b.Navigation("Contacts");

                    b.Navigation("Leads");
                });

            modelBuilder.Entity("Lab2.API.Entities.Deal", b =>
                {
                    b.Navigation("DealProducts");
                });

            modelBuilder.Entity("Lab2.API.Entities.Lead", b =>
                {
                    b.Navigation("Deal");
                });

            modelBuilder.Entity("Lab2.API.Entities.Product", b =>
                {
                    b.Navigation("DealProducts");
                });
#pragma warning restore 612, 618
        }
    }
}
