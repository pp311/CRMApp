// <auto-generated />
using System;
using Lab2.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Lab2.Migrations
{
    [DbContext(typeof(CRMDbContext))]
    [Migration("20230727085944_add last refresh token")]
    partial class addlastrefreshtoken
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Lab2.Entities.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Phone")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<double>("TotalSales")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("Phone", "Email")
                        .IsUnique()
                        .HasFilter("[Phone] IS NOT NULL AND [Email] IS NOT NULL");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "7695 Rolfson Mountains, Cummingsland, Vietnam",
                            Email = "Jayme83@yahoo.com",
                            Name = "Parker, Johns and Collins",
                            Phone = "1-220-458-8241 x68487",
                            TotalSales = 29646.0
                        },
                        new
                        {
                            Id = 2,
                            Address = "0263 Oberbrunner Prairie, Lake Jeff, Egypt",
                            Email = "Lolita.Predovic@gmail.com",
                            Name = "Franecki, Bahringer and Kulas",
                            Phone = "334-723-2807 x333",
                            TotalSales = 24422.0
                        },
                        new
                        {
                            Id = 3,
                            Address = "1287 Hessel Via, Howellfort, Greece",
                            Email = "Nicole49@hotmail.com",
                            Name = "Lesch - Wiza",
                            Phone = "408-402-6079 x0434",
                            TotalSales = 14922.0
                        },
                        new
                        {
                            Id = 4,
                            Address = "881 Tommie Shores, Douglasview, United States of America",
                            Email = "Oleta49@gmail.com",
                            Name = "Brown - Altenwerth",
                            Phone = "1-717-542-5676 x0069",
                            TotalSales = 4169.0
                        },
                        new
                        {
                            Id = 5,
                            Address = "676 Buckridge Forest, Emardshire, Belgium",
                            Email = "Garfield.Howe@yahoo.com",
                            Name = "Zulauf - O'Connell",
                            Phone = "433-251-9782 x9177",
                            TotalSales = 7235.0
                        },
                        new
                        {
                            Id = 6,
                            Address = "5732 Kuhn Fort, North Karleeview, Gibraltar",
                            Email = "Sigrid_Kub@gmail.com",
                            Name = "Rutherford, Friesen and Sawayn",
                            Phone = "1-465-707-5067",
                            TotalSales = 38652.0
                        },
                        new
                        {
                            Id = 7,
                            Address = "653 Bartell Route, Lake Zelma, Ireland",
                            Email = "Magali29@hotmail.com",
                            Name = "Hilll Group",
                            Phone = "(815) 829-0345 x9949",
                            TotalSales = 7098.0
                        },
                        new
                        {
                            Id = 8,
                            Address = "510 Rickie Port, Satterfieldberg, Iceland",
                            Email = "Marianna96@hotmail.com",
                            Name = "Runolfsdottir - Jenkins",
                            Phone = "851-450-1983 x0723",
                            TotalSales = 14780.0
                        },
                        new
                        {
                            Id = 9,
                            Address = "421 Murphy Inlet, North Max, Finland",
                            Email = "Harrison_Towne37@gmail.com",
                            Name = "Osinski, Kertzmann and Grady",
                            Phone = "578-653-5680 x584",
                            TotalSales = 24195.0
                        },
                        new
                        {
                            Id = 10,
                            Address = "20452 Anissa Mills, South Dewaynehaven, Cocos (Keeling) Islands",
                            Email = "Trycia.Gleichner83@gmail.com",
                            Name = "Nicolas, Legros and Kassulke",
                            Phone = "(541) 319-8751",
                            TotalSales = 15987.0
                        },
                        new
                        {
                            Id = 11,
                            Address = "58442 Oswald Oval, Nienowbury, Monaco",
                            Email = "Hubert.Abbott@yahoo.com",
                            Name = "Fisher - Quigley",
                            Phone = "1-947-610-8711 x32474",
                            TotalSales = 36761.0
                        },
                        new
                        {
                            Id = 12,
                            Address = "9479 Ankunding Pike, Fernandoshire, Saint Kitts and Nevis",
                            Email = "Edyth_Konopelski96@yahoo.com",
                            Name = "Schiller - Fritsch",
                            Phone = "(698) 786-5191",
                            TotalSales = 17904.0
                        },
                        new
                        {
                            Id = 13,
                            Address = "5257 Goyette Ridges, East Jadynborough, New Caledonia",
                            Email = "Danial49@hotmail.com",
                            Name = "Heaney LLC",
                            Phone = "659-414-2517 x44932",
                            TotalSales = 31038.0
                        },
                        new
                        {
                            Id = 14,
                            Address = "02747 Alexanne Port, South Jabariton, Vietnam",
                            Email = "Nathaniel.Sanford@gmail.com",
                            Name = "Romaguera - Walker",
                            Phone = "473.733.7141 x6214",
                            TotalSales = 48587.0
                        },
                        new
                        {
                            Id = 15,
                            Address = "31853 Ansel Brooks, Markusport, Cook Islands",
                            Email = "Dixie.Nienow95@gmail.com",
                            Name = "Breitenberg, Schoen and Von",
                            Phone = "(591) 284-7109 x645",
                            TotalSales = 17465.0
                        },
                        new
                        {
                            Id = 16,
                            Address = "901 Franecki Lake, South Gennaroport, Switzerland",
                            Email = "Filomena.Grady@yahoo.com",
                            Name = "Schmitt, Pouros and Greenfelder",
                            Phone = "348-960-7163 x71010",
                            TotalSales = 45239.0
                        },
                        new
                        {
                            Id = 17,
                            Address = "35894 Moore Ridge, Houstonburgh, Solomon Islands",
                            Email = "Bertram.Gulgowski@gmail.com",
                            Name = "Dietrich, Tromp and Hagenes",
                            Phone = "581-716-8757",
                            TotalSales = 35333.0
                        },
                        new
                        {
                            Id = 18,
                            Address = "97435 Blanche Street, Port Juliettown, Japan",
                            Email = "Alva93@yahoo.com",
                            Name = "Heller LLC",
                            Phone = "(613) 575-1862 x607",
                            TotalSales = 48100.0
                        },
                        new
                        {
                            Id = 19,
                            Address = "27293 Montana Port, South Roxannebury, Tunisia",
                            Email = "Tad20@yahoo.com",
                            Name = "Jaskolski - Schuster",
                            Phone = "(605) 348-3521 x97924",
                            TotalSales = 13994.0
                        },
                        new
                        {
                            Id = 20,
                            Address = "3282 Kohler Forest, Jenkinsville, Samoa",
                            Email = "Jordane.Mueller@hotmail.com",
                            Name = "Dickinson Inc",
                            Phone = "714-251-9390",
                            TotalSales = 21293.0
                        },
                        new
                        {
                            Id = 21,
                            Address = "45085 Casimir Station, Lake Jamal, Paraguay",
                            Email = "Lavon.Hoeger27@yahoo.com",
                            Name = "Heidenreich - Reichel",
                            Phone = "378.625.4308 x286",
                            TotalSales = 24112.0
                        },
                        new
                        {
                            Id = 22,
                            Address = "96520 Bogisich Squares, North Deanna, Monaco",
                            Email = "Ruby_Raynor35@hotmail.com",
                            Name = "Effertz and Sons",
                            Phone = "(939) 686-8580 x07588",
                            TotalSales = 36013.0
                        },
                        new
                        {
                            Id = 23,
                            Address = "804 Ruthie Village, West Tressa, Malawi",
                            Email = "Jordan20@yahoo.com",
                            Name = "Cartwright, Morissette and Smith",
                            Phone = "(904) 614-0028",
                            TotalSales = 18469.0
                        },
                        new
                        {
                            Id = 24,
                            Address = "33027 Asa Spring, Destiniborough, Netherlands",
                            Email = "Annie_Bernier@yahoo.com",
                            Name = "Green, Swift and Hamill",
                            Phone = "545.308.0609",
                            TotalSales = 6837.0
                        },
                        new
                        {
                            Id = 25,
                            Address = "453 Thompson Knolls, Goodwinland, Afghanistan",
                            Email = "Isobel.Kiehn41@hotmail.com",
                            Name = "Blanda - Donnelly",
                            Phone = "802.871.8579",
                            TotalSales = 49058.0
                        });
                });

            modelBuilder.Entity("Lab2.Entities.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Phone")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("Phone", "Email")
                        .IsUnique()
                        .HasFilter("[Phone] IS NOT NULL");

                    b.ToTable("Contacts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccountId = 5,
                            Email = "Maximus.Spinka@yahoo.com",
                            Name = "Edyth Schumm",
                            Phone = "(522) 858-1606 x9940"
                        },
                        new
                        {
                            Id = 2,
                            AccountId = 2,
                            Email = "Justice.Dietrich@hotmail.com",
                            Name = "Alena Jast",
                            Phone = "449.616.5663 x6839"
                        },
                        new
                        {
                            Id = 3,
                            AccountId = 1,
                            Email = "Wade.Parisian@yahoo.com",
                            Name = "Lea Streich",
                            Phone = "(255) 513-1607"
                        },
                        new
                        {
                            Id = 4,
                            AccountId = 16,
                            Email = "Meghan71@hotmail.com",
                            Name = "Cordia Wiza",
                            Phone = "696.565.7042 x4141"
                        },
                        new
                        {
                            Id = 5,
                            AccountId = 3,
                            Email = "Jakob19@hotmail.com",
                            Name = "Ryan Konopelski",
                            Phone = "1-789-716-7911 x3878"
                        },
                        new
                        {
                            Id = 6,
                            AccountId = 15,
                            Email = "Zoe.Olson58@yahoo.com",
                            Name = "Mathias Abbott",
                            Phone = "1-761-743-3953 x7222"
                        },
                        new
                        {
                            Id = 7,
                            AccountId = 10,
                            Email = "Everette81@gmail.com",
                            Name = "Laury Bernhard",
                            Phone = "227-719-5140 x4266"
                        },
                        new
                        {
                            Id = 8,
                            AccountId = 20,
                            Email = "Ubaldo_Kiehn@gmail.com",
                            Name = "Melyna Hagenes",
                            Phone = "805.941.7956 x7609"
                        },
                        new
                        {
                            Id = 9,
                            AccountId = 19,
                            Email = "Velma_Feil@hotmail.com",
                            Name = "Danielle Conn",
                            Phone = "792.406.3746"
                        },
                        new
                        {
                            Id = 10,
                            AccountId = 24,
                            Email = "Gene.Ratke@gmail.com",
                            Name = "Leonel Blanda",
                            Phone = "232.500.8912"
                        },
                        new
                        {
                            Id = 11,
                            AccountId = 13,
                            Email = "Annamae_Zulauf@yahoo.com",
                            Name = "Cora Veum",
                            Phone = "(305) 485-9077 x714"
                        },
                        new
                        {
                            Id = 12,
                            AccountId = 11,
                            Email = "Moses51@gmail.com",
                            Name = "Beulah Glover",
                            Phone = "921-381-5416"
                        },
                        new
                        {
                            Id = 13,
                            AccountId = 16,
                            Email = "Kaylie88@yahoo.com",
                            Name = "Maia Bartoletti",
                            Phone = "(885) 292-5296"
                        },
                        new
                        {
                            Id = 14,
                            AccountId = 17,
                            Email = "Jarret42@hotmail.com",
                            Name = "Jacquelyn Leuschke",
                            Phone = "423-814-3422 x517"
                        },
                        new
                        {
                            Id = 15,
                            AccountId = 5,
                            Email = "Marquis45@yahoo.com",
                            Name = "Wyman Pacocha",
                            Phone = "755.262.3255"
                        },
                        new
                        {
                            Id = 16,
                            AccountId = 8,
                            Email = "Friedrich_Trantow@yahoo.com",
                            Name = "Jacey Wilkinson",
                            Phone = "(578) 624-7306"
                        },
                        new
                        {
                            Id = 17,
                            AccountId = 14,
                            Email = "Josephine_Bednar73@yahoo.com",
                            Name = "Rowland Gislason",
                            Phone = "253.284.9948 x73862"
                        },
                        new
                        {
                            Id = 18,
                            AccountId = 4,
                            Email = "Kristin_Sauer@yahoo.com",
                            Name = "Edna Bechtelar",
                            Phone = "711.362.6572"
                        },
                        new
                        {
                            Id = 19,
                            AccountId = 7,
                            Email = "Lilian_Champlin48@gmail.com",
                            Name = "Mohammad Carter",
                            Phone = "278-760-4490 x26628"
                        },
                        new
                        {
                            Id = 20,
                            AccountId = 1,
                            Email = "Shanelle5@gmail.com",
                            Name = "Mabelle Cormier",
                            Phone = "483.862.0816 x15631"
                        },
                        new
                        {
                            Id = 21,
                            AccountId = 2,
                            Email = "Jadyn45@hotmail.com",
                            Name = "Zaria Koepp",
                            Phone = "841-372-3969 x29884"
                        },
                        new
                        {
                            Id = 22,
                            AccountId = 13,
                            Email = "Demond.Stamm83@gmail.com",
                            Name = "Madelyn Donnelly",
                            Phone = "1-970-846-3467 x57562"
                        },
                        new
                        {
                            Id = 23,
                            AccountId = 5,
                            Email = "Alexane.Huels44@hotmail.com",
                            Name = "Elvis Ritchie",
                            Phone = "(947) 495-5531 x66971"
                        },
                        new
                        {
                            Id = 24,
                            AccountId = 2,
                            Email = "Blaze40@yahoo.com",
                            Name = "Ayla Pfeffer",
                            Phone = "546-330-3841 x3609"
                        },
                        new
                        {
                            Id = 25,
                            AccountId = 11,
                            Email = "Brady98@gmail.com",
                            Name = "Judge DuBuque",
                            Phone = "786.258.6145 x044"
                        },
                        new
                        {
                            Id = 26,
                            AccountId = 19,
                            Email = "Sam_Crist@gmail.com",
                            Name = "Queenie Lindgren",
                            Phone = "465-614-3173"
                        },
                        new
                        {
                            Id = 27,
                            AccountId = 19,
                            Email = "Michael84@yahoo.com",
                            Name = "Clifford Walter",
                            Phone = "924-457-5831 x31401"
                        },
                        new
                        {
                            Id = 28,
                            AccountId = 7,
                            Email = "Dena_Kilback97@yahoo.com",
                            Name = "Sedrick Bergstrom",
                            Phone = "354-660-6795"
                        },
                        new
                        {
                            Id = 29,
                            AccountId = 9,
                            Email = "Gerald.Buckridge71@yahoo.com",
                            Name = "Lavon Casper",
                            Phone = "347-280-8449 x103"
                        },
                        new
                        {
                            Id = 30,
                            AccountId = 11,
                            Email = "Mathilde7@hotmail.com",
                            Name = "Bernita Krajcik",
                            Phone = "841-227-7410 x892"
                        },
                        new
                        {
                            Id = 31,
                            AccountId = 10,
                            Email = "Loma35@yahoo.com",
                            Name = "Karianne Willms",
                            Phone = "431.991.1987"
                        },
                        new
                        {
                            Id = 32,
                            AccountId = 24,
                            Email = "Daija_Jacobi52@yahoo.com",
                            Name = "Darren Murray",
                            Phone = "(371) 483-7964"
                        },
                        new
                        {
                            Id = 33,
                            AccountId = 4,
                            Email = "Brook.Nolan@hotmail.com",
                            Name = "Harmon Orn",
                            Phone = "213.412.6949 x9350"
                        },
                        new
                        {
                            Id = 34,
                            AccountId = 2,
                            Email = "Arjun47@hotmail.com",
                            Name = "Karen Jacobs",
                            Phone = "914.461.4829 x818"
                        },
                        new
                        {
                            Id = 35,
                            AccountId = 14,
                            Email = "Cassie.Waelchi23@gmail.com",
                            Name = "Hans Klocko",
                            Phone = "1-682-606-6313"
                        },
                        new
                        {
                            Id = 36,
                            AccountId = 6,
                            Email = "Braeden_Thiel@gmail.com",
                            Name = "Jaydon Hermiston",
                            Phone = "(262) 978-7750"
                        },
                        new
                        {
                            Id = 37,
                            AccountId = 23,
                            Email = "Maude_Baumbach79@hotmail.com",
                            Name = "Pink Ward",
                            Phone = "1-300-402-2982 x613"
                        },
                        new
                        {
                            Id = 38,
                            AccountId = 13,
                            Email = "Kaela.Kris@gmail.com",
                            Name = "Mohammed Muller",
                            Phone = "558-844-8539 x902"
                        },
                        new
                        {
                            Id = 39,
                            AccountId = 1,
                            Email = "Santiago.Konopelski@yahoo.com",
                            Name = "Mckenzie Stanton",
                            Phone = "(995) 359-1165"
                        },
                        new
                        {
                            Id = 40,
                            AccountId = 15,
                            Email = "Caitlyn.Moore0@hotmail.com",
                            Name = "Karelle Schinner",
                            Phone = "348.417.2536 x9609"
                        },
                        new
                        {
                            Id = 41,
                            AccountId = 6,
                            Email = "Terence_McClure@yahoo.com",
                            Name = "Gabrielle Morar",
                            Phone = "(724) 444-6868"
                        },
                        new
                        {
                            Id = 42,
                            AccountId = 3,
                            Email = "Kelton57@yahoo.com",
                            Name = "Jenifer Wyman",
                            Phone = "471-467-1835"
                        },
                        new
                        {
                            Id = 43,
                            AccountId = 23,
                            Email = "Desiree64@gmail.com",
                            Name = "Burdette Wisoky",
                            Phone = "(651) 597-1979 x162"
                        },
                        new
                        {
                            Id = 44,
                            AccountId = 3,
                            Email = "Ila.Hagenes@hotmail.com",
                            Name = "Ephraim Carroll",
                            Phone = "343-601-0567"
                        },
                        new
                        {
                            Id = 45,
                            AccountId = 3,
                            Email = "Buford.Schneider@yahoo.com",
                            Name = "Bessie Wintheiser",
                            Phone = "1-601-490-8059 x355"
                        },
                        new
                        {
                            Id = 46,
                            AccountId = 20,
                            Email = "Faustino_Walker53@gmail.com",
                            Name = "Kory Gaylord",
                            Phone = "745.805.5359 x202"
                        },
                        new
                        {
                            Id = 47,
                            AccountId = 12,
                            Email = "Raina_Keebler@hotmail.com",
                            Name = "Casey Stamm",
                            Phone = "(486) 240-3100 x3492"
                        },
                        new
                        {
                            Id = 48,
                            AccountId = 20,
                            Email = "Franco.Conn@yahoo.com",
                            Name = "Isaias Carter",
                            Phone = "1-249-214-4142 x46843"
                        },
                        new
                        {
                            Id = 49,
                            AccountId = 14,
                            Email = "Abdullah_Roob75@hotmail.com",
                            Name = "Yasmin Barrows",
                            Phone = "1-205-672-8427"
                        },
                        new
                        {
                            Id = 50,
                            AccountId = 24,
                            Email = "Tressie_Turcotte@yahoo.com",
                            Name = "Orrin Will",
                            Phone = "(359) 823-0563"
                        },
                        new
                        {
                            Id = 51,
                            AccountId = 12,
                            Email = "Ali62@yahoo.com",
                            Name = "Monserrat Schneider",
                            Phone = "490-740-1193 x862"
                        },
                        new
                        {
                            Id = 52,
                            AccountId = 20,
                            Email = "Linnea_Mayer@yahoo.com",
                            Name = "Erika Crona",
                            Phone = "676.206.0257"
                        },
                        new
                        {
                            Id = 53,
                            AccountId = 19,
                            Email = "Odell.Spinka95@yahoo.com",
                            Name = "Nelson Auer",
                            Phone = "(965) 202-5103 x427"
                        },
                        new
                        {
                            Id = 54,
                            AccountId = 15,
                            Email = "Darius.Hessel@gmail.com",
                            Name = "Aron Christiansen",
                            Phone = "(666) 572-5020"
                        },
                        new
                        {
                            Id = 55,
                            AccountId = 4,
                            Email = "Madelyn45@hotmail.com",
                            Name = "Georgette Rempel",
                            Phone = "505.629.9710"
                        },
                        new
                        {
                            Id = 56,
                            AccountId = 2,
                            Email = "Jonas85@hotmail.com",
                            Name = "Tremaine Fahey",
                            Phone = "(812) 917-2880"
                        },
                        new
                        {
                            Id = 57,
                            AccountId = 4,
                            Email = "Nichole9@gmail.com",
                            Name = "Zelda Ondricka",
                            Phone = "589.329.1889 x30384"
                        },
                        new
                        {
                            Id = 58,
                            AccountId = 16,
                            Email = "Conor31@hotmail.com",
                            Name = "Vickie Cummerata",
                            Phone = "1-432-553-8640 x8295"
                        },
                        new
                        {
                            Id = 59,
                            AccountId = 24,
                            Email = "Lyda64@gmail.com",
                            Name = "Sophie Daugherty",
                            Phone = "1-762-605-6479"
                        },
                        new
                        {
                            Id = 60,
                            AccountId = 19,
                            Email = "Alexandrine.Douglas@yahoo.com",
                            Name = "Kendrick Hills",
                            Phone = "448.910.6076 x366"
                        },
                        new
                        {
                            Id = 61,
                            AccountId = 21,
                            Email = "Zane.Lakin12@gmail.com",
                            Name = "Yolanda Williamson",
                            Phone = "778-692-1767"
                        },
                        new
                        {
                            Id = 62,
                            AccountId = 19,
                            Email = "Marvin36@hotmail.com",
                            Name = "Colby Heller",
                            Phone = "661.701.9902"
                        },
                        new
                        {
                            Id = 63,
                            AccountId = 25,
                            Email = "Clarissa40@yahoo.com",
                            Name = "Ari Schulist",
                            Phone = "(862) 931-4397 x5731"
                        },
                        new
                        {
                            Id = 64,
                            AccountId = 9,
                            Email = "Johnathan_Conn97@hotmail.com",
                            Name = "Camylle Erdman",
                            Phone = "1-951-750-0647"
                        },
                        new
                        {
                            Id = 65,
                            AccountId = 23,
                            Email = "Barney_Kilback@gmail.com",
                            Name = "Nathaniel Nader",
                            Phone = "(694) 203-0766"
                        },
                        new
                        {
                            Id = 66,
                            AccountId = 4,
                            Email = "Alec.Russel@yahoo.com",
                            Name = "Joe Grady",
                            Phone = "1-435-446-3628"
                        },
                        new
                        {
                            Id = 67,
                            AccountId = 16,
                            Email = "Melyssa_Schaden85@hotmail.com",
                            Name = "Daren Kling",
                            Phone = "398.466.5645"
                        },
                        new
                        {
                            Id = 68,
                            AccountId = 12,
                            Email = "Emie_Quigley@hotmail.com",
                            Name = "Jarret Krajcik",
                            Phone = "925.389.6780 x057"
                        },
                        new
                        {
                            Id = 69,
                            AccountId = 24,
                            Email = "Daniela14@gmail.com",
                            Name = "Elvie Crist",
                            Phone = "424.516.4139"
                        },
                        new
                        {
                            Id = 70,
                            AccountId = 20,
                            Email = "Estevan0@yahoo.com",
                            Name = "Rory Carter",
                            Phone = "255.296.2006 x07278"
                        },
                        new
                        {
                            Id = 71,
                            AccountId = 12,
                            Email = "Bo.Prohaska@yahoo.com",
                            Name = "Dane Jaskolski",
                            Phone = "1-403-973-9606"
                        },
                        new
                        {
                            Id = 72,
                            AccountId = 25,
                            Email = "Alysha_Brown43@gmail.com",
                            Name = "Kassandra Hickle",
                            Phone = "(496) 896-1732"
                        },
                        new
                        {
                            Id = 73,
                            AccountId = 8,
                            Email = "Larissa_Stamm@gmail.com",
                            Name = "Emery Bruen",
                            Phone = "729-578-9145"
                        },
                        new
                        {
                            Id = 74,
                            AccountId = 8,
                            Email = "Letha.Dietrich@gmail.com",
                            Name = "Granville Wilderman",
                            Phone = "510.958.1464 x954"
                        },
                        new
                        {
                            Id = 75,
                            AccountId = 18,
                            Email = "Kris.Maggio35@hotmail.com",
                            Name = "Jeanie Beer",
                            Phone = "267-441-2556 x05906"
                        },
                        new
                        {
                            Id = 76,
                            AccountId = 17,
                            Email = "Reese.Johnson99@hotmail.com",
                            Name = "Natasha Maggio",
                            Phone = "451-932-7731"
                        },
                        new
                        {
                            Id = 77,
                            AccountId = 4,
                            Email = "Jefferey_Nitzsche@gmail.com",
                            Name = "Annabel Kunde",
                            Phone = "(768) 917-5217"
                        },
                        new
                        {
                            Id = 78,
                            AccountId = 21,
                            Email = "Coy48@gmail.com",
                            Name = "Carmen Leuschke",
                            Phone = "917.292.2012 x20068"
                        },
                        new
                        {
                            Id = 79,
                            AccountId = 17,
                            Email = "Javon76@yahoo.com",
                            Name = "Newell Gutkowski",
                            Phone = "(784) 857-9481"
                        },
                        new
                        {
                            Id = 80,
                            AccountId = 10,
                            Email = "Clair39@gmail.com",
                            Name = "Immanuel Stanton",
                            Phone = "349-400-1878 x057"
                        },
                        new
                        {
                            Id = 81,
                            AccountId = 10,
                            Email = "Penelope95@hotmail.com",
                            Name = "Maurice Stark",
                            Phone = "1-311-670-0174 x18788"
                        },
                        new
                        {
                            Id = 82,
                            AccountId = 4,
                            Email = "Kathryne_Nitzsche@yahoo.com",
                            Name = "Earnest Okuneva",
                            Phone = "1-598-716-5655 x9646"
                        },
                        new
                        {
                            Id = 83,
                            AccountId = 9,
                            Email = "Marisol.Rogahn81@yahoo.com",
                            Name = "Selena Kuhn",
                            Phone = "1-572-909-8954 x1191"
                        },
                        new
                        {
                            Id = 84,
                            AccountId = 18,
                            Email = "Jayden_Deckow@gmail.com",
                            Name = "Nyasia Kertzmann",
                            Phone = "836.574.2469 x516"
                        },
                        new
                        {
                            Id = 85,
                            AccountId = 3,
                            Email = "Berta_Olson88@gmail.com",
                            Name = "Roosevelt Mraz",
                            Phone = "(531) 592-7645 x877"
                        },
                        new
                        {
                            Id = 86,
                            AccountId = 21,
                            Email = "Jeffrey54@gmail.com",
                            Name = "Raymond Harber",
                            Phone = "(929) 291-4510"
                        },
                        new
                        {
                            Id = 87,
                            AccountId = 11,
                            Email = "Jada.Gutkowski11@yahoo.com",
                            Name = "Elton Glover",
                            Phone = "(640) 862-7056 x6697"
                        },
                        new
                        {
                            Id = 88,
                            AccountId = 7,
                            Email = "Laurie.Schaden37@hotmail.com",
                            Name = "Nathaniel Wilkinson",
                            Phone = "423-828-2574 x7261"
                        },
                        new
                        {
                            Id = 89,
                            AccountId = 5,
                            Email = "Jewell82@gmail.com",
                            Name = "Marques Pollich",
                            Phone = "1-233-356-4229"
                        },
                        new
                        {
                            Id = 90,
                            AccountId = 5,
                            Email = "Maximo.Kulas74@hotmail.com",
                            Name = "Milo Hilpert",
                            Phone = "(841) 524-2331 x93685"
                        },
                        new
                        {
                            Id = 91,
                            AccountId = 22,
                            Email = "Rae_Kling@hotmail.com",
                            Name = "Marcia Boyer",
                            Phone = "840.385.0681 x723"
                        },
                        new
                        {
                            Id = 92,
                            AccountId = 20,
                            Email = "Korey_Cassin@yahoo.com",
                            Name = "Kristina Ebert",
                            Phone = "845.215.6233"
                        },
                        new
                        {
                            Id = 93,
                            AccountId = 4,
                            Email = "Noe_Schultz25@yahoo.com",
                            Name = "Garry Daugherty",
                            Phone = "(523) 765-6283 x4927"
                        },
                        new
                        {
                            Id = 94,
                            AccountId = 8,
                            Email = "Gilberto_Feil@gmail.com",
                            Name = "Ora Herzog",
                            Phone = "(299) 220-6174"
                        },
                        new
                        {
                            Id = 95,
                            AccountId = 23,
                            Email = "Pattie96@gmail.com",
                            Name = "Brandt Bernier",
                            Phone = "485-239-2499"
                        },
                        new
                        {
                            Id = 96,
                            AccountId = 22,
                            Email = "Darren.Lockman@gmail.com",
                            Name = "Jacklyn Becker",
                            Phone = "483.702.4773 x59309"
                        },
                        new
                        {
                            Id = 97,
                            AccountId = 4,
                            Email = "Jarod_Jakubowski83@yahoo.com",
                            Name = "Anya Vandervort",
                            Phone = "(467) 501-2803 x3331"
                        },
                        new
                        {
                            Id = 98,
                            AccountId = 3,
                            Email = "Kennith38@hotmail.com",
                            Name = "Fae Rodriguez",
                            Phone = "(698) 695-4397 x691"
                        },
                        new
                        {
                            Id = 99,
                            AccountId = 14,
                            Email = "Yesenia25@gmail.com",
                            Name = "Joyce Feil",
                            Phone = "(830) 836-6188"
                        },
                        new
                        {
                            Id = 100,
                            AccountId = 10,
                            Email = "Brooks.Lindgren31@yahoo.com",
                            Name = "Kitty Corkery",
                            Phone = "1-657-489-9330 x135"
                        });
                });

            modelBuilder.Entity("Lab2.Entities.Deal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("ActualRevenue")
                        .HasColumnType("float");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<int>("LeadId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("LeadId")
                        .IsUnique();

                    b.ToTable("Deals");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ActualRevenue = 326912.0,
                            Description = "Sapiente vel officia quo adipisci perspiciatis omnis illum in ipsa architecto et enim rerum fuga reprehenderit ut.",
                            LeadId = 1,
                            Status = 0,
                            Title = "Deserunt provident at."
                        },
                        new
                        {
                            Id = 2,
                            ActualRevenue = 424208.0,
                            Description = "Et officiis non quo incidunt dolorem et saepe tempora perferendis consectetur nemo ipsam modi molestias quaerat dolor est consequuntur voluptatem dignissimos aut.",
                            LeadId = 2,
                            Status = 2,
                            Title = "Amet sed eveniet autem adipisci."
                        },
                        new
                        {
                            Id = 3,
                            ActualRevenue = 463108.0,
                            Description = "Dolores nihil autem sunt dolor modi rerum sequi aut est quod enim nemo ad veniam dolores quo ut error fuga.",
                            LeadId = 3,
                            Status = 0,
                            Title = "Expedita quibusdam labore."
                        },
                        new
                        {
                            Id = 4,
                            ActualRevenue = 292782.0,
                            Description = "Consectetur modi nemo sapiente temporibus quos ducimus cum aliquid aperiam rem laborum voluptate et odit aut pariatur earum quas.",
                            LeadId = 4,
                            Status = 1,
                            Title = "Quia voluptatem modi explicabo."
                        },
                        new
                        {
                            Id = 5,
                            ActualRevenue = 109567.0,
                            Description = "Fuga illum et tempora nemo qui corrupti provident modi veritatis alias qui similique quod hic vero aut sit odit odio consequuntur unde optio omnis distinctio consequatur alias aliquid.",
                            LeadId = 5,
                            Status = 0,
                            Title = "Deleniti ea ut."
                        },
                        new
                        {
                            Id = 6,
                            ActualRevenue = 110555.0,
                            Description = "Ut vitae nihil sed sapiente sit in cum deserunt iure dignissimos est quisquam quo nemo nemo voluptate et eos placeat deserunt aut in et qui sint.",
                            LeadId = 6,
                            Status = 1,
                            Title = "Accusantium dolores voluptas."
                        },
                        new
                        {
                            Id = 7,
                            ActualRevenue = 319983.0,
                            Description = "Magni fuga perferendis dolorum consequatur consequatur quam occaecati doloremque vitae aut consequatur eius quis optio eveniet neque aut et et porro sit.",
                            LeadId = 7,
                            Status = 1,
                            Title = "Non voluptas ad saepe blanditiis tempore."
                        },
                        new
                        {
                            Id = 8,
                            ActualRevenue = 499327.0,
                            Description = "Debitis quia provident eos quod molestiae est consequuntur similique molestias non id et temporibus voluptatem ipsa voluptas libero tempore necessitatibus aut in voluptatem fugiat et commodi repellat odit.",
                            LeadId = 8,
                            Status = 1,
                            Title = "Corrupti beatae reprehenderit omnis eos aperiam."
                        },
                        new
                        {
                            Id = 9,
                            ActualRevenue = 185531.0,
                            Description = "Occaecati non quia mollitia aspernatur beatae doloribus voluptatum autem deleniti blanditiis tempore et ipsam dolor amet ipsam ut consequatur hic excepturi porro ut ut et nihil rerum commodi quidem possimus.",
                            LeadId = 9,
                            Status = 1,
                            Title = "Quidem qui ea autem est doloribus."
                        },
                        new
                        {
                            Id = 10,
                            ActualRevenue = 427231.0,
                            Description = "Voluptas dolor earum beatae excepturi soluta reiciendis laboriosam harum minima at consectetur dolores quia rerum dignissimos expedita mollitia rem officiis dolorem provident tempora.",
                            LeadId = 10,
                            Status = 2,
                            Title = "Ut et odit tempore consectetur."
                        },
                        new
                        {
                            Id = 11,
                            ActualRevenue = 277320.0,
                            Description = "Voluptatem et expedita quas nobis nisi quis ullam ut voluptas expedita accusantium sit dolorem assumenda expedita.",
                            LeadId = 11,
                            Status = 2,
                            Title = "Repellat odio est praesentium."
                        },
                        new
                        {
                            Id = 12,
                            ActualRevenue = 82956.0,
                            Description = "Sunt est et autem possimus dolores ducimus porro incidunt autem provident consequatur omnis in voluptates officiis culpa aut beatae voluptas est.",
                            LeadId = 12,
                            Status = 0,
                            Title = "Aliquam vitae minus."
                        },
                        new
                        {
                            Id = 13,
                            ActualRevenue = 250037.0,
                            Description = "Debitis rerum ut et rerum et nihil aut non sed dolorem ea non omnis non molestias quia itaque est voluptas temporibus maiores.",
                            LeadId = 13,
                            Status = 0,
                            Title = "Possimus a adipisci nostrum."
                        },
                        new
                        {
                            Id = 14,
                            ActualRevenue = 362293.0,
                            Description = "Ut repudiandae incidunt quia odit voluptatibus aut velit sit omnis nihil eos hic sequi soluta nam.",
                            LeadId = 14,
                            Status = 0,
                            Title = "Et velit et quas sit esse."
                        },
                        new
                        {
                            Id = 15,
                            ActualRevenue = 436060.0,
                            Description = "Adipisci voluptas beatae vel itaque beatae voluptatem vero vero dolorum consequatur in velit voluptatibus consectetur quidem accusamus.",
                            LeadId = 15,
                            Status = 1,
                            Title = "Itaque neque omnis tempore tempora quisquam."
                        },
                        new
                        {
                            Id = 16,
                            ActualRevenue = 288435.0,
                            Description = "Doloremque repellendus nesciunt ipsum itaque nemo placeat adipisci vel nihil.",
                            LeadId = 16,
                            Status = 2,
                            Title = "Dolores nesciunt possimus omnis."
                        },
                        new
                        {
                            Id = 17,
                            ActualRevenue = 32580.0,
                            Description = "Hic unde sed et blanditiis sunt aperiam perspiciatis est consequatur et a error quibusdam molestias.",
                            LeadId = 17,
                            Status = 2,
                            Title = "Accusamus sunt debitis voluptas qui."
                        },
                        new
                        {
                            Id = 18,
                            ActualRevenue = 102238.0,
                            Description = "Consequatur earum aliquid voluptate laborum ipsum in voluptas non quae voluptatem.",
                            LeadId = 18,
                            Status = 0,
                            Title = "Soluta est delectus vel."
                        },
                        new
                        {
                            Id = 19,
                            ActualRevenue = 193577.0,
                            Description = "Doloremque illum velit atque totam suscipit praesentium at earum alias officiis odit vero perferendis a qui minus quis quia est in in minus repudiandae ut.",
                            LeadId = 19,
                            Status = 2,
                            Title = "Facere maxime tempora repudiandae ut."
                        },
                        new
                        {
                            Id = 20,
                            ActualRevenue = 467089.0,
                            Description = "Omnis natus consequuntur fugit deleniti similique et ad quas est culpa nemo aut nemo rerum maxime aut consequatur excepturi quidem quisquam ab.",
                            LeadId = 20,
                            Status = 2,
                            Title = "Ut rerum eius iusto sint."
                        },
                        new
                        {
                            Id = 21,
                            ActualRevenue = 74833.0,
                            Description = "Molestiae beatae aut dignissimos deleniti deleniti eum quo quod non.",
                            LeadId = 21,
                            Status = 1,
                            Title = "Aut tenetur eius accusantium."
                        },
                        new
                        {
                            Id = 22,
                            ActualRevenue = 334273.0,
                            Description = "Assumenda soluta ea vero omnis autem dolores odit nisi ut magni repellendus nihil in dolores reprehenderit voluptatem qui minus inventore velit a quia eos et qui qui est iusto omnis.",
                            LeadId = 22,
                            Status = 0,
                            Title = "Vitae ipsum quidem."
                        },
                        new
                        {
                            Id = 23,
                            ActualRevenue = 343217.0,
                            Description = "Maiores illum molestiae dolor incidunt inventore facere nesciunt incidunt sint quia earum consequatur est enim repellat tempore voluptas est ipsa perspiciatis mollitia eaque mollitia.",
                            LeadId = 23,
                            Status = 2,
                            Title = "Quae iure sint ea."
                        },
                        new
                        {
                            Id = 24,
                            ActualRevenue = 261317.0,
                            Description = "Sequi laboriosam hic sint sunt sint et nesciunt vitae sequi qui ut accusamus non voluptatem autem mollitia molestias aut eaque eveniet non enim omnis est nostrum saepe vel.",
                            LeadId = 24,
                            Status = 0,
                            Title = "Sequi ullam veniam quas."
                        },
                        new
                        {
                            Id = 25,
                            ActualRevenue = 344971.0,
                            Description = "Doloribus totam quasi sequi ut autem molestiae at eos ratione sit ut optio voluptas qui quia libero dolorum odit porro odio aut voluptates.",
                            LeadId = 25,
                            Status = 1,
                            Title = "Esse distinctio consectetur non nisi ut."
                        },
                        new
                        {
                            Id = 26,
                            ActualRevenue = 73198.0,
                            Description = "Eum omnis ut aut voluptates molestiae est laudantium occaecati eum aut non et omnis ipsa hic recusandae consequatur recusandae quia mollitia esse error dicta.",
                            LeadId = 26,
                            Status = 1,
                            Title = "Eaque itaque sit sit."
                        },
                        new
                        {
                            Id = 27,
                            ActualRevenue = 385975.0,
                            Description = "Eos ut fugiat provident doloribus molestiae rem similique laudantium et pariatur rem consequatur.",
                            LeadId = 27,
                            Status = 2,
                            Title = "Quo tenetur qui ex excepturi."
                        },
                        new
                        {
                            Id = 28,
                            ActualRevenue = 316056.0,
                            Description = "Itaque dolorem aut eius qui expedita voluptates nesciunt sint ipsa sit facere aut vero tempore quia officiis reiciendis qui ipsam et.",
                            LeadId = 28,
                            Status = 1,
                            Title = "Aut velit molestias atque asperiores."
                        },
                        new
                        {
                            Id = 29,
                            ActualRevenue = 493436.0,
                            Description = "Eum quis asperiores sunt autem at rerum vel corporis sapiente fugiat est soluta molestiae corrupti recusandae distinctio autem tempore sit veritatis dolore aliquam ut.",
                            LeadId = 29,
                            Status = 2,
                            Title = "Dolorum qui quae et."
                        },
                        new
                        {
                            Id = 30,
                            ActualRevenue = 123049.0,
                            Description = "Sequi blanditiis voluptas vitae est nam corrupti et blanditiis assumenda ut necessitatibus quod cumque sunt.",
                            LeadId = 30,
                            Status = 2,
                            Title = "Quasi sint sed voluptate et repudiandae."
                        });
                });

            modelBuilder.Entity("Lab2.Entities.DealProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DealId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PricePerUnit")
                        .HasColumnType("float");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DealId");

                    b.HasIndex("ProductId");

                    b.ToTable("DealProducts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DealId = 1,
                            PricePerUnit = 77.0,
                            ProductId = 5,
                            Quantity = 7
                        },
                        new
                        {
                            Id = 2,
                            DealId = 27,
                            PricePerUnit = 25.0,
                            ProductId = 8,
                            Quantity = 8
                        },
                        new
                        {
                            Id = 3,
                            DealId = 11,
                            PricePerUnit = 22.0,
                            ProductId = 6,
                            Quantity = 5
                        },
                        new
                        {
                            Id = 4,
                            DealId = 3,
                            PricePerUnit = 68.0,
                            ProductId = 8,
                            Quantity = 33
                        },
                        new
                        {
                            Id = 5,
                            DealId = 12,
                            PricePerUnit = 93.0,
                            ProductId = 1,
                            Quantity = 86
                        });
                });

            modelBuilder.Entity("Lab2.Entities.Lead", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<string>("DisqualifiedDescription")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<int?>("DisqualifiedReason")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndedDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("EstimatedRevenue")
                        .HasColumnType("float");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Source")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("Leads");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccountId = 5,
                            Description = "Magnam perferendis occaecati et alias voluptatum voluptatibus tempora voluptates inventore rerum eius debitis quisquam vero porro rem aut.",
                            EstimatedRevenue = 338126.0,
                            Source = 3,
                            Status = 0,
                            Title = "Sed voluptatem libero ea."
                        },
                        new
                        {
                            Id = 2,
                            AccountId = 2,
                            Description = "In quo veniam qui est molestias non aut eum perspiciatis ea dolorum eligendi quidem molestiae quam consequatur eos aspernatur porro consequatur eum.",
                            DisqualifiedDescription = "Dolorum quibusdam laborum est corporis consequatur eum ut ratione cum molestiae reprehenderit earum eius incidunt est deserunt voluptate facere voluptatem nihil dolor.",
                            DisqualifiedReason = 4,
                            EndedDate = new DateTime(2023, 1, 12, 15, 7, 36, 318, DateTimeKind.Local).AddTicks(2466),
                            EstimatedRevenue = 268534.0,
                            Source = 0,
                            Status = 3,
                            Title = "Sed veniam impedit aperiam adipisci corrupti."
                        },
                        new
                        {
                            Id = 3,
                            AccountId = 14,
                            Description = "Praesentium temporibus architecto est provident facilis sint qui rerum officiis praesentium unde et asperiores praesentium eaque velit est quisquam neque necessitatibus dolor sunt voluptate molestiae quibusdam.",
                            DisqualifiedDescription = "Sed veniam rerum voluptatem eos numquam quia assumenda asperiores nam doloremque consequatur sint laboriosam.",
                            DisqualifiedReason = 4,
                            EndedDate = new DateTime(2023, 7, 3, 13, 25, 20, 758, DateTimeKind.Local).AddTicks(2310),
                            EstimatedRevenue = 203197.0,
                            Source = 4,
                            Status = 3,
                            Title = "Eligendi et qui reiciendis excepturi maxime."
                        },
                        new
                        {
                            Id = 4,
                            AccountId = 25,
                            Description = "Perspiciatis omnis magni et eos sed expedita voluptas repudiandae nihil ut numquam aspernatur nobis placeat totam sint autem id quis harum iure dolores id sunt ea.",
                            EstimatedRevenue = 421933.0,
                            Source = 3,
                            Status = 1,
                            Title = "Saepe architecto aut consequuntur."
                        },
                        new
                        {
                            Id = 5,
                            AccountId = 15,
                            Description = "Temporibus a ut fugit ipsa sit accusantium ipsum eaque et saepe et totam dolores aspernatur.",
                            DisqualifiedDescription = "Aut modi autem nulla amet ea amet quibusdam qui incidunt neque placeat.",
                            DisqualifiedReason = 1,
                            EndedDate = new DateTime(2022, 10, 7, 15, 38, 47, 198, DateTimeKind.Local).AddTicks(7758),
                            EstimatedRevenue = 242385.0,
                            Source = 2,
                            Status = 3,
                            Title = "Quaerat fugiat rerum ut."
                        },
                        new
                        {
                            Id = 6,
                            AccountId = 22,
                            Description = "Voluptatum et voluptatem eum autem maiores sit commodi et fuga animi laboriosam.",
                            EstimatedRevenue = 498569.0,
                            Source = 2,
                            Status = 1,
                            Title = "Non blanditiis blanditiis."
                        },
                        new
                        {
                            Id = 7,
                            AccountId = 7,
                            Description = "Numquam ipsum in consectetur et nostrum laborum aspernatur adipisci voluptatem repellat laboriosam.",
                            EndedDate = new DateTime(2023, 1, 29, 11, 13, 12, 678, DateTimeKind.Local).AddTicks(3137),
                            EstimatedRevenue = 82859.0,
                            Source = 0,
                            Status = 2,
                            Title = "Provident quos nihil placeat aut non."
                        },
                        new
                        {
                            Id = 8,
                            AccountId = 21,
                            Description = "Quae beatae laboriosam minus corporis cupiditate eum quidem nulla in voluptatem sint sint nisi accusamus quibusdam iusto reprehenderit delectus possimus aspernatur quidem quia dolorem tempore ea quaerat quidem minima.",
                            EstimatedRevenue = 312893.0,
                            Source = 4,
                            Status = 0,
                            Title = "Dignissimos sint quibusdam non architecto architecto."
                        },
                        new
                        {
                            Id = 9,
                            AccountId = 20,
                            Description = "Tenetur sit ut eos facere ea nulla iste optio quas tempore ullam esse.",
                            DisqualifiedDescription = "Consequuntur quis labore deserunt minus voluptate assumenda sit occaecati voluptatibus eos beatae cum harum suscipit atque magnam fugit expedita quibusdam ut quia.",
                            DisqualifiedReason = 1,
                            EndedDate = new DateTime(2023, 1, 6, 10, 56, 15, 773, DateTimeKind.Local).AddTicks(7501),
                            EstimatedRevenue = 137423.0,
                            Source = 2,
                            Status = 3,
                            Title = "Consectetur debitis maiores ab ullam quia."
                        },
                        new
                        {
                            Id = 10,
                            AccountId = 10,
                            Description = "Vero assumenda non esse explicabo earum deserunt sint voluptas est sit rerum sit voluptatem placeat earum doloremque praesentium occaecati dignissimos est eum non distinctio.",
                            EndedDate = new DateTime(2023, 3, 1, 21, 19, 35, 439, DateTimeKind.Local).AddTicks(9835),
                            EstimatedRevenue = 485851.0,
                            Source = 0,
                            Status = 2,
                            Title = "Alias debitis dignissimos iusto quam."
                        },
                        new
                        {
                            Id = 11,
                            AccountId = 13,
                            Description = "Et assumenda aut impedit corporis vero ut molestias error blanditiis eum distinctio doloremque quia voluptate totam ea ut quo aut ut laboriosam ullam beatae quia asperiores.",
                            DisqualifiedDescription = "Exercitationem ab officiis est enim autem aspernatur quam et excepturi consequatur magni sit autem corporis quis quo quibusdam quam facere magnam sunt temporibus esse assumenda sint vitae voluptatem ad et.",
                            DisqualifiedReason = 4,
                            EndedDate = new DateTime(2022, 8, 17, 23, 15, 55, 449, DateTimeKind.Local).AddTicks(1802),
                            EstimatedRevenue = 172146.0,
                            Source = 4,
                            Status = 3,
                            Title = "Quos omnis ad."
                        },
                        new
                        {
                            Id = 12,
                            AccountId = 21,
                            Description = "Dolor quis aut in possimus aut atque rem molestias et sunt omnis ut ut dolores est dignissimos provident cupiditate ut fugiat.",
                            EstimatedRevenue = 35681.0,
                            Source = 2,
                            Status = 0,
                            Title = "Dolore optio qui et."
                        },
                        new
                        {
                            Id = 13,
                            AccountId = 21,
                            Description = "Voluptas debitis nemo repellendus ipsam explicabo voluptas ut illum praesentium et est dolorum.",
                            EstimatedRevenue = 86741.0,
                            Source = 1,
                            Status = 1,
                            Title = "Soluta doloremque tempore tempore soluta."
                        },
                        new
                        {
                            Id = 14,
                            AccountId = 2,
                            Description = "Vel ab qui aliquam necessitatibus deserunt pariatur earum autem assumenda exercitationem distinctio a distinctio placeat consectetur enim.",
                            EndedDate = new DateTime(2023, 1, 15, 21, 13, 37, 435, DateTimeKind.Local).AddTicks(5568),
                            EstimatedRevenue = 287355.0,
                            Source = 3,
                            Status = 2,
                            Title = "Quo nisi illo cupiditate."
                        },
                        new
                        {
                            Id = 15,
                            AccountId = 23,
                            Description = "Dicta ipsum quidem eligendi quos corporis et ex consequatur debitis voluptatem dolor dolorem fuga excepturi ab voluptatem consectetur quaerat et aliquam et doloremque laboriosam saepe quidem maiores dolorum doloribus.",
                            EstimatedRevenue = 348373.0,
                            Source = 2,
                            Status = 1,
                            Title = "Qui et aut veritatis omnis nam."
                        },
                        new
                        {
                            Id = 16,
                            AccountId = 14,
                            Description = "Placeat soluta velit minima autem nam provident animi et consectetur molestiae excepturi enim repellat.",
                            EstimatedRevenue = 6073.0,
                            Source = 0,
                            Status = 0,
                            Title = "Et ex pariatur pariatur sunt vel."
                        },
                        new
                        {
                            Id = 17,
                            AccountId = 4,
                            Description = "Aut esse quis nobis perferendis voluptatem quam magnam est at velit nulla quia aliquam earum ut autem quam eaque ut cum dicta quo distinctio expedita et.",
                            EstimatedRevenue = 358710.0,
                            Source = 2,
                            Status = 0,
                            Title = "Cumque a sequi iusto."
                        },
                        new
                        {
                            Id = 18,
                            AccountId = 19,
                            Description = "Eveniet atque distinctio amet sunt voluptates aspernatur quasi non eveniet unde porro nisi quidem deleniti quia hic officiis dolorum cumque tempore.",
                            EstimatedRevenue = 347624.0,
                            Source = 2,
                            Status = 1,
                            Title = "Quas id voluptatem in autem."
                        },
                        new
                        {
                            Id = 19,
                            AccountId = 2,
                            Description = "Officia pariatur sunt amet excepturi repellendus blanditiis quo ullam dolor labore quo.",
                            EndedDate = new DateTime(2022, 9, 19, 23, 7, 36, 729, DateTimeKind.Local).AddTicks(426),
                            EstimatedRevenue = 305719.0,
                            Source = 2,
                            Status = 2,
                            Title = "Qui alias quia."
                        },
                        new
                        {
                            Id = 20,
                            AccountId = 11,
                            Description = "Aut odit magni ut voluptatem ut iusto ut occaecati aut quam nihil quod quis dolor ea vel voluptatem reiciendis nemo.",
                            EstimatedRevenue = 473753.0,
                            Source = 1,
                            Status = 1,
                            Title = "Ipsa animi ipsum quia."
                        },
                        new
                        {
                            Id = 21,
                            AccountId = 21,
                            Description = "Deserunt tenetur eveniet doloribus et incidunt accusantium voluptates repellat voluptas provident et eum saepe voluptatem vel ea quidem deleniti cumque quo fuga reiciendis quos cum labore id consequatur commodi autem.",
                            EstimatedRevenue = 435583.0,
                            Source = 4,
                            Status = 1,
                            Title = "Nostrum in est asperiores maxime."
                        },
                        new
                        {
                            Id = 22,
                            AccountId = 22,
                            Description = "Vel facere adipisci sunt qui quae non quia vero occaecati harum deleniti voluptate velit cum deleniti molestiae cum quas optio tempore inventore ea aut eveniet consequuntur eos et sunt dolorum.",
                            EstimatedRevenue = 404344.0,
                            Source = 0,
                            Status = 0,
                            Title = "Dicta dolor harum at voluptas impedit."
                        },
                        new
                        {
                            Id = 23,
                            AccountId = 23,
                            Description = "Qui iure ex qui eveniet sed dolores in optio perspiciatis omnis nihil.",
                            DisqualifiedDescription = "Et dolores dignissimos dolor facere corporis neque ratione eaque rerum nemo saepe recusandae consequatur facere iusto placeat delectus maxime qui eveniet quam voluptas voluptatem esse fugit ut.",
                            DisqualifiedReason = 1,
                            EndedDate = new DateTime(2022, 9, 13, 7, 33, 27, 267, DateTimeKind.Local).AddTicks(4873),
                            EstimatedRevenue = 32518.0,
                            Source = 3,
                            Status = 3,
                            Title = "Ipsum facilis id dicta distinctio voluptatem."
                        },
                        new
                        {
                            Id = 24,
                            AccountId = 8,
                            Description = "Nihil eum et excepturi ipsum error eius aliquam eius maiores aspernatur earum voluptatem possimus voluptates quas.",
                            EndedDate = new DateTime(2023, 7, 22, 13, 12, 47, 284, DateTimeKind.Local).AddTicks(6723),
                            EstimatedRevenue = 467252.0,
                            Source = 0,
                            Status = 2,
                            Title = "Enim libero quae nihil incidunt tempora."
                        },
                        new
                        {
                            Id = 25,
                            AccountId = 11,
                            Description = "Ea sit alias natus possimus voluptas deserunt quia asperiores et quia et doloremque veritatis.",
                            EstimatedRevenue = 25629.0,
                            Source = 4,
                            Status = 0,
                            Title = "Voluptatem architecto ut ad dolores corporis."
                        },
                        new
                        {
                            Id = 26,
                            AccountId = 4,
                            Description = "Voluptatem temporibus maxime temporibus ipsum repudiandae voluptatum rerum minima rem nihil consectetur non ea.",
                            EstimatedRevenue = 459413.0,
                            Source = 4,
                            Status = 0,
                            Title = "Incidunt reprehenderit nemo non."
                        },
                        new
                        {
                            Id = 27,
                            AccountId = 19,
                            Description = "Cum tenetur eum facere debitis sapiente dolorem delectus illo eligendi qui quisquam accusantium inventore sit porro minima debitis quaerat.",
                            EndedDate = new DateTime(2023, 5, 1, 10, 28, 6, 460, DateTimeKind.Local).AddTicks(1190),
                            EstimatedRevenue = 470625.0,
                            Source = 0,
                            Status = 2,
                            Title = "Eius corrupti magni distinctio sed."
                        },
                        new
                        {
                            Id = 28,
                            AccountId = 11,
                            Description = "Omnis consequatur aut quidem facere similique aut et iste et omnis et et non dolor ipsa sed sit quo reiciendis occaecati qui velit voluptatem enim ducimus nisi.",
                            EstimatedRevenue = 30384.0,
                            Source = 0,
                            Status = 1,
                            Title = "Suscipit voluptatum perspiciatis odit dolor."
                        },
                        new
                        {
                            Id = 29,
                            AccountId = 18,
                            Description = "Est blanditiis odit velit provident sapiente accusamus ex omnis et dolores architecto exercitationem sint cum laudantium quo fugit ut necessitatibus ut laborum optio est.",
                            DisqualifiedDescription = "Distinctio amet sed repellendus fugit debitis cum possimus velit similique quos quae quia cum autem magnam in dolorum.",
                            DisqualifiedReason = 1,
                            EndedDate = new DateTime(2023, 2, 6, 3, 10, 57, 879, DateTimeKind.Local).AddTicks(7696),
                            EstimatedRevenue = 14840.0,
                            Source = 1,
                            Status = 3,
                            Title = "Ullam itaque nemo rerum."
                        },
                        new
                        {
                            Id = 30,
                            AccountId = 20,
                            Description = "Rerum error id praesentium placeat quidem tenetur molestias nihil molestiae rerum quae temporibus consequuntur ullam sit fugit suscipit placeat sed.",
                            EstimatedRevenue = 435798.0,
                            Source = 0,
                            Status = 1,
                            Title = "Explicabo molestias maxime."
                        });
                });

            modelBuilder.Entity("Lab2.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("ProductCode")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductCode")
                        .IsUnique();

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsAvailable = true,
                            Name = "Fantastic Wooden Fish",
                            Price = 632.0,
                            ProductCode = "PRO-92725553",
                            Type = 0
                        },
                        new
                        {
                            Id = 2,
                            IsAvailable = true,
                            Name = "Sleek Concrete Chair",
                            Price = 485.0,
                            ProductCode = "PRO-19880907",
                            Type = 0
                        },
                        new
                        {
                            Id = 3,
                            IsAvailable = true,
                            Name = "Practical Concrete Chair",
                            Price = 765.0,
                            ProductCode = "PRO-78088948",
                            Type = 0
                        },
                        new
                        {
                            Id = 4,
                            IsAvailable = true,
                            Name = "Ergonomic Plastic Bike",
                            Price = 348.0,
                            ProductCode = "PRO-03613245",
                            Type = 1
                        },
                        new
                        {
                            Id = 5,
                            IsAvailable = true,
                            Name = "Awesome Steel Pants",
                            Price = 873.0,
                            ProductCode = "PRO-90918735",
                            Type = 0
                        },
                        new
                        {
                            Id = 6,
                            IsAvailable = true,
                            Name = "Tasty Soft Towels",
                            Price = 777.0,
                            ProductCode = "PRO-30271425",
                            Type = 1
                        },
                        new
                        {
                            Id = 7,
                            IsAvailable = true,
                            Name = "Refined Frozen Mouse",
                            Price = 253.0,
                            ProductCode = "PRO-13046323",
                            Type = 0
                        },
                        new
                        {
                            Id = 8,
                            IsAvailable = true,
                            Name = "Generic Rubber Chips",
                            Price = 497.0,
                            ProductCode = "PRO-57344577",
                            Type = 1
                        },
                        new
                        {
                            Id = 9,
                            IsAvailable = true,
                            Name = "Intelligent Metal Table",
                            Price = 928.0,
                            ProductCode = "PRO-30872783",
                            Type = 0
                        },
                        new
                        {
                            Id = 10,
                            IsAvailable = true,
                            Name = "Refined Concrete Bike",
                            Price = 10.0,
                            ProductCode = "PRO-97472896",
                            Type = 0
                        });
                });

            modelBuilder.Entity("Lab2.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("LastRefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RefreshTokenLifetime")
                        .HasColumnType("datetime2");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "d2ed0e10-7076-4ac1-b6d5-f93f2236707d",
                            Email = "admin@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "admin",
                            NormalizedEmail = "ADMIN@GMAIL.COM",
                            NormalizedUserName = "ADMIN@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEISPPdkvr6G+PgwexnBIyjhiBsDEMJ3QDjwm834ss6P57Hmr5zc7/N1L0xay7j7dHA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "e50f6dcf-88c0-4456-a7a6-47ba082386a2",
                            TwoFactorEnabled = false,
                            UserName = "admin@gmail.com"
                        },
                        new
                        {
                            Id = 2,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "05e65c46-4862-41d0-8e09-1d6091d21163",
                            Email = "Damian_Bauch19@hotmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Roma Trantow",
                            PasswordHash = "AQAAAAIAAYagAAAAEJRPxSRB8t5dywBXewxC2pblhWj2p0vLrLTHwa14kCloqyObcXJX7Tx33iZM1r5yBA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "f22b7e28-e482-454f-8b5d-12a163f130c3",
                            TwoFactorEnabled = false,
                            UserName = "Damian_Bauch19@hotmail.com"
                        },
                        new
                        {
                            Id = 3,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "c5f4aa4f-112a-4733-85cf-05cb8724c50f",
                            Email = "Connie.Klocko86@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Jaylen Marvin",
                            PasswordHash = "AQAAAAIAAYagAAAAELY/0iwAbsVtHM8aXUexQGFPtpV2V3qHZyRZX2iYD687KkT9yRJ6b/RKgRniBoKPQg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "0f7f63c1-4cc2-4a6e-8e9b-d9cde7c06560",
                            TwoFactorEnabled = false,
                            UserName = "Connie.Klocko86@gmail.com"
                        },
                        new
                        {
                            Id = 4,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "4d1ad72c-1240-4b1f-9fd0-d5bf4e4376c1",
                            Email = "Devin34@yahoo.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Hailey Willms",
                            PasswordHash = "AQAAAAIAAYagAAAAECU1158v51gNHFjfsL/vJCOsm2QHULywFjqXHGuDpyTBBEvnXln/5wFOjnTGWr3KpA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "72d6eafe-eded-4e98-ba30-b43012483d63",
                            TwoFactorEnabled = false,
                            UserName = "Devin34@yahoo.com"
                        },
                        new
                        {
                            Id = 5,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "b4bef67d-f560-4d34-b216-507bbf9d5e9f",
                            Email = "Roxane_Kris@hotmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Cody Howe",
                            PasswordHash = "AQAAAAIAAYagAAAAEFFkoVgUA0pJ7V2KBKFe/f8rMqFlL1m4nKP7t3ZEqL26xGj9o8VNrfDalWrNZPot1A==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "3aa4b59c-b50e-47d7-a4e9-31eb8a5d911c",
                            TwoFactorEnabled = false,
                            UserName = "Roxane_Kris@hotmail.com"
                        },
                        new
                        {
                            Id = 6,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "c10dcd33-ea55-4c92-99d7-daa48b51c026",
                            Email = "Esta_Barrows26@hotmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Fausto MacGyver",
                            PasswordHash = "AQAAAAIAAYagAAAAENU28cK9uioyNYkeEie9lFjx+tzoLWYNGE7+deg601TKnNoEhvp3yci0THkbF+DAfQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "b30cc5fe-c027-4054-a899-0832534ef6b4",
                            TwoFactorEnabled = false,
                            UserName = "Esta_Barrows26@hotmail.com"
                        },
                        new
                        {
                            Id = 7,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "0ddb1af7-bc94-4d78-996c-9b92bd61b3ab",
                            Email = "Emie.Emard49@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Jalyn Sanford",
                            PasswordHash = "AQAAAAIAAYagAAAAELDhatPXMUYjdLzy9cx1ikymsvzdeiqQ4S8yGy4iwn9AKq7gbxVS/Ael6r/uSlyRkQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "c31f55c9-5c73-42fc-b5de-51a00372b44f",
                            TwoFactorEnabled = false,
                            UserName = "Emie.Emard49@gmail.com"
                        },
                        new
                        {
                            Id = 8,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "fbb974dd-c345-48b3-ab4d-d553791faea0",
                            Email = "Erwin_Dicki@yahoo.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Adeline Luettgen",
                            PasswordHash = "AQAAAAIAAYagAAAAELpgmpPO3eo/kJACUkbX0lvHmJ4mFI9zp1QwRTbetJecJ8VGS9TlQC4ErdOcPxw3bg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "78e1cc1f-79d1-426e-96bd-e89f9968d008",
                            TwoFactorEnabled = false,
                            UserName = "Erwin_Dicki@yahoo.com"
                        },
                        new
                        {
                            Id = 9,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "ddfcb257-ac9c-42e3-ac22-a8ecc37f7bcd",
                            Email = "Gaetano_Cummings@hotmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Marc Kertzmann",
                            PasswordHash = "AQAAAAIAAYagAAAAEFHwvLmsFhVZfDKrPc69ukkW01w+2VZ/O3S4iXfXtkopOrSVqhcCxqPKInxRI8kKzg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "3382e0db-0a4a-4c05-88ac-fe3361c63c05",
                            TwoFactorEnabled = false,
                            UserName = "Gaetano_Cummings@hotmail.com"
                        },
                        new
                        {
                            Id = 10,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "7a23a0c9-0af8-4347-a592-54ecb5931cf7",
                            Email = "Joana_Botsford20@yahoo.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Laverne Fadel",
                            PasswordHash = "AQAAAAIAAYagAAAAEB1nGrL2+zXAljCAlY+A4f+vhOTZc/u7nRD+L1lGPJSdp81thkyZ0qCyeKm6uMKKbw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "94c6f9ee-f200-4d3c-a3fb-beb34c866967",
                            TwoFactorEnabled = false,
                            UserName = "Joana_Botsford20@yahoo.com"
                        },
                        new
                        {
                            Id = 11,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "d8c59baf-e508-4138-8916-56698db652a3",
                            Email = "Earnestine71@yahoo.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Jacklyn Mertz",
                            PasswordHash = "AQAAAAIAAYagAAAAED9p/LpFiKWs6e7CPKdNm/gPisamTh/rRV04cfQ1XUuxW9A2+SfGZxFT5XWGx/xUog==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "4f60c51e-3617-4ff1-a737-d7c221a7874b",
                            TwoFactorEnabled = false,
                            UserName = "Earnestine71@yahoo.com"
                        },
                        new
                        {
                            Id = 12,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "c5c85bc0-2363-4cbc-a26c-dbd2ebb6ac9d",
                            Email = "Elissa13@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Onie Skiles",
                            PasswordHash = "AQAAAAIAAYagAAAAEPDax/dfL2k1afpxRbwAt+xFeKJe4K79zet7k7eLx+N92srg/Sk7pCwJifQiCvxKfg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "f7d52097-f6c1-4a45-9c6d-c781b9480965",
                            TwoFactorEnabled = false,
                            UserName = "Elissa13@gmail.com"
                        },
                        new
                        {
                            Id = 13,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "6538d5cd-dbf0-4e10-a1d3-d3fbf2feee8e",
                            Email = "Mariela_Kunde@hotmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Laury Hand",
                            PasswordHash = "AQAAAAIAAYagAAAAEOqgxbIA4exvDa80GMUVkSm4K1UpZlt56WCJMi2QiRgyf86BWJbcJp/yIBsFfTRmGg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "73ffc9d4-a599-4626-86ee-1e11d885ecab",
                            TwoFactorEnabled = false,
                            UserName = "Mariela_Kunde@hotmail.com"
                        },
                        new
                        {
                            Id = 14,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "f3ab0a57-beb1-462d-9466-0a861be317e0",
                            Email = "Salvador68@yahoo.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Lila Barton",
                            PasswordHash = "AQAAAAIAAYagAAAAEMVPFke4vPD23lkizVElIUAbboZw3dEaJQ97yZ+4dzdgN+K53CC2wb9MdppNA9CxlA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "94f0d0d6-fc57-4e73-896a-8b70e0eabc93",
                            TwoFactorEnabled = false,
                            UserName = "Salvador68@yahoo.com"
                        },
                        new
                        {
                            Id = 15,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "d31bd3ce-d145-430d-a776-6acaa67130cd",
                            Email = "Tyree_Dickinson25@yahoo.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Bryana Hegmann",
                            PasswordHash = "AQAAAAIAAYagAAAAEJk24G29kdgizvF2jg+mSm7FlMqI+bSbp4RpFvqBhm57pWPVQhc3sJbDYSt0EM2IXg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "70b31e0e-b793-4a6e-82c0-f33851a8f5fe",
                            TwoFactorEnabled = false,
                            UserName = "Tyree_Dickinson25@yahoo.com"
                        },
                        new
                        {
                            Id = 16,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "1ee03d35-7ec6-4689-91ff-4a95e3c912cd",
                            Email = "Laurine.Herman@hotmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            Name = "Miguel Mayer",
                            PasswordHash = "AQAAAAIAAYagAAAAEDfwHmog/VrtFARb5RbAxIQk7HZRFnEn/zWD+TELN9yHf81otbjgQ7TsuBP74IZA9Q==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "5c67eea0-0535-4de3-9618-31f37b5d91de",
                            TwoFactorEnabled = false,
                            UserName = "Laurine.Herman@hotmail.com"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = 2,
                            Name = "User",
                            NormalizedName = "USER"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 4,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 5,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 6,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 7,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 8,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 9,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 10,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 11,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 12,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 13,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 14,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 15,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 16,
                            RoleId = 2
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Lab2.Entities.Contact", b =>
                {
                    b.HasOne("Lab2.Entities.Account", "Account")
                        .WithMany("Contacts")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("Lab2.Entities.Deal", b =>
                {
                    b.HasOne("Lab2.Entities.Lead", "Lead")
                        .WithOne("Deal")
                        .HasForeignKey("Lab2.Entities.Deal", "LeadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lead");
                });

            modelBuilder.Entity("Lab2.Entities.DealProduct", b =>
                {
                    b.HasOne("Lab2.Entities.Deal", "Deal")
                        .WithMany("DealProducts")
                        .HasForeignKey("DealId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lab2.Entities.Product", "Product")
                        .WithMany("DealProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Deal");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Lab2.Entities.Lead", b =>
                {
                    b.HasOne("Lab2.Entities.Account", "Account")
                        .WithMany("Leads")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("Lab2.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("Lab2.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lab2.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("Lab2.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Lab2.Entities.Account", b =>
                {
                    b.Navigation("Contacts");

                    b.Navigation("Leads");
                });

            modelBuilder.Entity("Lab2.Entities.Deal", b =>
                {
                    b.Navigation("DealProducts");
                });

            modelBuilder.Entity("Lab2.Entities.Lead", b =>
                {
                    b.Navigation("Deal");
                });

            modelBuilder.Entity("Lab2.Entities.Product", b =>
                {
                    b.Navigation("DealProducts");
                });
#pragma warning restore 612, 618
        }
    }
}
